#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ModernHud_CompassIcon

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "Altar_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ModernHud_CompassIcon.WBP_ModernHud_CompassIcon_C
// 0x00D8 (0x03C0 - 0x02E8)
class UWBP_ModernHud_CompassIcon_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Icon;                                              // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModernHud_Compass_C*               CompassWidget;                                     // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FCompassIconMarker                     Properties;                                        // 0x0300(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        OblivionUnitToCmScale;                             // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            DistanceToAlphaCurve;                              // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              AlphaDistanceMinMax;                               // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              AlphaMinMax;                                       // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           QuestColorDefault;                                 // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           QuestColorIsThroughLoadDoor;                       // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           PlayerMarkerColor;                                 // 0x0390(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxAngleNameDisplay;                               // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceInMeters;                                  // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TextPosition;                                      // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHostileData                           HostileProperties;                                 // 0x03B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void ExecuteUbergraph_WBP_ModernHud_CompassIcon(int32 EntryPoint);
	void GetGlobalPosition(double* OutPosition);
	void Init_Slot_Properties(class UPanelWidget* MarkerParent, struct FCompassIconMarker& MarkerData);
	void OnInitialized();
	void SetAlphaParameters(const struct FVector2D& InAlphaMinMax, const struct FVector2D& InAlphaDistanceMinMax);
	void SetGlobalPosition(double NewPosition);
	void SetGlobalVisibility(ESlateVisibility InVisibility);
	void SetInterestIcon();
	void SetLocationText();
	void SetPlayerMarkerColor();
	void SetQuestColor();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void ToggleMarker(bool bIsMarker);
	void Update_Location_Name_Text(double* Delta);
	void Update_Properties(struct FCompassIconMarker& CompassIconMarker);
	void UpdateAlpha(double Distance);
	void UpdateDistance(double InDistance);
	void UpdateHostileAlpha(double Distance);
	void UpdateHostileDistance(double InDistance);
	void UpdatePropertiesAsHostileMarker(struct FHostileData& HostileData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ModernHud_CompassIcon_C">();
	}
	static class UWBP_ModernHud_CompassIcon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ModernHud_CompassIcon_C>();
	}
};
static_assert(alignof(UWBP_ModernHud_CompassIcon_C) == 0x000008, "Wrong alignment on UWBP_ModernHud_CompassIcon_C");
static_assert(sizeof(UWBP_ModernHud_CompassIcon_C) == 0x0003C0, "Wrong size on UWBP_ModernHud_CompassIcon_C");
static_assert(offsetof(UWBP_ModernHud_CompassIcon_C, UberGraphFrame) == 0x0002E8, "Member 'UWBP_ModernHud_CompassIcon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CompassIcon_C, Icon) == 0x0002F0, "Member 'UWBP_ModernHud_CompassIcon_C::Icon' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CompassIcon_C, CompassWidget) == 0x0002F8, "Member 'UWBP_ModernHud_CompassIcon_C::CompassWidget' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CompassIcon_C, Properties) == 0x000300, "Member 'UWBP_ModernHud_CompassIcon_C::Properties' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CompassIcon_C, OblivionUnitToCmScale) == 0x000340, "Member 'UWBP_ModernHud_CompassIcon_C::OblivionUnitToCmScale' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CompassIcon_C, DistanceToAlphaCurve) == 0x000348, "Member 'UWBP_ModernHud_CompassIcon_C::DistanceToAlphaCurve' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CompassIcon_C, AlphaDistanceMinMax) == 0x000350, "Member 'UWBP_ModernHud_CompassIcon_C::AlphaDistanceMinMax' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CompassIcon_C, AlphaMinMax) == 0x000360, "Member 'UWBP_ModernHud_CompassIcon_C::AlphaMinMax' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CompassIcon_C, QuestColorDefault) == 0x000370, "Member 'UWBP_ModernHud_CompassIcon_C::QuestColorDefault' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CompassIcon_C, QuestColorIsThroughLoadDoor) == 0x000380, "Member 'UWBP_ModernHud_CompassIcon_C::QuestColorIsThroughLoadDoor' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CompassIcon_C, PlayerMarkerColor) == 0x000390, "Member 'UWBP_ModernHud_CompassIcon_C::PlayerMarkerColor' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CompassIcon_C, MaxAngleNameDisplay) == 0x0003A0, "Member 'UWBP_ModernHud_CompassIcon_C::MaxAngleNameDisplay' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CompassIcon_C, DistanceInMeters) == 0x0003A8, "Member 'UWBP_ModernHud_CompassIcon_C::DistanceInMeters' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CompassIcon_C, TextPosition) == 0x0003B0, "Member 'UWBP_ModernHud_CompassIcon_C::TextPosition' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CompassIcon_C, HostileProperties) == 0x0003B8, "Member 'UWBP_ModernHud_CompassIcon_C::HostileProperties' has a wrong offset!");

}

