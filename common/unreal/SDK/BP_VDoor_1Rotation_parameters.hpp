#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VDoor_1Rotation

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_VDoor_1Rotation.BP_VDoor_1Rotation_C.ExecuteUbergraph_BP_VDoor_1Rotation
// 0x01E8 (0x01E8 - 0x0000)
struct BP_VDoor_1Rotation_C_ExecuteUbergraph_BP_VDoor_1Rotation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_1_2_sec;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Second_1_2_sec;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0018(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x0100(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_VDoor_1Rotation_C_ExecuteUbergraph_BP_VDoor_1Rotation) == 0x000008, "Wrong alignment on BP_VDoor_1Rotation_C_ExecuteUbergraph_BP_VDoor_1Rotation");
static_assert(sizeof(BP_VDoor_1Rotation_C_ExecuteUbergraph_BP_VDoor_1Rotation) == 0x0001E8, "Wrong size on BP_VDoor_1Rotation_C_ExecuteUbergraph_BP_VDoor_1Rotation");
static_assert(offsetof(BP_VDoor_1Rotation_C_ExecuteUbergraph_BP_VDoor_1Rotation, EntryPoint) == 0x000000, "Member 'BP_VDoor_1Rotation_C_ExecuteUbergraph_BP_VDoor_1Rotation::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VDoor_1Rotation_C_ExecuteUbergraph_BP_VDoor_1Rotation, K2Node_Event_1_2_sec) == 0x000008, "Member 'BP_VDoor_1Rotation_C_ExecuteUbergraph_BP_VDoor_1Rotation::K2Node_Event_1_2_sec' has a wrong offset!");
static_assert(offsetof(BP_VDoor_1Rotation_C_ExecuteUbergraph_BP_VDoor_1Rotation, K2Node_Event_Second_1_2_sec) == 0x000010, "Member 'BP_VDoor_1Rotation_C_ExecuteUbergraph_BP_VDoor_1Rotation::K2Node_Event_Second_1_2_sec' has a wrong offset!");
static_assert(offsetof(BP_VDoor_1Rotation_C_ExecuteUbergraph_BP_VDoor_1Rotation, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000018, "Member 'BP_VDoor_1Rotation_C_ExecuteUbergraph_BP_VDoor_1Rotation::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_VDoor_1Rotation_C_ExecuteUbergraph_BP_VDoor_1Rotation, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x000100, "Member 'BP_VDoor_1Rotation_C_ExecuteUbergraph_BP_VDoor_1Rotation::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");

// Function BP_VDoor_1Rotation.BP_VDoor_1Rotation_C.Update Timeline
// 0x0010 (0x0010 - 0x0000)
struct BP_VDoor_1Rotation_C_Update_Timeline final
{
public:
	double                                        Two_sec;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Two_sec_0;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VDoor_1Rotation_C_Update_Timeline) == 0x000008, "Wrong alignment on BP_VDoor_1Rotation_C_Update_Timeline");
static_assert(sizeof(BP_VDoor_1Rotation_C_Update_Timeline) == 0x000010, "Wrong size on BP_VDoor_1Rotation_C_Update_Timeline");
static_assert(offsetof(BP_VDoor_1Rotation_C_Update_Timeline, Two_sec) == 0x000000, "Member 'BP_VDoor_1Rotation_C_Update_Timeline::Two_sec' has a wrong offset!");
static_assert(offsetof(BP_VDoor_1Rotation_C_Update_Timeline, Two_sec_0) == 0x000008, "Member 'BP_VDoor_1Rotation_C_Update_Timeline::Two_sec_0' has a wrong offset!");

}

