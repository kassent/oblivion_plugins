#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Amulet

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Amulet.ABP_Amulet_C
// 0x0600 (0x0950 - 0x0350)
class UABP_Amulet_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0358(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0360(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0368(0x0020)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh;                    // 0x0388(0x0158)(ContainsInstancedReference)
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x04E0(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x0500(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0628(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x0648(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0770(0x0128)()
	class USkeletalMeshComponent*                 MasterMeshComponent;                               // 0x0898(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        ChestSnappingAlpha;                                // 0x08A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spine04Alpha;                                      // 0x08A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spine05Alpha;                                      // 0x08B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NeckLocationOffset;                                // 0x08B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NeckRotationOffset;                                // 0x08D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                NeckScaleOffset;                                   // 0x08E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpineLocationOffset;                               // 0x0900(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SpineRotationOffset;                               // 0x0918(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                SpineScaleOffset;                                  // 0x0930(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DEBUGALPHA;                                        // 0x0948(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void ExecuteUbergraph_ABP_Amulet(int32 EntryPoint);
	void SetOffsetTransforms(const struct FTransform& NeckTransform, const struct FTransform& SpineTransform);
	void SetSnappingAlpha(double ALPHA, bool bUseSpine04);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Amulet_C">();
	}
	static class UABP_Amulet_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Amulet_C>();
	}
};
static_assert(alignof(UABP_Amulet_C) == 0x000010, "Wrong alignment on UABP_Amulet_C");
static_assert(sizeof(UABP_Amulet_C) == 0x000950, "Wrong size on UABP_Amulet_C");
static_assert(offsetof(UABP_Amulet_C, UberGraphFrame) == 0x000350, "Member 'UABP_Amulet_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Amulet_C, AnimBlueprintExtension_PropertyAccess) == 0x000358, "Member 'UABP_Amulet_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Amulet_C, AnimBlueprintExtension_Base) == 0x000360, "Member 'UABP_Amulet_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Amulet_C, AnimGraphNode_Root) == 0x000368, "Member 'UABP_Amulet_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Amulet_C, AnimGraphNode_CopyPoseFromMesh) == 0x000388, "Member 'UABP_Amulet_C::AnimGraphNode_CopyPoseFromMesh' has a wrong offset!");
static_assert(offsetof(UABP_Amulet_C, AnimGraphNode_LocalToComponentSpace) == 0x0004E0, "Member 'UABP_Amulet_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Amulet_C, AnimGraphNode_ModifyBone_2) == 0x000500, "Member 'UABP_Amulet_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_Amulet_C, AnimGraphNode_ComponentToLocalSpace) == 0x000628, "Member 'UABP_Amulet_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Amulet_C, AnimGraphNode_ModifyBone_1) == 0x000648, "Member 'UABP_Amulet_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_Amulet_C, AnimGraphNode_ModifyBone) == 0x000770, "Member 'UABP_Amulet_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_Amulet_C, MasterMeshComponent) == 0x000898, "Member 'UABP_Amulet_C::MasterMeshComponent' has a wrong offset!");
static_assert(offsetof(UABP_Amulet_C, ChestSnappingAlpha) == 0x0008A0, "Member 'UABP_Amulet_C::ChestSnappingAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Amulet_C, Spine04Alpha) == 0x0008A8, "Member 'UABP_Amulet_C::Spine04Alpha' has a wrong offset!");
static_assert(offsetof(UABP_Amulet_C, Spine05Alpha) == 0x0008B0, "Member 'UABP_Amulet_C::Spine05Alpha' has a wrong offset!");
static_assert(offsetof(UABP_Amulet_C, NeckLocationOffset) == 0x0008B8, "Member 'UABP_Amulet_C::NeckLocationOffset' has a wrong offset!");
static_assert(offsetof(UABP_Amulet_C, NeckRotationOffset) == 0x0008D0, "Member 'UABP_Amulet_C::NeckRotationOffset' has a wrong offset!");
static_assert(offsetof(UABP_Amulet_C, NeckScaleOffset) == 0x0008E8, "Member 'UABP_Amulet_C::NeckScaleOffset' has a wrong offset!");
static_assert(offsetof(UABP_Amulet_C, SpineLocationOffset) == 0x000900, "Member 'UABP_Amulet_C::SpineLocationOffset' has a wrong offset!");
static_assert(offsetof(UABP_Amulet_C, SpineRotationOffset) == 0x000918, "Member 'UABP_Amulet_C::SpineRotationOffset' has a wrong offset!");
static_assert(offsetof(UABP_Amulet_C, SpineScaleOffset) == 0x000930, "Member 'UABP_Amulet_C::SpineScaleOffset' has a wrong offset!");
static_assert(offsetof(UABP_Amulet_C, DEBUGALPHA) == 0x000948, "Member 'UABP_Amulet_C::DEBUGALPHA' has a wrong offset!");

}

