#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TABP_HorseRiding_Swimming

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Altar_classes.hpp"
#include "TABP_HorseRiding_Swimming_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass TABP_HorseRiding_Swimming.TABP_HorseRiding_Swimming_C
// 0x0510 (0x09C0 - 0x04B0)
class UTABP_HorseRiding_Swimming_C final : public UVSwimLocomotionHorseRiderAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct TABP_HorseRiding_Swimming::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;    // 0x04B8(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x04C8(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x04D0(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x04D8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x04F8(0x00B8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x05B0(0x0080)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0630(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0658(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0680(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x06A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x06D0(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x06F8(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0768(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0788(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x07F8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0818(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0860(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0880(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x08A8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x08C8(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0990(0x0020)()
	float                                         K2Node_PropertyAccess_6;                           // 0x09B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_PropertyAccess_3;                           // 0x09B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void ExecuteUbergraph_TABP_HorseRiding_Swimming(int32 EntryPoint);
	void HorseRidingSwimLayer(const struct FPoseLink& InPose, struct FPoseLink* HorseRidingSwimLayer_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TABP_HorseRiding_Swimming_C">();
	}
	static class UTABP_HorseRiding_Swimming_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTABP_HorseRiding_Swimming_C>();
	}
};
static_assert(alignof(UTABP_HorseRiding_Swimming_C) == 0x000010, "Wrong alignment on UTABP_HorseRiding_Swimming_C");
static_assert(sizeof(UTABP_HorseRiding_Swimming_C) == 0x0009C0, "Wrong size on UTABP_HorseRiding_Swimming_C");
static_assert(offsetof(UTABP_HorseRiding_Swimming_C, UberGraphFrame) == 0x0004B0, "Member 'UTABP_HorseRiding_Swimming_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Swimming_C, __AnimBlueprintMutables) == 0x0004B8, "Member 'UTABP_HorseRiding_Swimming_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Swimming_C, AnimBlueprintExtension_PropertyAccess) == 0x0004C8, "Member 'UTABP_HorseRiding_Swimming_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Swimming_C, AnimBlueprintExtension_Base) == 0x0004D0, "Member 'UTABP_HorseRiding_Swimming_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Swimming_C, AnimGraphNode_Root_1) == 0x0004D8, "Member 'UTABP_HorseRiding_Swimming_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Swimming_C, AnimGraphNode_LinkedInputPose) == 0x0004F8, "Member 'UTABP_HorseRiding_Swimming_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Swimming_C, AnimGraphNode_SaveCachedPose) == 0x0005B0, "Member 'UTABP_HorseRiding_Swimming_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Swimming_C, AnimGraphNode_TransitionResult_4) == 0x000630, "Member 'UTABP_HorseRiding_Swimming_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Swimming_C, AnimGraphNode_TransitionResult_3) == 0x000658, "Member 'UTABP_HorseRiding_Swimming_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Swimming_C, AnimGraphNode_TransitionResult_2) == 0x000680, "Member 'UTABP_HorseRiding_Swimming_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Swimming_C, AnimGraphNode_TransitionResult_1) == 0x0006A8, "Member 'UTABP_HorseRiding_Swimming_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Swimming_C, AnimGraphNode_TransitionResult) == 0x0006D0, "Member 'UTABP_HorseRiding_Swimming_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Swimming_C, AnimGraphNode_BlendSpacePlayer_1) == 0x0006F8, "Member 'UTABP_HorseRiding_Swimming_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Swimming_C, AnimGraphNode_StateResult_3) == 0x000768, "Member 'UTABP_HorseRiding_Swimming_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Swimming_C, AnimGraphNode_BlendSpacePlayer) == 0x000788, "Member 'UTABP_HorseRiding_Swimming_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Swimming_C, AnimGraphNode_StateResult_2) == 0x0007F8, "Member 'UTABP_HorseRiding_Swimming_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Swimming_C, AnimGraphNode_SequencePlayer) == 0x000818, "Member 'UTABP_HorseRiding_Swimming_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Swimming_C, AnimGraphNode_StateResult_1) == 0x000860, "Member 'UTABP_HorseRiding_Swimming_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Swimming_C, AnimGraphNode_UseCachedPose) == 0x000880, "Member 'UTABP_HorseRiding_Swimming_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Swimming_C, AnimGraphNode_StateResult) == 0x0008A8, "Member 'UTABP_HorseRiding_Swimming_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Swimming_C, AnimGraphNode_StateMachine) == 0x0008C8, "Member 'UTABP_HorseRiding_Swimming_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Swimming_C, AnimGraphNode_Root) == 0x000990, "Member 'UTABP_HorseRiding_Swimming_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Swimming_C, K2Node_PropertyAccess_6) == 0x0009B0, "Member 'UTABP_HorseRiding_Swimming_C::K2Node_PropertyAccess_6' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Swimming_C, K2Node_PropertyAccess_3) == 0x0009B4, "Member 'UTABP_HorseRiding_Swimming_C::K2Node_PropertyAccess_3' has a wrong offset!");

}

