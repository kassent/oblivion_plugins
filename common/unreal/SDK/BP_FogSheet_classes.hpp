#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FogSheet

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FogSheet.BP_FogSheet_C
// 0x00C0 (0x0358 - 0x0298)
class ABP_FogSheet_C final : public AActor
{
public:
	class UBillboardComponent*                    FogSheet;                                          // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     M_FogSheet;                                        // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MID_Fog_Sheet;                                     // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Size;                                              // 0x02B0(0x0018)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x02C8(0x0010)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Brightness;                                        // 0x02D8(0x0008)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SphereMask_Opacity;                                // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Noise_Intensity;                                   // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Noise_Contrast;                                    // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StartFadeDistance;                                 // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EndFadeDistance;                                   // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DepthFadeDistance;                                 // 0x0308(0x0008)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Zero1_Tiling_x;                                    // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Zero1_Tiling_y;                                    // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Zero1_Speed_x;                                     // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Zero1_Speed_y;                                     // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Zero2_Tiling_x;                                    // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Zero2_Tiling_y;                                    // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Zero2_Speed_x;                                     // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Zero2_Speed_y;                                     // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          RandomTime;                                        // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FogSheet_C">();
	}
	static class ABP_FogSheet_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FogSheet_C>();
	}
};
static_assert(alignof(ABP_FogSheet_C) == 0x000008, "Wrong alignment on ABP_FogSheet_C");
static_assert(sizeof(ABP_FogSheet_C) == 0x000358, "Wrong size on ABP_FogSheet_C");
static_assert(offsetof(ABP_FogSheet_C, FogSheet) == 0x000298, "Member 'ABP_FogSheet_C::FogSheet' has a wrong offset!");
static_assert(offsetof(ABP_FogSheet_C, M_FogSheet) == 0x0002A0, "Member 'ABP_FogSheet_C::M_FogSheet' has a wrong offset!");
static_assert(offsetof(ABP_FogSheet_C, MID_Fog_Sheet) == 0x0002A8, "Member 'ABP_FogSheet_C::MID_Fog_Sheet' has a wrong offset!");
static_assert(offsetof(ABP_FogSheet_C, Size) == 0x0002B0, "Member 'ABP_FogSheet_C::Size' has a wrong offset!");
static_assert(offsetof(ABP_FogSheet_C, Color) == 0x0002C8, "Member 'ABP_FogSheet_C::Color' has a wrong offset!");
static_assert(offsetof(ABP_FogSheet_C, Brightness) == 0x0002D8, "Member 'ABP_FogSheet_C::Brightness' has a wrong offset!");
static_assert(offsetof(ABP_FogSheet_C, SphereMask_Opacity) == 0x0002E0, "Member 'ABP_FogSheet_C::SphereMask_Opacity' has a wrong offset!");
static_assert(offsetof(ABP_FogSheet_C, Noise_Intensity) == 0x0002E8, "Member 'ABP_FogSheet_C::Noise_Intensity' has a wrong offset!");
static_assert(offsetof(ABP_FogSheet_C, Noise_Contrast) == 0x0002F0, "Member 'ABP_FogSheet_C::Noise_Contrast' has a wrong offset!");
static_assert(offsetof(ABP_FogSheet_C, StartFadeDistance) == 0x0002F8, "Member 'ABP_FogSheet_C::StartFadeDistance' has a wrong offset!");
static_assert(offsetof(ABP_FogSheet_C, EndFadeDistance) == 0x000300, "Member 'ABP_FogSheet_C::EndFadeDistance' has a wrong offset!");
static_assert(offsetof(ABP_FogSheet_C, DepthFadeDistance) == 0x000308, "Member 'ABP_FogSheet_C::DepthFadeDistance' has a wrong offset!");
static_assert(offsetof(ABP_FogSheet_C, Zero1_Tiling_x) == 0x000310, "Member 'ABP_FogSheet_C::Zero1_Tiling_x' has a wrong offset!");
static_assert(offsetof(ABP_FogSheet_C, Zero1_Tiling_y) == 0x000318, "Member 'ABP_FogSheet_C::Zero1_Tiling_y' has a wrong offset!");
static_assert(offsetof(ABP_FogSheet_C, Zero1_Speed_x) == 0x000320, "Member 'ABP_FogSheet_C::Zero1_Speed_x' has a wrong offset!");
static_assert(offsetof(ABP_FogSheet_C, Zero1_Speed_y) == 0x000328, "Member 'ABP_FogSheet_C::Zero1_Speed_y' has a wrong offset!");
static_assert(offsetof(ABP_FogSheet_C, Zero2_Tiling_x) == 0x000330, "Member 'ABP_FogSheet_C::Zero2_Tiling_x' has a wrong offset!");
static_assert(offsetof(ABP_FogSheet_C, Zero2_Tiling_y) == 0x000338, "Member 'ABP_FogSheet_C::Zero2_Tiling_y' has a wrong offset!");
static_assert(offsetof(ABP_FogSheet_C, Zero2_Speed_x) == 0x000340, "Member 'ABP_FogSheet_C::Zero2_Speed_x' has a wrong offset!");
static_assert(offsetof(ABP_FogSheet_C, Zero2_Speed_y) == 0x000348, "Member 'ABP_FogSheet_C::Zero2_Speed_y' has a wrong offset!");
static_assert(offsetof(ABP_FogSheet_C, RandomTime) == 0x000350, "Member 'ABP_FogSheet_C::RandomTime' has a wrong offset!");

}

