#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Modern_MapSmoothZoomSlider

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "Slate_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Modern_MapSmoothZoomSlider.WBP_Modern_MapSmoothZoomSlider_C.ExecuteUbergraph_WBP_Modern_MapSmoothZoomSlider
// 0x0038 (0x0038 - 0x0000)
struct WBP_Modern_MapSmoothZoomSlider_C_ExecuteUbergraph_WBP_Modern_MapSmoothZoomSlider final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputMethodActive_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapSmoothZoomSlider_C_ExecuteUbergraph_WBP_Modern_MapSmoothZoomSlider) == 0x000008, "Wrong alignment on WBP_Modern_MapSmoothZoomSlider_C_ExecuteUbergraph_WBP_Modern_MapSmoothZoomSlider");
static_assert(sizeof(WBP_Modern_MapSmoothZoomSlider_C_ExecuteUbergraph_WBP_Modern_MapSmoothZoomSlider) == 0x000038, "Wrong size on WBP_Modern_MapSmoothZoomSlider_C_ExecuteUbergraph_WBP_Modern_MapSmoothZoomSlider");
static_assert(offsetof(WBP_Modern_MapSmoothZoomSlider_C_ExecuteUbergraph_WBP_Modern_MapSmoothZoomSlider, EntryPoint) == 0x000000, "Member 'WBP_Modern_MapSmoothZoomSlider_C_ExecuteUbergraph_WBP_Modern_MapSmoothZoomSlider::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapSmoothZoomSlider_C_ExecuteUbergraph_WBP_Modern_MapSmoothZoomSlider, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'WBP_Modern_MapSmoothZoomSlider_C_ExecuteUbergraph_WBP_Modern_MapSmoothZoomSlider::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapSmoothZoomSlider_C_ExecuteUbergraph_WBP_Modern_MapSmoothZoomSlider, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_Modern_MapSmoothZoomSlider_C_ExecuteUbergraph_WBP_Modern_MapSmoothZoomSlider::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapSmoothZoomSlider_C_ExecuteUbergraph_WBP_Modern_MapSmoothZoomSlider, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'WBP_Modern_MapSmoothZoomSlider_C_ExecuteUbergraph_WBP_Modern_MapSmoothZoomSlider::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapSmoothZoomSlider_C_ExecuteUbergraph_WBP_Modern_MapSmoothZoomSlider, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x000028, "Member 'WBP_Modern_MapSmoothZoomSlider_C_ExecuteUbergraph_WBP_Modern_MapSmoothZoomSlider::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapSmoothZoomSlider_C_ExecuteUbergraph_WBP_Modern_MapSmoothZoomSlider, CallFunc_IsInputMethodActive_ReturnValue) == 0x000030, "Member 'WBP_Modern_MapSmoothZoomSlider_C_ExecuteUbergraph_WBP_Modern_MapSmoothZoomSlider::CallFunc_IsInputMethodActive_ReturnValue' has a wrong offset!");

// Function WBP_Modern_MapSmoothZoomSlider.WBP_Modern_MapSmoothZoomSlider_C.On Input Method Changed
// 0x0008 (0x0008 - 0x0000)
struct WBP_Modern_MapSmoothZoomSlider_C_On_Input_Method_Changed final
{
public:
	ECommonInputType                              NewInputType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapSmoothZoomSlider_C_On_Input_Method_Changed) == 0x000001, "Wrong alignment on WBP_Modern_MapSmoothZoomSlider_C_On_Input_Method_Changed");
static_assert(sizeof(WBP_Modern_MapSmoothZoomSlider_C_On_Input_Method_Changed) == 0x000008, "Wrong size on WBP_Modern_MapSmoothZoomSlider_C_On_Input_Method_Changed");
static_assert(offsetof(WBP_Modern_MapSmoothZoomSlider_C_On_Input_Method_Changed, NewInputType) == 0x000000, "Member 'WBP_Modern_MapSmoothZoomSlider_C_On_Input_Method_Changed::NewInputType' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapSmoothZoomSlider_C_On_Input_Method_Changed, Temp_byte_Variable) == 0x000001, "Member 'WBP_Modern_MapSmoothZoomSlider_C_On_Input_Method_Changed::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapSmoothZoomSlider_C_On_Input_Method_Changed, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_Modern_MapSmoothZoomSlider_C_On_Input_Method_Changed::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapSmoothZoomSlider_C_On_Input_Method_Changed, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'WBP_Modern_MapSmoothZoomSlider_C_On_Input_Method_Changed::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapSmoothZoomSlider_C_On_Input_Method_Changed, Temp_bool_Variable) == 0x000004, "Member 'WBP_Modern_MapSmoothZoomSlider_C_On_Input_Method_Changed::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapSmoothZoomSlider_C_On_Input_Method_Changed, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000005, "Member 'WBP_Modern_MapSmoothZoomSlider_C_On_Input_Method_Changed::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapSmoothZoomSlider_C_On_Input_Method_Changed, CallFunc_IsVisible_ReturnValue) == 0x000006, "Member 'WBP_Modern_MapSmoothZoomSlider_C_On_Input_Method_Changed::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapSmoothZoomSlider_C_On_Input_Method_Changed, K2Node_Select_Default) == 0x000007, "Member 'WBP_Modern_MapSmoothZoomSlider_C_On_Input_Method_Changed::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Modern_MapSmoothZoomSlider.WBP_Modern_MapSmoothZoomSlider_C.PostInit
// 0x0038 (0x0038 - 0x0000)
struct WBP_Modern_MapSmoothZoomSlider_C_PostInit final
{
public:
	bool                                          IsWorld;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0008(0x0020)(NoDestructor)
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapSmoothZoomSlider_C_PostInit) == 0x000008, "Wrong alignment on WBP_Modern_MapSmoothZoomSlider_C_PostInit");
static_assert(sizeof(WBP_Modern_MapSmoothZoomSlider_C_PostInit) == 0x000038, "Wrong size on WBP_Modern_MapSmoothZoomSlider_C_PostInit");
static_assert(offsetof(WBP_Modern_MapSmoothZoomSlider_C_PostInit, IsWorld) == 0x000000, "Member 'WBP_Modern_MapSmoothZoomSlider_C_PostInit::IsWorld' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapSmoothZoomSlider_C_PostInit, K2Node_MakeStruct_Anchors) == 0x000008, "Member 'WBP_Modern_MapSmoothZoomSlider_C_PostInit::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapSmoothZoomSlider_C_PostInit, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x000028, "Member 'WBP_Modern_MapSmoothZoomSlider_C_PostInit::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapSmoothZoomSlider_C_PostInit, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_Modern_MapSmoothZoomSlider_C_PostInit::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_Modern_MapSmoothZoomSlider.WBP_Modern_MapSmoothZoomSlider_C.SetHandlePositionWhenChangingMap
// 0x0048 (0x0048 - 0x0000)
struct WBP_Modern_MapSmoothZoomSlider_C_SetHandlePositionWhenChangingMap final
{
public:
	bool                                          IsWorldMap_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              NewLocalVar;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0018(0x0020)(NoDestructor)
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapSmoothZoomSlider_C_SetHandlePositionWhenChangingMap) == 0x000008, "Wrong alignment on WBP_Modern_MapSmoothZoomSlider_C_SetHandlePositionWhenChangingMap");
static_assert(sizeof(WBP_Modern_MapSmoothZoomSlider_C_SetHandlePositionWhenChangingMap) == 0x000048, "Wrong size on WBP_Modern_MapSmoothZoomSlider_C_SetHandlePositionWhenChangingMap");
static_assert(offsetof(WBP_Modern_MapSmoothZoomSlider_C_SetHandlePositionWhenChangingMap, IsWorldMap_0) == 0x000000, "Member 'WBP_Modern_MapSmoothZoomSlider_C_SetHandlePositionWhenChangingMap::IsWorldMap_0' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapSmoothZoomSlider_C_SetHandlePositionWhenChangingMap, NewLocalVar) == 0x000008, "Member 'WBP_Modern_MapSmoothZoomSlider_C_SetHandlePositionWhenChangingMap::NewLocalVar' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapSmoothZoomSlider_C_SetHandlePositionWhenChangingMap, K2Node_MakeStruct_Anchors) == 0x000018, "Member 'WBP_Modern_MapSmoothZoomSlider_C_SetHandlePositionWhenChangingMap::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapSmoothZoomSlider_C_SetHandlePositionWhenChangingMap, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x000038, "Member 'WBP_Modern_MapSmoothZoomSlider_C_SetHandlePositionWhenChangingMap::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapSmoothZoomSlider_C_SetHandlePositionWhenChangingMap, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_Modern_MapSmoothZoomSlider_C_SetHandlePositionWhenChangingMap::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_Modern_MapSmoothZoomSlider.WBP_Modern_MapSmoothZoomSlider_C.IsNavigable
// 0x0001 (0x0001 - 0x0000)
struct WBP_Modern_MapSmoothZoomSlider_C_IsNavigable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapSmoothZoomSlider_C_IsNavigable) == 0x000001, "Wrong alignment on WBP_Modern_MapSmoothZoomSlider_C_IsNavigable");
static_assert(sizeof(WBP_Modern_MapSmoothZoomSlider_C_IsNavigable) == 0x000001, "Wrong size on WBP_Modern_MapSmoothZoomSlider_C_IsNavigable");
static_assert(offsetof(WBP_Modern_MapSmoothZoomSlider_C_IsNavigable, ReturnValue) == 0x000000, "Member 'WBP_Modern_MapSmoothZoomSlider_C_IsNavigable::ReturnValue' has a wrong offset!");

}

