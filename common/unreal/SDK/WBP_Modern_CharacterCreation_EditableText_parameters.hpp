#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Modern_CharacterCreation_EditableText

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Modern_CharacterCreation_EditableText.WBP_Modern_CharacterCreation_EditableText_C.UpdateTextNumber
// 0x0030 (0x0030 - 0x0000)
struct WBP_Modern_CharacterCreation_EditableText_C_UpdateTextNumber final
{
public:
	double                                        NewNumber;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_SetLastTextFromFloat_NewTextValue;        // 0x0008(0x0018)()
	class UEditableText*                          CallFunc_GetEditableText_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_CharacterCreation_EditableText_C_UpdateTextNumber) == 0x000008, "Wrong alignment on WBP_Modern_CharacterCreation_EditableText_C_UpdateTextNumber");
static_assert(sizeof(WBP_Modern_CharacterCreation_EditableText_C_UpdateTextNumber) == 0x000030, "Wrong size on WBP_Modern_CharacterCreation_EditableText_C_UpdateTextNumber");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_UpdateTextNumber, NewNumber) == 0x000000, "Member 'WBP_Modern_CharacterCreation_EditableText_C_UpdateTextNumber::NewNumber' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_UpdateTextNumber, CallFunc_SetLastTextFromFloat_NewTextValue) == 0x000008, "Member 'WBP_Modern_CharacterCreation_EditableText_C_UpdateTextNumber::CallFunc_SetLastTextFromFloat_NewTextValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_UpdateTextNumber, CallFunc_GetEditableText_ReturnValue) == 0x000020, "Member 'WBP_Modern_CharacterCreation_EditableText_C_UpdateTextNumber::CallFunc_GetEditableText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_UpdateTextNumber, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'WBP_Modern_CharacterCreation_EditableText_C_UpdateTextNumber::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_UpdateTextNumber, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'WBP_Modern_CharacterCreation_EditableText_C_UpdateTextNumber::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_Modern_CharacterCreation_EditableText.WBP_Modern_CharacterCreation_EditableText_C.UpdateText
// 0x0088 (0x0088 - 0x0000)
struct WBP_Modern_CharacterCreation_EditableText_C_UpdateText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 Local_CurrentString;                               // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UEditableText*                          CallFunc_GetEditableText_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_StringToDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumeric_ReturnValue;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEditableText*                          CallFunc_GetEditableText_ReturnValue_1;            // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0070(0x0018)()
};
static_assert(alignof(WBP_Modern_CharacterCreation_EditableText_C_UpdateText) == 0x000008, "Wrong alignment on WBP_Modern_CharacterCreation_EditableText_C_UpdateText");
static_assert(sizeof(WBP_Modern_CharacterCreation_EditableText_C_UpdateText) == 0x000088, "Wrong size on WBP_Modern_CharacterCreation_EditableText_C_UpdateText");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_UpdateText, InText) == 0x000000, "Member 'WBP_Modern_CharacterCreation_EditableText_C_UpdateText::InText' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_UpdateText, Local_CurrentString) == 0x000018, "Member 'WBP_Modern_CharacterCreation_EditableText_C_UpdateText::Local_CurrentString' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_UpdateText, CallFunc_GetEditableText_ReturnValue) == 0x000028, "Member 'WBP_Modern_CharacterCreation_EditableText_C_UpdateText::CallFunc_GetEditableText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_UpdateText, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_Modern_CharacterCreation_EditableText_C_UpdateText::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_UpdateText, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'WBP_Modern_CharacterCreation_EditableText_C_UpdateText::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_UpdateText, CallFunc_Conv_TextToString_ReturnValue) == 0x000040, "Member 'WBP_Modern_CharacterCreation_EditableText_C_UpdateText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_UpdateText, CallFunc_Conv_StringToDouble_ReturnValue) == 0x000050, "Member 'WBP_Modern_CharacterCreation_EditableText_C_UpdateText::CallFunc_Conv_StringToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_UpdateText, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'WBP_Modern_CharacterCreation_EditableText_C_UpdateText::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_UpdateText, CallFunc_IsNumeric_ReturnValue) == 0x000060, "Member 'WBP_Modern_CharacterCreation_EditableText_C_UpdateText::CallFunc_IsNumeric_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_UpdateText, CallFunc_GetEditableText_ReturnValue_1) == 0x000068, "Member 'WBP_Modern_CharacterCreation_EditableText_C_UpdateText::CallFunc_GetEditableText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_UpdateText, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000070, "Member 'WBP_Modern_CharacterCreation_EditableText_C_UpdateText::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");

// Function WBP_Modern_CharacterCreation_EditableText.WBP_Modern_CharacterCreation_EditableText_C.SetLastTextFromFloat
// 0x0078 (0x0078 - 0x0000)
struct WBP_Modern_CharacterCreation_EditableText_C_SetLastTextFromFloat final
{
public:
	double                                        NewFloatValue;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   NewTextValue;                                      // 0x0008(0x0018)(Parm, OutParm)
	class FText                                   Local_FloatToTextValue;                            // 0x0020(0x0018)(Edit, BlueprintVisible)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0038(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0060(0x0018)()
};
static_assert(alignof(WBP_Modern_CharacterCreation_EditableText_C_SetLastTextFromFloat) == 0x000008, "Wrong alignment on WBP_Modern_CharacterCreation_EditableText_C_SetLastTextFromFloat");
static_assert(sizeof(WBP_Modern_CharacterCreation_EditableText_C_SetLastTextFromFloat) == 0x000078, "Wrong size on WBP_Modern_CharacterCreation_EditableText_C_SetLastTextFromFloat");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_SetLastTextFromFloat, NewFloatValue) == 0x000000, "Member 'WBP_Modern_CharacterCreation_EditableText_C_SetLastTextFromFloat::NewFloatValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_SetLastTextFromFloat, NewTextValue) == 0x000008, "Member 'WBP_Modern_CharacterCreation_EditableText_C_SetLastTextFromFloat::NewTextValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_SetLastTextFromFloat, Local_FloatToTextValue) == 0x000020, "Member 'WBP_Modern_CharacterCreation_EditableText_C_SetLastTextFromFloat::Local_FloatToTextValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_SetLastTextFromFloat, CallFunc_MakeLiteralText_ReturnValue) == 0x000038, "Member 'WBP_Modern_CharacterCreation_EditableText_C_SetLastTextFromFloat::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_SetLastTextFromFloat, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000050, "Member 'WBP_Modern_CharacterCreation_EditableText_C_SetLastTextFromFloat::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_SetLastTextFromFloat, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'WBP_Modern_CharacterCreation_EditableText_C_SetLastTextFromFloat::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_SetLastTextFromFloat, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000060, "Member 'WBP_Modern_CharacterCreation_EditableText_C_SetLastTextFromFloat::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");

// Function WBP_Modern_CharacterCreation_EditableText.WBP_Modern_CharacterCreation_EditableText_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Modern_CharacterCreation_EditableText_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_CharacterCreation_EditableText_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Modern_CharacterCreation_EditableText_C_PreConstruct");
static_assert(sizeof(WBP_Modern_CharacterCreation_EditableText_C_PreConstruct) == 0x000001, "Wrong size on WBP_Modern_CharacterCreation_EditableText_C_PreConstruct");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Modern_CharacterCreation_EditableText_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Modern_CharacterCreation_EditableText.WBP_Modern_CharacterCreation_EditableText_C.UpdateTextColor
// 0x0320 (0x0320 - 0x0000)
struct WBP_Modern_CharacterCreation_EditableText_C_UpdateTextColor final
{
public:
	struct FSlateColor                            NewColor;                                          // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEditableText*                          CallFunc_GetEditableText_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UEditableText*                          CallFunc_GetEditableText_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEditableTextStyle                     K2Node_MakeStruct_EditableTextStyle;               // 0x0030(0x02F0)()
};
static_assert(alignof(WBP_Modern_CharacterCreation_EditableText_C_UpdateTextColor) == 0x000010, "Wrong alignment on WBP_Modern_CharacterCreation_EditableText_C_UpdateTextColor");
static_assert(sizeof(WBP_Modern_CharacterCreation_EditableText_C_UpdateTextColor) == 0x000320, "Wrong size on WBP_Modern_CharacterCreation_EditableText_C_UpdateTextColor");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_UpdateTextColor, NewColor) == 0x000000, "Member 'WBP_Modern_CharacterCreation_EditableText_C_UpdateTextColor::NewColor' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_UpdateTextColor, CallFunc_GetEditableText_ReturnValue) == 0x000018, "Member 'WBP_Modern_CharacterCreation_EditableText_C_UpdateTextColor::CallFunc_GetEditableText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_UpdateTextColor, CallFunc_GetEditableText_ReturnValue_1) == 0x000020, "Member 'WBP_Modern_CharacterCreation_EditableText_C_UpdateTextColor::CallFunc_GetEditableText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_UpdateTextColor, K2Node_MakeStruct_EditableTextStyle) == 0x000030, "Member 'WBP_Modern_CharacterCreation_EditableText_C_UpdateTextColor::K2Node_MakeStruct_EditableTextStyle' has a wrong offset!");

// Function WBP_Modern_CharacterCreation_EditableText.WBP_Modern_CharacterCreation_EditableText_C.BndEvt__WBP_Modern_CharacterCreation_EditableText_EditableText_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_Modern_CharacterCreation_EditableText_C_BndEvt__WBP_Modern_CharacterCreation_EditableText_EditableText_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_CharacterCreation_EditableText_C_BndEvt__WBP_Modern_CharacterCreation_EditableText_EditableText_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Modern_CharacterCreation_EditableText_C_BndEvt__WBP_Modern_CharacterCreation_EditableText_EditableText_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_Modern_CharacterCreation_EditableText_C_BndEvt__WBP_Modern_CharacterCreation_EditableText_EditableText_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on WBP_Modern_CharacterCreation_EditableText_C_BndEvt__WBP_Modern_CharacterCreation_EditableText_EditableText_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_BndEvt__WBP_Modern_CharacterCreation_EditableText_EditableText_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'WBP_Modern_CharacterCreation_EditableText_C_BndEvt__WBP_Modern_CharacterCreation_EditableText_EditableText_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_BndEvt__WBP_Modern_CharacterCreation_EditableText_EditableText_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'WBP_Modern_CharacterCreation_EditableText_C_BndEvt__WBP_Modern_CharacterCreation_EditableText_EditableText_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_Modern_CharacterCreation_EditableText.WBP_Modern_CharacterCreation_EditableText_C.ExecuteUbergraph_WBP_Modern_CharacterCreation_EditableText
// 0x0040 (0x0040 - 0x0000)
struct WBP_Modern_CharacterCreation_EditableText_C_ExecuteUbergraph_WBP_Modern_CharacterCreation_EditableText final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)(ConstParm)
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0020(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_CharacterCreation_EditableText_C_ExecuteUbergraph_WBP_Modern_CharacterCreation_EditableText) == 0x000008, "Wrong alignment on WBP_Modern_CharacterCreation_EditableText_C_ExecuteUbergraph_WBP_Modern_CharacterCreation_EditableText");
static_assert(sizeof(WBP_Modern_CharacterCreation_EditableText_C_ExecuteUbergraph_WBP_Modern_CharacterCreation_EditableText) == 0x000040, "Wrong size on WBP_Modern_CharacterCreation_EditableText_C_ExecuteUbergraph_WBP_Modern_CharacterCreation_EditableText");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_ExecuteUbergraph_WBP_Modern_CharacterCreation_EditableText, EntryPoint) == 0x000000, "Member 'WBP_Modern_CharacterCreation_EditableText_C_ExecuteUbergraph_WBP_Modern_CharacterCreation_EditableText::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_ExecuteUbergraph_WBP_Modern_CharacterCreation_EditableText, Temp_text_Variable) == 0x000008, "Member 'WBP_Modern_CharacterCreation_EditableText_C_ExecuteUbergraph_WBP_Modern_CharacterCreation_EditableText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_ExecuteUbergraph_WBP_Modern_CharacterCreation_EditableText, K2Node_ComponentBoundEvent_Text) == 0x000020, "Member 'WBP_Modern_CharacterCreation_EditableText_C_ExecuteUbergraph_WBP_Modern_CharacterCreation_EditableText::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_ExecuteUbergraph_WBP_Modern_CharacterCreation_EditableText, K2Node_ComponentBoundEvent_CommitMethod) == 0x000038, "Member 'WBP_Modern_CharacterCreation_EditableText_C_ExecuteUbergraph_WBP_Modern_CharacterCreation_EditableText::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(WBP_Modern_CharacterCreation_EditableText_C_ExecuteUbergraph_WBP_Modern_CharacterCreation_EditableText, K2Node_Event_IsDesignTime) == 0x000039, "Member 'WBP_Modern_CharacterCreation_EditableText_C_ExecuteUbergraph_WBP_Modern_CharacterCreation_EditableText::K2Node_Event_IsDesignTime' has a wrong offset!");

}

