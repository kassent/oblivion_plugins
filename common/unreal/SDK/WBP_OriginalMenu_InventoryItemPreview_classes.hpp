#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_OriginalMenu_InventoryItemPreview

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Altar_structs.hpp"
#include "Altar_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_OriginalMenu_InventoryItemPreview.WBP_OriginalMenu_InventoryItemPreview_C
// 0x0128 (0x05F0 - 0x04C8)
class UWBP_OriginalMenu_InventoryItemPreview_C final : public UVAltarWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVItemDetailsViewModel*                 VItemDetailsViewModel;                             // 0x04D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, DuplicateTransient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PreviewHighlight;                                  // 0x04D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_Original_ImageAndText_C*           inv_icon_status_broken;                            // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Original_ImageAndText_C*           inv_icon_status_enchanted;                         // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Original_ImageAndText_C*           inv_icon_status_poisoned;                          // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Original_ImageAndText_C*           inv_icon_status_stolen;                            // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Modern_Menu_Player_BoundAction_C*  inv_preview_controllerInputHint;                   // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BorderMovePlayer_C*                inv_render;                                        // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OriginalImageTile_C*               InventoryDetailsBorder;                            // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         InventoryItemStatusListHorizontalBox;              // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Status;                                            // 0x0520(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_524[0x4];                                      // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVOblivionPlayerCharacter*              Oblivion_Player_Character;                         // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class AActor* NewActor)> SendNewItemActor;                         // 0x0530(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UCurveFloat*                            ItemRescaleFactor;                                 // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           RevealItemInPreviewTimerHandle;                    // 0x0548(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldItemBeHidden;                                // 0x0550(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551[0x7];                                      // 0x0551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ItemOffset;                                        // 0x0558(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVInventoryPreviewPositionOverride     DEBUG_ItemOffsetAfterPreview;                      // 0x0570(0x0048)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UCurveFloat*                            ClothRescaleFactor;                                // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        DelayBeforeRevealingItem;                          // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CustomBorderTexture;                               // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldShowItemStatusDetails;                       // 0x05D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanSpawnItem;                                      // 0x05D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D2[0x6];                                      // 0x05D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 InventoryHoveredItemActor;                         // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          HasCustomFrame;                                    // 0x05E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E1[0x7];                                      // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               FrameDynamicMaterial;                              // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BindOnInventoryItemDisplayed(bool IsRendererVisible);
	void BP_OnDeactivated();
	void Change_Visibility_Of_Object(bool ShouldBeHidden);
	void ClearItem();
	void Construct();
	void DEBUG_AddOffset(const struct FVector& InLocationOffset, const struct FVector& InScaleOffset);
	void DEBUG_AddRotation(const struct FRotator& InRotationOffset);
	void DEBUG_CopyItemInfoToClipboard();
	void DEBUG_DrawItemPreviewDebugMode();
	class FString Debug_MakeOffsetStructString();
	void DEBUG_ResetInventoryPreviewData();
	void DEBUG_ResetInventoryPreviewRotation();
	void DEBUG_SaveItemPreviewActorType(bool SaveAsClassType);
	void DEBUG_SaveItemPreviewFormID();
	void DefineNewItemLocation(class AActor* Item);
	void Destruct();
	void DisableSpawnedItemClothSimulation(class UObject* SpawnedItem);
	void ExecuteUbergraph_WBP_OriginalMenu_InventoryItemPreview(int32 EntryPoint);
	void GetAttachedItem(class AActor* InventoryItemParent, class AActor** OutAttachedItem);
	void GetItemBounds(class AActor* Item, struct FVector* OutOrigin, struct FVector* OutBoxExtent);
	struct FVector GetRescaleItemSizeFromCurve(class UCurveFloat* RescaleCurve, class AActor* Item);
	void GetTransformOverridesForItem(struct FVInventoryPreviewPositionOverride* TransformOverride, bool* TransformOverrideFound);
	void HideRenderer();
	void InpActEvt_Add_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_Decimal_K2Node_InputKeyEvent_14(const struct FKey& Key);
	void InpActEvt_I_K2Node_InputKeyEvent_12(const struct FKey& Key);
	void InpActEvt_J_K2Node_InputKeyEvent_11(const struct FKey& Key);
	void InpActEvt_K_K2Node_InputKeyEvent_10(const struct FKey& Key);
	void InpActEvt_L_K2Node_InputKeyEvent_9(const struct FKey& Key);
	void InpActEvt_M_K2Node_InputKeyEvent_4(const struct FKey& Key);
	void InpActEvt_NumPadFive_K2Node_InputKeyEvent_15(const struct FKey& Key);
	void InpActEvt_NumPadZero_K2Node_InputKeyEvent_13(const struct FKey& Key);
	void InpActEvt_P_K2Node_InputKeyEvent_3(const struct FKey& Key);
	void InpActEvt_Shift_I_K2Node_InputKeyEvent_8(const struct FKey& Key);
	void InpActEvt_Shift_J_K2Node_InputKeyEvent_7(const struct FKey& Key);
	void InpActEvt_Shift_K_K2Node_InputKeyEvent_6(const struct FKey& Key);
	void InpActEvt_Shift_L_K2Node_InputKeyEvent_5(const struct FKey& Key);
	void InpActEvt_Subtract_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void InpActEvt_X_K2Node_InputKeyEvent_0(const struct FKey& Key);
	bool IsItemCloth(class AActor* Item);
	void OnInventoryItemDisplayed(bool IsItemDisplayed);
	void OnItemSpawned(class AActor* ActorSpawned);
	void OnRendererToggled(bool IsRendererVisible);
	void OnRevealItem();
	void OnStatusUpdated(int32 Value);
	void PlayPreviewHighlight(bool IsForward, bool IsInstant);
	void PreConstruct(bool IsDesignTime);
	void PrepareItemReveal();
	void RemoveWeaponScabbard(class UObject* SpawnedItem);
	void SetItemDisplayVisibility(bool ShouldItemBeDisplayed);
	void SetStatus(int32 NewStatus);
	void SetStatusVisibility(bool IsEnchantedVisible, bool IsBrokenVisible, bool IsStolenVisible, bool IsPoisonedVisible);
	void ShowRenderer(class FName InInventoryPreviewContext);
	void SpawnItem(class UTESForm* NewObjectHoveredFormID);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void TryHideStatusList();
	void TrySetCustomBorderTexture();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_OriginalMenu_InventoryItemPreview_C">();
	}
	static class UWBP_OriginalMenu_InventoryItemPreview_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_OriginalMenu_InventoryItemPreview_C>();
	}
};
static_assert(alignof(UWBP_OriginalMenu_InventoryItemPreview_C) == 0x000008, "Wrong alignment on UWBP_OriginalMenu_InventoryItemPreview_C");
static_assert(sizeof(UWBP_OriginalMenu_InventoryItemPreview_C) == 0x0005F0, "Wrong size on UWBP_OriginalMenu_InventoryItemPreview_C");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, UberGraphFrame) == 0x0004C8, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, VItemDetailsViewModel) == 0x0004D0, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::VItemDetailsViewModel' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, PreviewHighlight) == 0x0004D8, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::PreviewHighlight' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, inv_icon_status_broken) == 0x0004E0, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::inv_icon_status_broken' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, inv_icon_status_enchanted) == 0x0004E8, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::inv_icon_status_enchanted' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, inv_icon_status_poisoned) == 0x0004F0, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::inv_icon_status_poisoned' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, inv_icon_status_stolen) == 0x0004F8, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::inv_icon_status_stolen' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, inv_preview_controllerInputHint) == 0x000500, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::inv_preview_controllerInputHint' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, inv_render) == 0x000508, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::inv_render' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, InventoryDetailsBorder) == 0x000510, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::InventoryDetailsBorder' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, InventoryItemStatusListHorizontalBox) == 0x000518, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::InventoryItemStatusListHorizontalBox' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, Status) == 0x000520, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::Status' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, Oblivion_Player_Character) == 0x000528, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::Oblivion_Player_Character' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, SendNewItemActor) == 0x000530, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::SendNewItemActor' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, ItemRescaleFactor) == 0x000540, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::ItemRescaleFactor' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, RevealItemInPreviewTimerHandle) == 0x000548, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::RevealItemInPreviewTimerHandle' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, ShouldItemBeHidden) == 0x000550, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::ShouldItemBeHidden' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, ItemOffset) == 0x000558, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::ItemOffset' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, DEBUG_ItemOffsetAfterPreview) == 0x000570, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::DEBUG_ItemOffsetAfterPreview' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, ClothRescaleFactor) == 0x0005B8, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::ClothRescaleFactor' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, DelayBeforeRevealingItem) == 0x0005C0, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::DelayBeforeRevealingItem' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, CustomBorderTexture) == 0x0005C8, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::CustomBorderTexture' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, ShouldShowItemStatusDetails) == 0x0005D0, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::ShouldShowItemStatusDetails' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, CanSpawnItem) == 0x0005D1, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::CanSpawnItem' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, InventoryHoveredItemActor) == 0x0005D8, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::InventoryHoveredItemActor' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, HasCustomFrame) == 0x0005E0, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::HasCustomFrame' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemPreview_C, FrameDynamicMaterial) == 0x0005E8, "Member 'UWBP_OriginalMenu_InventoryItemPreview_C::FrameDynamicMaterial' has a wrong offset!");

}

