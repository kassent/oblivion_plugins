#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AST_CharacterActionShieldBash

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Altar_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass AST_CharacterActionShieldBash.AST_CharacterActionShieldBash_C
// 0x0128 (0x01D0 - 0x00A8)
class UAST_CharacterActionShieldBash_C final : public UVAltarActionState
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVPawnAnimatedAction*                   AnimatedAction;                                    // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          In_Hit_Window;                                     // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Has_Hit_Pawn;                                      // 0x00B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAnimNotify_ActionMeleeHitWindow*      Hit_Window_Notify;                                 // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSet<class AVPairedPawn*>                     Hit_Window_Hit_Pawns;                              // 0x00C8(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TSet<class UPrimitiveComponent*>              Hit_Window_Hit_Primitives;                         // 0x0118(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FBox                                   Hit_Box;                                           // 0x0168(0x0038)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          MultiTarget;                                       // 0x01A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CancelInputTags;                                   // 0x01A8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AVAltarPlayerController*                Player_controller;                                 // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AST_CharacterActionShieldBash(int32 EntryPoint);
	void Find_and_Track_Target(const class UVAnimNotify_ActionCameraTracking* Camera_Tracking_Window, double Tracking_Duration);
	void On_Controlled_Pawn_Animated_Action_Event(const struct FGameplayTag& Event_Tag, class UAnimNotifyActionEventInfo* Anim_Notify_Action_Event_Info);
	void OnAnimatedActionEvent(const struct FGameplayTag& EventTag, const class UAnimNotifyActionEventInfo* EventSource);
	void OnCanceled_D6A16AFC4CF8279845DCACBAF56D8D96();
	void OnCompleted_D6A16AFC4CF8279845DCACBAF56D8D96();
	void OnEntered();
	void OnExited();
	void OnStateUpdate(float DeltaTime);
	void Run_Shield_Bash_Hit_Detection();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AST_CharacterActionShieldBash_C">();
	}
	static class UAST_CharacterActionShieldBash_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAST_CharacterActionShieldBash_C>();
	}
};
static_assert(alignof(UAST_CharacterActionShieldBash_C) == 0x000008, "Wrong alignment on UAST_CharacterActionShieldBash_C");
static_assert(sizeof(UAST_CharacterActionShieldBash_C) == 0x0001D0, "Wrong size on UAST_CharacterActionShieldBash_C");
static_assert(offsetof(UAST_CharacterActionShieldBash_C, UberGraphFrame) == 0x0000A8, "Member 'UAST_CharacterActionShieldBash_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAST_CharacterActionShieldBash_C, AnimatedAction) == 0x0000B0, "Member 'UAST_CharacterActionShieldBash_C::AnimatedAction' has a wrong offset!");
static_assert(offsetof(UAST_CharacterActionShieldBash_C, In_Hit_Window) == 0x0000B8, "Member 'UAST_CharacterActionShieldBash_C::In_Hit_Window' has a wrong offset!");
static_assert(offsetof(UAST_CharacterActionShieldBash_C, Has_Hit_Pawn) == 0x0000B9, "Member 'UAST_CharacterActionShieldBash_C::Has_Hit_Pawn' has a wrong offset!");
static_assert(offsetof(UAST_CharacterActionShieldBash_C, Hit_Window_Notify) == 0x0000C0, "Member 'UAST_CharacterActionShieldBash_C::Hit_Window_Notify' has a wrong offset!");
static_assert(offsetof(UAST_CharacterActionShieldBash_C, Hit_Window_Hit_Pawns) == 0x0000C8, "Member 'UAST_CharacterActionShieldBash_C::Hit_Window_Hit_Pawns' has a wrong offset!");
static_assert(offsetof(UAST_CharacterActionShieldBash_C, Hit_Window_Hit_Primitives) == 0x000118, "Member 'UAST_CharacterActionShieldBash_C::Hit_Window_Hit_Primitives' has a wrong offset!");
static_assert(offsetof(UAST_CharacterActionShieldBash_C, Hit_Box) == 0x000168, "Member 'UAST_CharacterActionShieldBash_C::Hit_Box' has a wrong offset!");
static_assert(offsetof(UAST_CharacterActionShieldBash_C, MultiTarget) == 0x0001A0, "Member 'UAST_CharacterActionShieldBash_C::MultiTarget' has a wrong offset!");
static_assert(offsetof(UAST_CharacterActionShieldBash_C, CancelInputTags) == 0x0001A8, "Member 'UAST_CharacterActionShieldBash_C::CancelInputTags' has a wrong offset!");
static_assert(offsetof(UAST_CharacterActionShieldBash_C, Player_controller) == 0x0001C8, "Member 'UAST_CharacterActionShieldBash_C::Player_controller' has a wrong offset!");

}

