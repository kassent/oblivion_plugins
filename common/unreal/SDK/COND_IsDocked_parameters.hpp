#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COND_IsDocked

#include "Basic.hpp"


namespace SDK::Params
{

// Function COND_IsDocked.COND_IsDocked_C.CheckCondition
// 0x0010 (0x0010 - 0x0000)
struct COND_IsDocked_C_CheckCondition final
{
public:
	class UVStateBase*                            CurrentState;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDocked_ReturnValue;                     // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COND_IsDocked_C_CheckCondition) == 0x000008, "Wrong alignment on COND_IsDocked_C_CheckCondition");
static_assert(sizeof(COND_IsDocked_C_CheckCondition) == 0x000010, "Wrong size on COND_IsDocked_C_CheckCondition");
static_assert(offsetof(COND_IsDocked_C_CheckCondition, CurrentState) == 0x000000, "Member 'COND_IsDocked_C_CheckCondition::CurrentState' has a wrong offset!");
static_assert(offsetof(COND_IsDocked_C_CheckCondition, ReturnValue) == 0x000008, "Member 'COND_IsDocked_C_CheckCondition::ReturnValue' has a wrong offset!");
static_assert(offsetof(COND_IsDocked_C_CheckCondition, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'COND_IsDocked_C_CheckCondition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COND_IsDocked_C_CheckCondition, CallFunc_IsDocked_ReturnValue) == 0x00000A, "Member 'COND_IsDocked_C_CheckCondition::CallFunc_IsDocked_ReturnValue' has a wrong offset!");

// Function COND_IsDocked.COND_IsDocked_C.ExecuteUbergraph_COND_IsDocked
// 0x0020 (0x0020 - 0x0000)
struct COND_IsDocked_C_ExecuteUbergraph_COND_IsDocked final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVPairedCharacter*                      K2Node_DynamicCast_AsVPaired_Character;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVStateBase*                            K2Node_Event_OwnerState;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COND_IsDocked_C_ExecuteUbergraph_COND_IsDocked) == 0x000008, "Wrong alignment on COND_IsDocked_C_ExecuteUbergraph_COND_IsDocked");
static_assert(sizeof(COND_IsDocked_C_ExecuteUbergraph_COND_IsDocked) == 0x000020, "Wrong size on COND_IsDocked_C_ExecuteUbergraph_COND_IsDocked");
static_assert(offsetof(COND_IsDocked_C_ExecuteUbergraph_COND_IsDocked, EntryPoint) == 0x000000, "Member 'COND_IsDocked_C_ExecuteUbergraph_COND_IsDocked::EntryPoint' has a wrong offset!");
static_assert(offsetof(COND_IsDocked_C_ExecuteUbergraph_COND_IsDocked, K2Node_DynamicCast_AsVPaired_Character) == 0x000008, "Member 'COND_IsDocked_C_ExecuteUbergraph_COND_IsDocked::K2Node_DynamicCast_AsVPaired_Character' has a wrong offset!");
static_assert(offsetof(COND_IsDocked_C_ExecuteUbergraph_COND_IsDocked, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'COND_IsDocked_C_ExecuteUbergraph_COND_IsDocked::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COND_IsDocked_C_ExecuteUbergraph_COND_IsDocked, K2Node_Event_OwnerState) == 0x000018, "Member 'COND_IsDocked_C_ExecuteUbergraph_COND_IsDocked::K2Node_Event_OwnerState' has a wrong offset!");

// Function COND_IsDocked.COND_IsDocked_C.PostInit
// 0x0008 (0x0008 - 0x0000)
struct COND_IsDocked_C_PostInit final
{
public:
	class UVStateBase*                            OwnerState;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COND_IsDocked_C_PostInit) == 0x000008, "Wrong alignment on COND_IsDocked_C_PostInit");
static_assert(sizeof(COND_IsDocked_C_PostInit) == 0x000008, "Wrong size on COND_IsDocked_C_PostInit");
static_assert(offsetof(COND_IsDocked_C_PostInit, OwnerState) == 0x000000, "Member 'COND_IsDocked_C_PostInit::OwnerState' has a wrong offset!");

}

