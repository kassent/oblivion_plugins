#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_OriginalMenu_InventoryEntry

#include "Basic.hpp"

#include "Altar_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_OriginalMenu_InventoryEntry.WBP_OriginalMenu_InventoryEntry_C.AnimateToView
// 0x0008 (0x0008 - 0x0000)
struct WBP_OriginalMenu_InventoryEntry_C_AnimateToView final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OriginalMenu_InventoryEntry_C_AnimateToView) == 0x000008, "Wrong alignment on WBP_OriginalMenu_InventoryEntry_C_AnimateToView");
static_assert(sizeof(WBP_OriginalMenu_InventoryEntry_C_AnimateToView) == 0x000008, "Wrong size on WBP_OriginalMenu_InventoryEntry_C_AnimateToView");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_AnimateToView, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_OriginalMenu_InventoryEntry_C_AnimateToView::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_OriginalMenu_InventoryEntry.WBP_OriginalMenu_InventoryEntry_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_OriginalMenu_InventoryEntry_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OriginalMenu_InventoryEntry_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on WBP_OriginalMenu_InventoryEntry_C_BP_OnItemSelectionChanged");
static_assert(sizeof(WBP_OriginalMenu_InventoryEntry_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on WBP_OriginalMenu_InventoryEntry_C_BP_OnItemSelectionChanged");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'WBP_OriginalMenu_InventoryEntry_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function WBP_OriginalMenu_InventoryEntry.WBP_OriginalMenu_InventoryEntry_C.ExecuteUbergraph_WBP_OriginalMenu_InventoryEntry
// 0x0078 (0x0078 - 0x0000)
struct WBP_OriginalMenu_InventoryEntry_C_ExecuteUbergraph_WBP_OriginalMenu_InventoryEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVOriginalInventoryMenuItem*            K2Node_DynamicCast_AsVOriginal_Inventory_Menu_Item; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOriginalInventoryMenuItemProperties   CallFunc_GetProperties_ReturnValue;                // 0x0028(0x0050)(ConstParm)
};
static_assert(alignof(WBP_OriginalMenu_InventoryEntry_C_ExecuteUbergraph_WBP_OriginalMenu_InventoryEntry) == 0x000008, "Wrong alignment on WBP_OriginalMenu_InventoryEntry_C_ExecuteUbergraph_WBP_OriginalMenu_InventoryEntry");
static_assert(sizeof(WBP_OriginalMenu_InventoryEntry_C_ExecuteUbergraph_WBP_OriginalMenu_InventoryEntry) == 0x000078, "Wrong size on WBP_OriginalMenu_InventoryEntry_C_ExecuteUbergraph_WBP_OriginalMenu_InventoryEntry");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_ExecuteUbergraph_WBP_OriginalMenu_InventoryEntry, EntryPoint) == 0x000000, "Member 'WBP_OriginalMenu_InventoryEntry_C_ExecuteUbergraph_WBP_OriginalMenu_InventoryEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_ExecuteUbergraph_WBP_OriginalMenu_InventoryEntry, K2Node_Event_bIsSelected) == 0x000004, "Member 'WBP_OriginalMenu_InventoryEntry_C_ExecuteUbergraph_WBP_OriginalMenu_InventoryEntry::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_ExecuteUbergraph_WBP_OriginalMenu_InventoryEntry, K2Node_Event_IsDesignTime) == 0x000005, "Member 'WBP_OriginalMenu_InventoryEntry_C_ExecuteUbergraph_WBP_OriginalMenu_InventoryEntry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_ExecuteUbergraph_WBP_OriginalMenu_InventoryEntry, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WBP_OriginalMenu_InventoryEntry_C_ExecuteUbergraph_WBP_OriginalMenu_InventoryEntry::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_ExecuteUbergraph_WBP_OriginalMenu_InventoryEntry, K2Node_Event_ListItemObject) == 0x000010, "Member 'WBP_OriginalMenu_InventoryEntry_C_ExecuteUbergraph_WBP_OriginalMenu_InventoryEntry::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_ExecuteUbergraph_WBP_OriginalMenu_InventoryEntry, K2Node_DynamicCast_AsVOriginal_Inventory_Menu_Item) == 0x000018, "Member 'WBP_OriginalMenu_InventoryEntry_C_ExecuteUbergraph_WBP_OriginalMenu_InventoryEntry::K2Node_DynamicCast_AsVOriginal_Inventory_Menu_Item' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_ExecuteUbergraph_WBP_OriginalMenu_InventoryEntry, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_OriginalMenu_InventoryEntry_C_ExecuteUbergraph_WBP_OriginalMenu_InventoryEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_ExecuteUbergraph_WBP_OriginalMenu_InventoryEntry, CallFunc_GetProperties_ReturnValue) == 0x000028, "Member 'WBP_OriginalMenu_InventoryEntry_C_ExecuteUbergraph_WBP_OriginalMenu_InventoryEntry::CallFunc_GetProperties_ReturnValue' has a wrong offset!");

// Function WBP_OriginalMenu_InventoryEntry.WBP_OriginalMenu_InventoryEntry_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct WBP_OriginalMenu_InventoryEntry_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OriginalMenu_InventoryEntry_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on WBP_OriginalMenu_InventoryEntry_C_OnListItemObjectSet");
static_assert(sizeof(WBP_OriginalMenu_InventoryEntry_C_OnListItemObjectSet) == 0x000008, "Wrong size on WBP_OriginalMenu_InventoryEntry_C_OnListItemObjectSet");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'WBP_OriginalMenu_InventoryEntry_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function WBP_OriginalMenu_InventoryEntry.WBP_OriginalMenu_InventoryEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_OriginalMenu_InventoryEntry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OriginalMenu_InventoryEntry_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_OriginalMenu_InventoryEntry_C_PreConstruct");
static_assert(sizeof(WBP_OriginalMenu_InventoryEntry_C_PreConstruct) == 0x000001, "Wrong size on WBP_OriginalMenu_InventoryEntry_C_PreConstruct");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_OriginalMenu_InventoryEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_OriginalMenu_InventoryEntry.WBP_OriginalMenu_InventoryEntry_C.Property Value to Text
// 0x0060 (0x0060 - 0x0000)
struct WBP_OriginalMenu_InventoryEntry_C_Property_Value_to_Text final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ValueLimit;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0010(0x0018)(Parm, OutParm)
	class FText                                   Local_ValueText;                                   // 0x0028(0x0018)(Edit, BlueprintVisible)
	class FText                                   CallFunc_Get_Value_Text_FinalText;                 // 0x0040(0x0018)()
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OriginalMenu_InventoryEntry_C_Property_Value_to_Text) == 0x000008, "Wrong alignment on WBP_OriginalMenu_InventoryEntry_C_Property_Value_to_Text");
static_assert(sizeof(WBP_OriginalMenu_InventoryEntry_C_Property_Value_to_Text) == 0x000060, "Wrong size on WBP_OriginalMenu_InventoryEntry_C_Property_Value_to_Text");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_Property_Value_to_Text, Value) == 0x000000, "Member 'WBP_OriginalMenu_InventoryEntry_C_Property_Value_to_Text::Value' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_Property_Value_to_Text, ValueLimit) == 0x000008, "Member 'WBP_OriginalMenu_InventoryEntry_C_Property_Value_to_Text::ValueLimit' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_Property_Value_to_Text, Text) == 0x000010, "Member 'WBP_OriginalMenu_InventoryEntry_C_Property_Value_to_Text::Text' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_Property_Value_to_Text, Local_ValueText) == 0x000028, "Member 'WBP_OriginalMenu_InventoryEntry_C_Property_Value_to_Text::Local_ValueText' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_Property_Value_to_Text, CallFunc_Get_Value_Text_FinalText) == 0x000040, "Member 'WBP_OriginalMenu_InventoryEntry_C_Property_Value_to_Text::CallFunc_Get_Value_Text_FinalText' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_Property_Value_to_Text, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000058, "Member 'WBP_OriginalMenu_InventoryEntry_C_Property_Value_to_Text::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function WBP_OriginalMenu_InventoryEntry.WBP_OriginalMenu_InventoryEntry_C.SetHiddenStatsSpacerSize
// 0x0004 (0x0004 - 0x0000)
struct WBP_OriginalMenu_InventoryEntry_C_SetHiddenStatsSpacerSize final
{
public:
	int32                                         NumberOfHiddenStats;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OriginalMenu_InventoryEntry_C_SetHiddenStatsSpacerSize) == 0x000004, "Wrong alignment on WBP_OriginalMenu_InventoryEntry_C_SetHiddenStatsSpacerSize");
static_assert(sizeof(WBP_OriginalMenu_InventoryEntry_C_SetHiddenStatsSpacerSize) == 0x000004, "Wrong size on WBP_OriginalMenu_InventoryEntry_C_SetHiddenStatsSpacerSize");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_SetHiddenStatsSpacerSize, NumberOfHiddenStats) == 0x000000, "Member 'WBP_OriginalMenu_InventoryEntry_C_SetHiddenStatsSpacerSize::NumberOfHiddenStats' has a wrong offset!");

// Function WBP_OriginalMenu_InventoryEntry.WBP_OriginalMenu_InventoryEntry_C.SetItemIcon
// 0x0018 (0x0018 - 0x0000)
struct WBP_OriginalMenu_InventoryEntry_C_SetItemIcon final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Icon;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Status;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OriginalMenu_InventoryEntry_C_SetItemIcon) == 0x000008, "Wrong alignment on WBP_OriginalMenu_InventoryEntry_C_SetItemIcon");
static_assert(sizeof(WBP_OriginalMenu_InventoryEntry_C_SetItemIcon) == 0x000018, "Wrong size on WBP_OriginalMenu_InventoryEntry_C_SetItemIcon");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_SetItemIcon, Count) == 0x000000, "Member 'WBP_OriginalMenu_InventoryEntry_C_SetItemIcon::Count' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_SetItemIcon, Icon) == 0x000008, "Member 'WBP_OriginalMenu_InventoryEntry_C_SetItemIcon::Icon' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_SetItemIcon, Status) == 0x000010, "Member 'WBP_OriginalMenu_InventoryEntry_C_SetItemIcon::Status' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_SetItemIcon, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'WBP_OriginalMenu_InventoryEntry_C_SetItemIcon::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_OriginalMenu_InventoryEntry.WBP_OriginalMenu_InventoryEntry_C.SetItemStatsVisibility
// 0x0003 (0x0003 - 0x0000)
struct WBP_OriginalMenu_InventoryEntry_C_SetItemStatsVisibility final
{
public:
	ELegacyInventoryMenuPage                      Page;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELegacyInventoryMenuPage                      NewLocalVar;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OriginalMenu_InventoryEntry_C_SetItemStatsVisibility) == 0x000001, "Wrong alignment on WBP_OriginalMenu_InventoryEntry_C_SetItemStatsVisibility");
static_assert(sizeof(WBP_OriginalMenu_InventoryEntry_C_SetItemStatsVisibility) == 0x000003, "Wrong size on WBP_OriginalMenu_InventoryEntry_C_SetItemStatsVisibility");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_SetItemStatsVisibility, Page) == 0x000000, "Member 'WBP_OriginalMenu_InventoryEntry_C_SetItemStatsVisibility::Page' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_SetItemStatsVisibility, NewLocalVar) == 0x000001, "Member 'WBP_OriginalMenu_InventoryEntry_C_SetItemStatsVisibility::NewLocalVar' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_SetItemStatsVisibility, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'WBP_OriginalMenu_InventoryEntry_C_SetItemStatsVisibility::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_OriginalMenu_InventoryEntry.WBP_OriginalMenu_InventoryEntry_C.ShouldHideArmorRating
// 0x0005 (0x0005 - 0x0000)
struct WBP_OriginalMenu_InventoryEntry_C_ShouldHideArmorRating final
{
public:
	bool                                          ShouldHide;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OriginalMenu_InventoryEntry_C_ShouldHideArmorRating) == 0x000001, "Wrong alignment on WBP_OriginalMenu_InventoryEntry_C_ShouldHideArmorRating");
static_assert(sizeof(WBP_OriginalMenu_InventoryEntry_C_ShouldHideArmorRating) == 0x000005, "Wrong size on WBP_OriginalMenu_InventoryEntry_C_ShouldHideArmorRating");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_ShouldHideArmorRating, ShouldHide) == 0x000000, "Member 'WBP_OriginalMenu_InventoryEntry_C_ShouldHideArmorRating::ShouldHide' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_ShouldHideArmorRating, Temp_bool_Variable) == 0x000001, "Member 'WBP_OriginalMenu_InventoryEntry_C_ShouldHideArmorRating::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_ShouldHideArmorRating, Temp_byte_Variable) == 0x000002, "Member 'WBP_OriginalMenu_InventoryEntry_C_ShouldHideArmorRating::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_ShouldHideArmorRating, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_OriginalMenu_InventoryEntry_C_ShouldHideArmorRating::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_ShouldHideArmorRating, K2Node_Select_Default) == 0x000004, "Member 'WBP_OriginalMenu_InventoryEntry_C_ShouldHideArmorRating::K2Node_Select_Default' has a wrong offset!");

// Function WBP_OriginalMenu_InventoryEntry.WBP_OriginalMenu_InventoryEntry_C.ShouldHideItemHealth
// 0x0005 (0x0005 - 0x0000)
struct WBP_OriginalMenu_InventoryEntry_C_ShouldHideItemHealth final
{
public:
	bool                                          ShouldHide;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OriginalMenu_InventoryEntry_C_ShouldHideItemHealth) == 0x000001, "Wrong alignment on WBP_OriginalMenu_InventoryEntry_C_ShouldHideItemHealth");
static_assert(sizeof(WBP_OriginalMenu_InventoryEntry_C_ShouldHideItemHealth) == 0x000005, "Wrong size on WBP_OriginalMenu_InventoryEntry_C_ShouldHideItemHealth");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_ShouldHideItemHealth, ShouldHide) == 0x000000, "Member 'WBP_OriginalMenu_InventoryEntry_C_ShouldHideItemHealth::ShouldHide' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_ShouldHideItemHealth, Temp_bool_Variable) == 0x000001, "Member 'WBP_OriginalMenu_InventoryEntry_C_ShouldHideItemHealth::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_ShouldHideItemHealth, Temp_byte_Variable) == 0x000002, "Member 'WBP_OriginalMenu_InventoryEntry_C_ShouldHideItemHealth::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_ShouldHideItemHealth, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_OriginalMenu_InventoryEntry_C_ShouldHideItemHealth::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_ShouldHideItemHealth, K2Node_Select_Default) == 0x000004, "Member 'WBP_OriginalMenu_InventoryEntry_C_ShouldHideItemHealth::K2Node_Select_Default' has a wrong offset!");

// Function WBP_OriginalMenu_InventoryEntry.WBP_OriginalMenu_InventoryEntry_C.ShouldHideWeaponDamage
// 0x0005 (0x0005 - 0x0000)
struct WBP_OriginalMenu_InventoryEntry_C_ShouldHideWeaponDamage final
{
public:
	bool                                          ShouldHide;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OriginalMenu_InventoryEntry_C_ShouldHideWeaponDamage) == 0x000001, "Wrong alignment on WBP_OriginalMenu_InventoryEntry_C_ShouldHideWeaponDamage");
static_assert(sizeof(WBP_OriginalMenu_InventoryEntry_C_ShouldHideWeaponDamage) == 0x000005, "Wrong size on WBP_OriginalMenu_InventoryEntry_C_ShouldHideWeaponDamage");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_ShouldHideWeaponDamage, ShouldHide) == 0x000000, "Member 'WBP_OriginalMenu_InventoryEntry_C_ShouldHideWeaponDamage::ShouldHide' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_ShouldHideWeaponDamage, Temp_bool_Variable) == 0x000001, "Member 'WBP_OriginalMenu_InventoryEntry_C_ShouldHideWeaponDamage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_ShouldHideWeaponDamage, Temp_byte_Variable) == 0x000002, "Member 'WBP_OriginalMenu_InventoryEntry_C_ShouldHideWeaponDamage::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_ShouldHideWeaponDamage, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_OriginalMenu_InventoryEntry_C_ShouldHideWeaponDamage::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_ShouldHideWeaponDamage, K2Node_Select_Default) == 0x000004, "Member 'WBP_OriginalMenu_InventoryEntry_C_ShouldHideWeaponDamage::K2Node_Select_Default' has a wrong offset!");

// Function WBP_OriginalMenu_InventoryEntry.WBP_OriginalMenu_InventoryEntry_C.ThisIsForPluginCompliance
// 0x0001 (0x0001 - 0x0000)
struct WBP_OriginalMenu_InventoryEntry_C_ThisIsForPluginCompliance final
{
public:
	bool                                          Test;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OriginalMenu_InventoryEntry_C_ThisIsForPluginCompliance) == 0x000001, "Wrong alignment on WBP_OriginalMenu_InventoryEntry_C_ThisIsForPluginCompliance");
static_assert(sizeof(WBP_OriginalMenu_InventoryEntry_C_ThisIsForPluginCompliance) == 0x000001, "Wrong size on WBP_OriginalMenu_InventoryEntry_C_ThisIsForPluginCompliance");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_ThisIsForPluginCompliance, Test) == 0x000000, "Member 'WBP_OriginalMenu_InventoryEntry_C_ThisIsForPluginCompliance::Test' has a wrong offset!");

// Function WBP_OriginalMenu_InventoryEntry.WBP_OriginalMenu_InventoryEntry_C.UpdateItem
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_OriginalMenu_InventoryEntry_C_UpdateItem final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Property_Value_to_Text_Text;              // 0x0008(0x0018)()
	class FText                                   CallFunc_Property_Value_to_Text_Text_1;            // 0x0020(0x0018)()
	class FText                                   CallFunc_Property_Value_to_Text_Text_2;            // 0x0038(0x0018)()
	class UVInventoryMenuViewModel*               K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ELegacyInventoryMenuPage                      CallFunc_GetCurrentPageContainer_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELegacyInventoryMenuPage                      CallFunc_GetCurrentPageInventory_ReturnValue;      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Property_Value_to_Text_Text_3;            // 0x0060(0x0018)()
	class FText                                   CallFunc_Property_Value_to_Text_Text_4;            // 0x0078(0x0018)()
	double                                        CallFunc_Property_Value_to_Text_Value_ImplicitCast; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Property_Value_to_Text_Value_ImplicitCast_1; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Property_Value_to_Text_Value_ImplicitCast_2; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Property_Value_to_Text_Value_ImplicitCast_3; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Property_Value_to_Text_Value_ImplicitCast_4; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OriginalMenu_InventoryEntry_C_UpdateItem) == 0x000008, "Wrong alignment on WBP_OriginalMenu_InventoryEntry_C_UpdateItem");
static_assert(sizeof(WBP_OriginalMenu_InventoryEntry_C_UpdateItem) == 0x0000B8, "Wrong size on WBP_OriginalMenu_InventoryEntry_C_UpdateItem");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_UpdateItem, Temp_bool_Variable) == 0x000000, "Member 'WBP_OriginalMenu_InventoryEntry_C_UpdateItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_UpdateItem, Temp_bool_Variable_1) == 0x000001, "Member 'WBP_OriginalMenu_InventoryEntry_C_UpdateItem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_UpdateItem, Temp_byte_Variable) == 0x000002, "Member 'WBP_OriginalMenu_InventoryEntry_C_UpdateItem::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_UpdateItem, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_OriginalMenu_InventoryEntry_C_UpdateItem::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_UpdateItem, CallFunc_Property_Value_to_Text_Text) == 0x000008, "Member 'WBP_OriginalMenu_InventoryEntry_C_UpdateItem::CallFunc_Property_Value_to_Text_Text' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_UpdateItem, CallFunc_Property_Value_to_Text_Text_1) == 0x000020, "Member 'WBP_OriginalMenu_InventoryEntry_C_UpdateItem::CallFunc_Property_Value_to_Text_Text_1' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_UpdateItem, CallFunc_Property_Value_to_Text_Text_2) == 0x000038, "Member 'WBP_OriginalMenu_InventoryEntry_C_UpdateItem::CallFunc_Property_Value_to_Text_Text_2' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_UpdateItem, K2Node_Select_Default) == 0x000050, "Member 'WBP_OriginalMenu_InventoryEntry_C_UpdateItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_UpdateItem, CallFunc_GetCurrentPageContainer_ReturnValue) == 0x000058, "Member 'WBP_OriginalMenu_InventoryEntry_C_UpdateItem::CallFunc_GetCurrentPageContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_UpdateItem, CallFunc_GetCurrentPageInventory_ReturnValue) == 0x000059, "Member 'WBP_OriginalMenu_InventoryEntry_C_UpdateItem::CallFunc_GetCurrentPageInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_UpdateItem, K2Node_Select_Default_1) == 0x00005A, "Member 'WBP_OriginalMenu_InventoryEntry_C_UpdateItem::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_UpdateItem, CallFunc_Property_Value_to_Text_Text_3) == 0x000060, "Member 'WBP_OriginalMenu_InventoryEntry_C_UpdateItem::CallFunc_Property_Value_to_Text_Text_3' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_UpdateItem, CallFunc_Property_Value_to_Text_Text_4) == 0x000078, "Member 'WBP_OriginalMenu_InventoryEntry_C_UpdateItem::CallFunc_Property_Value_to_Text_Text_4' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_UpdateItem, CallFunc_Property_Value_to_Text_Value_ImplicitCast) == 0x000090, "Member 'WBP_OriginalMenu_InventoryEntry_C_UpdateItem::CallFunc_Property_Value_to_Text_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_UpdateItem, CallFunc_Property_Value_to_Text_Value_ImplicitCast_1) == 0x000098, "Member 'WBP_OriginalMenu_InventoryEntry_C_UpdateItem::CallFunc_Property_Value_to_Text_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_UpdateItem, CallFunc_Property_Value_to_Text_Value_ImplicitCast_2) == 0x0000A0, "Member 'WBP_OriginalMenu_InventoryEntry_C_UpdateItem::CallFunc_Property_Value_to_Text_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_UpdateItem, CallFunc_Property_Value_to_Text_Value_ImplicitCast_3) == 0x0000A8, "Member 'WBP_OriginalMenu_InventoryEntry_C_UpdateItem::CallFunc_Property_Value_to_Text_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(WBP_OriginalMenu_InventoryEntry_C_UpdateItem, CallFunc_Property_Value_to_Text_Value_ImplicitCast_4) == 0x0000B0, "Member 'WBP_OriginalMenu_InventoryEntry_C_UpdateItem::CallFunc_Property_Value_to_Text_Value_ImplicitCast_4' has a wrong offset!");

}

