#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VCommonUIEnhancedInputNavigation

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK
{

// Enum VCommonUIEnhancedInputNavigation.EVNavigationDirection
// NumValues: 0x0005
enum class EVNavigationDirection : uint8
{
	Up                                       = 0,
	Right                                    = 1,
	Down                                     = 2,
	Left                                     = 3,
	EVNavigationDirection_MAX                = 4,
};

// Enum VCommonUIEnhancedInputNavigation.EVGenericNavigationAction
// NumValues: 0x0007
enum class EVGenericNavigationAction : uint8
{
	NavigateUp                               = 0,
	NavigateRight                            = 1,
	NavigateDown                             = 2,
	NavigateLeft                             = 3,
	Accept                                   = 4,
	Back                                     = 5,
	EVGenericNavigationAction_MAX            = 6,
};

// ScriptStruct VCommonUIEnhancedInputNavigation.VGenericInputActionData
// 0x0010 (0x0010 - 0x0000)
struct FVGenericInputActionData final
{
public:
	class UInputAction*                           InputAction;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisplayInActionBar;                               // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInputEvent                                   KeyEvent;                                          // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPersistent;                                     // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FVGenericInputActionData) == 0x000008, "Wrong alignment on FVGenericInputActionData");
static_assert(sizeof(FVGenericInputActionData) == 0x000010, "Wrong size on FVGenericInputActionData");
static_assert(offsetof(FVGenericInputActionData, InputAction) == 0x000000, "Member 'FVGenericInputActionData::InputAction' has a wrong offset!");
static_assert(offsetof(FVGenericInputActionData, bDisplayInActionBar) == 0x000008, "Member 'FVGenericInputActionData::bDisplayInActionBar' has a wrong offset!");
static_assert(offsetof(FVGenericInputActionData, KeyEvent) == 0x000009, "Member 'FVGenericInputActionData::KeyEvent' has a wrong offset!");
static_assert(offsetof(FVGenericInputActionData, bIsPersistent) == 0x00000A, "Member 'FVGenericInputActionData::bIsPersistent' has a wrong offset!");

// ScriptStruct VCommonUIEnhancedInputNavigation.TileViewIndex
// 0x0008 (0x0008 - 0x0000)
struct FTileViewIndex final
{
public:
	int32                                         LineIndex;                                         // 0x0000(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ColumnIndex;                                       // 0x0004(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTileViewIndex) == 0x000004, "Wrong alignment on FTileViewIndex");
static_assert(sizeof(FTileViewIndex) == 0x000008, "Wrong size on FTileViewIndex");
static_assert(offsetof(FTileViewIndex, LineIndex) == 0x000000, "Member 'FTileViewIndex::LineIndex' has a wrong offset!");
static_assert(offsetof(FTileViewIndex, ColumnIndex) == 0x000004, "Member 'FTileViewIndex::ColumnIndex' has a wrong offset!");

// ScriptStruct VCommonUIEnhancedInputNavigation.WidgetFocusStack
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FWidgetFocusStack final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FWidgetFocusStack) == 0x000008, "Wrong alignment on FWidgetFocusStack");
static_assert(sizeof(FWidgetFocusStack) == 0x000018, "Wrong size on FWidgetFocusStack");

// ScriptStruct VCommonUIEnhancedInputNavigation.LayersWidgetFocusStack
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FLayersWidgetFocusStack final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FLayersWidgetFocusStack) == 0x000008, "Wrong alignment on FLayersWidgetFocusStack");
static_assert(sizeof(FLayersWidgetFocusStack) == 0x000010, "Wrong size on FLayersWidgetFocusStack");

}

