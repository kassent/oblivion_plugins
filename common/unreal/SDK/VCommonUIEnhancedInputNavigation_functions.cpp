#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VCommonUIEnhancedInputNavigation

#include "Basic.hpp"

#include "VCommonUIEnhancedInputNavigation_classes.hpp"
#include "VCommonUIEnhancedInputNavigation_parameters.hpp"


namespace SDK
{

// Function VCommonUIEnhancedInputNavigation.VEnhancedInputNavigable.GetWidgetLayer
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag IVEnhancedInputNavigable::GetWidgetLayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("VEnhancedInputNavigable", "GetWidgetLayer");

	Params::VEnhancedInputNavigable_GetWidgetLayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VEnhancedInputNavigable.OnFocus
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void IVEnhancedInputNavigable::OnFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("VEnhancedInputNavigable", "OnFocus");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function VCommonUIEnhancedInputNavigation.VEnhancedInputNavigable.OnUnfocus
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void IVEnhancedInputNavigable::OnUnfocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("VEnhancedInputNavigable", "OnUnfocus");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function VCommonUIEnhancedInputNavigation.VEnhancedInputNavigable.GetNavigationWidgetForAction
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EVNavigationDirection                   Action                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class IVEnhancedInputNavigable>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IVEnhancedInputNavigable> IVEnhancedInputNavigable::GetNavigationWidgetForAction(EVNavigationDirection Action) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("VEnhancedInputNavigable", "GetNavigationWidgetForAction");

	Params::VEnhancedInputNavigable_GetNavigationWidgetForAction Parms{};

	Parms.Action = Action;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VEnhancedInputNavigable.IsNavigable
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IVEnhancedInputNavigable::IsNavigable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("VEnhancedInputNavigable", "IsNavigable");

	Params::VEnhancedInputNavigable_IsNavigable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableActivatableWidgetBase.BindInputAction
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FVGenericInputActionData&  InputActionData                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UVNavigableActivatableWidgetBase::BindInputAction(const struct FVGenericInputActionData& InputActionData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableActivatableWidgetBase", "BindInputAction");

	Params::VNavigableActivatableWidgetBase_BindInputAction Parms{};

	Parms.InputActionData = std::move(InputActionData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableActivatableWidgetBase.BP_OnBackActionCommited
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UVNavigableActivatableWidgetBase::BP_OnBackActionCommited()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableActivatableWidgetBase", "BP_OnBackActionCommited");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableActivatableWidgetBase.BP_OnHovered
// (Event, Protected, BlueprintEvent)

void UVNavigableActivatableWidgetBase::BP_OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableActivatableWidgetBase", "BP_OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableActivatableWidgetBase.BP_OnNavigateDown
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UVNavigableActivatableWidgetBase::BP_OnNavigateDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableActivatableWidgetBase", "BP_OnNavigateDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableActivatableWidgetBase.BP_OnNavigateLeft
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UVNavigableActivatableWidgetBase::BP_OnNavigateLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableActivatableWidgetBase", "BP_OnNavigateLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableActivatableWidgetBase.BP_OnNavigateRight
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UVNavigableActivatableWidgetBase::BP_OnNavigateRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableActivatableWidgetBase", "BP_OnNavigateRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableActivatableWidgetBase.BP_OnNavigateUp
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UVNavigableActivatableWidgetBase::BP_OnNavigateUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableActivatableWidgetBase", "BP_OnNavigateUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableActivatableWidgetBase.BP_OnTirggeringActionCommited
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UVNavigableActivatableWidgetBase::BP_OnTirggeringActionCommited()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableActivatableWidgetBase", "BP_OnTirggeringActionCommited");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableActivatableWidgetBase.BP_OnUnhovered
// (Event, Protected, BlueprintEvent)

void UVNavigableActivatableWidgetBase::BP_OnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableActivatableWidgetBase", "BP_OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableActivatableWidgetBase.UnBindAllSpecificInputAction
// (Final, Native, Public, BlueprintCallable)

void UVNavigableActivatableWidgetBase::UnBindAllSpecificInputAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableActivatableWidgetBase", "UnBindAllSpecificInputAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableActivatableWidgetBase.GetIsFocussed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVNavigableActivatableWidgetBase::GetIsFocussed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableActivatableWidgetBase", "GetIsFocussed");

	Params::VNavigableActivatableWidgetBase_GetIsFocussed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableButton.BP_OnHoldCanceled
// (Event, Protected, BlueprintEvent)

void UVNavigableButton::BP_OnHoldCanceled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableButton", "BP_OnHoldCanceled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableButton.BP_OnNavigateDown
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UVNavigableButton::BP_OnNavigateDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableButton", "BP_OnNavigateDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableButton.BP_OnNavigateLeft
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UVNavigableButton::BP_OnNavigateLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableButton", "BP_OnNavigateLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableButton.BP_OnNavigateRight
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UVNavigableButton::BP_OnNavigateRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableButton", "BP_OnNavigateRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableButton.BP_OnNavigateUp
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UVNavigableButton::BP_OnNavigateUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableButton", "BP_OnNavigateUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableButton.OnButtonTextUpdated
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UVNavigableButton::OnButtonTextUpdated(const class FText& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableButton", "OnButtonTextUpdated");

	Params::VNavigableButton_OnButtonTextUpdated Parms{};

	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableButton.OnControllerActiveUpdated
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// const bool                              Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableButton::OnControllerActiveUpdated(const bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableButton", "OnControllerActiveUpdated");

	Params::VNavigableButton_OnControllerActiveUpdated Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableButton.OnSynchronizeProperties
// (Event, Public, BlueprintEvent)

void UVNavigableButton::OnSynchronizeProperties()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableButton", "OnSynchronizeProperties");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableButton.SetButtonText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UVNavigableButton::SetButtonText(const class FText& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableButton", "SetButtonText");

	Params::VNavigableButton_SetButtonText Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableButton.SetIsControllerActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableButton::SetIsControllerActive(const bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableButton", "SetIsControllerActive");

	Params::VNavigableButton_SetIsControllerActive Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableButton.SetIsFocused
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableButton::SetIsFocused(const bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableButton", "SetIsFocused");

	Params::VNavigableButton_SetIsFocused Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableButton.SetShouldApplyFocusEffectOnHover
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableButton::SetShouldApplyFocusEffectOnHover(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableButton", "SetShouldApplyFocusEffectOnHover");

	Params::VNavigableButton_SetShouldApplyFocusEffectOnHover Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableButton.GetButtonText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UVNavigableButton::GetButtonText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableButton", "GetButtonText");

	Params::VNavigableButton_GetButtonText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableButton.GetHasControllerSpecificBehavior
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVNavigableButton::GetHasControllerSpecificBehavior() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableButton", "GetHasControllerSpecificBehavior");

	Params::VNavigableButton_GetHasControllerSpecificBehavior Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableButton.GetIsControllerActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVNavigableButton::GetIsControllerActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableButton", "GetIsControllerActive");

	Params::VNavigableButton_GetIsControllerActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableButton.GetIsFocused
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVNavigableButton::GetIsFocused() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableButton", "GetIsFocused");

	Params::VNavigableButton_GetIsFocused Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableButton.GetShouldApplyFocusEffectOnHover
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVNavigableButton::GetShouldApplyFocusEffectOnHover() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableButton", "GetShouldApplyFocusEffectOnHover");

	Params::VNavigableButton_GetShouldApplyFocusEffectOnHover Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCarousel.AddChild
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          ChildToAdd                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPanelSlot*                       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPanelSlot* UVNavigableCarousel::AddChild(class UWidget* ChildToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCarousel", "AddChild");

	Params::VNavigableCarousel_AddChild Parms{};

	Parms.ChildToAdd = ChildToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCarousel.ClearChildren
// (Final, Native, Public, BlueprintCallable)

void UVNavigableCarousel::ClearChildren()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCarousel", "ClearChildren");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCarousel.InsertChild
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          ChildToAdd                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPanelSlot*                       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPanelSlot* UVNavigableCarousel::InsertChild(class UWidget* ChildToAdd, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCarousel", "InsertChild");

	Params::VNavigableCarousel_InsertChild Parms{};

	Parms.ChildToAdd = ChildToAdd;
	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCarousel.NavigateToElement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          ItemToNavigateTo                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableCarousel::NavigateToElement(class UWidget* ItemToNavigateTo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCarousel", "NavigateToElement");

	Params::VNavigableCarousel_NavigateToElement Parms{};

	Parms.ItemToNavigateTo = ItemToNavigateTo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCarousel.NavigateToEnd
// (Final, Native, Public, BlueprintCallable)

void UVNavigableCarousel::NavigateToEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCarousel", "NavigateToEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCarousel.NavigateToIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableCarousel::NavigateToIndex(int32 NewIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCarousel", "NavigateToIndex");

	Params::VNavigableCarousel_NavigateToIndex Parms{};

	Parms.NewIndex = NewIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCarousel.NavigateToNextElement
// (Final, Native, Public, BlueprintCallable)

void UVNavigableCarousel::NavigateToNextElement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCarousel", "NavigateToNextElement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCarousel.NavigateToPrevElement
// (Final, Native, Public, BlueprintCallable)

void UVNavigableCarousel::NavigateToPrevElement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCarousel", "NavigateToPrevElement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCarousel.NavigateToStart
// (Final, Native, Public, BlueprintCallable)

void UVNavigableCarousel::NavigateToStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCarousel", "NavigateToStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCarousel.DoesContaintItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidget*                          Item                                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVNavigableCarousel::DoesContaintItem(class UWidget* Item) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCarousel", "DoesContaintItem");

	Params::VNavigableCarousel_DoesContaintItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCarousel.GetCarousel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCommonWidgetCarousel*            ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCommonWidgetCarousel* UVNavigableCarousel::GetCarousel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCarousel", "GetCarousel");

	Params::VNavigableCarousel_GetCarousel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCarousel.GetCurrentIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UVNavigableCarousel::GetCurrentIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCarousel", "GetCurrentIndex");

	Params::VNavigableCarousel_GetCurrentIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCarousel.GetCurrentItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UVNavigableCarousel::GetCurrentItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCarousel", "GetCurrentItem");

	Params::VNavigableCarousel_GetCurrentItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCarousel.GetFirstIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UVNavigableCarousel::GetFirstIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCarousel", "GetFirstIndex");

	Params::VNavigableCarousel_GetFirstIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCarousel.GetItemAtIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UVNavigableCarousel::GetItemAtIndex(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCarousel", "GetItemAtIndex");

	Params::VNavigableCarousel_GetItemAtIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCarousel.GetItemIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidget*                          Item                                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UVNavigableCarousel::GetItemIndex(class UWidget* Item) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCarousel", "GetItemIndex");

	Params::VNavigableCarousel_GetItemIndex Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCarousel.GetLastIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UVNavigableCarousel::GetLastIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCarousel", "GetLastIndex");

	Params::VNavigableCarousel_GetLastIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCarousel.GetSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UVNavigableCarousel::GetSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCarousel", "GetSize");

	Params::VNavigableCarousel_GetSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCommonUserWidgetBase.BP_OnHovered
// (Event, Protected, BlueprintEvent)

void UVNavigableCommonUserWidgetBase::BP_OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCommonUserWidgetBase", "BP_OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCommonUserWidgetBase.BP_OnNavigateDown
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UVNavigableCommonUserWidgetBase::BP_OnNavigateDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCommonUserWidgetBase", "BP_OnNavigateDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCommonUserWidgetBase.BP_OnNavigateLeft
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UVNavigableCommonUserWidgetBase::BP_OnNavigateLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCommonUserWidgetBase", "BP_OnNavigateLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCommonUserWidgetBase.BP_OnNavigateRight
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UVNavigableCommonUserWidgetBase::BP_OnNavigateRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCommonUserWidgetBase", "BP_OnNavigateRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCommonUserWidgetBase.BP_OnNavigateUp
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UVNavigableCommonUserWidgetBase::BP_OnNavigateUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCommonUserWidgetBase", "BP_OnNavigateUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCommonUserWidgetBase.BP_OnTirggeringActionCommited
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UVNavigableCommonUserWidgetBase::BP_OnTirggeringActionCommited()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCommonUserWidgetBase", "BP_OnTirggeringActionCommited");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableCommonUserWidgetBase.BP_OnUnhovered
// (Event, Protected, BlueprintEvent)

void UVNavigableCommonUserWidgetBase::BP_OnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableCommonUserWidgetBase", "BP_OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableEditableText.BindEditableTextDelegates
// (Native, Protected, BlueprintCallable)

void UVNavigableEditableText::BindEditableTextDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableEditableText", "BindEditableTextDelegates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableEditableText.HandleOnValueChanged
// (Native, Protected, HasOutParams)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UVNavigableEditableText::HandleOnValueChanged(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableEditableText", "HandleOnValueChanged");

	Params::VNavigableEditableText_HandleOnValueChanged Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableEditableText.HandleOnValueCommitted
// (Native, Protected, HasOutParams)
// Parameters:
// const class FText&                      CommittedValue                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommitMethod                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableEditableText::HandleOnValueCommitted(const class FText& CommittedValue, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableEditableText", "HandleOnValueCommitted");

	Params::VNavigableEditableText_HandleOnValueCommitted Parms{};

	Parms.CommittedValue = std::move(CommittedValue);
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableEditableText.UnBindEditableTextDelegates
// (Native, Protected, BlueprintCallable)

void UVNavigableEditableText::UnBindEditableTextDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableEditableText", "UnBindEditableTextDelegates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableEditableText.GetEditableText
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UEditableText*                    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UEditableText* UVNavigableEditableText::GetEditableText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableEditableText", "GetEditableText");

	Params::VNavigableEditableText_GetEditableText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableEditableText.GetIsEditing
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVNavigableEditableText::GetIsEditing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableEditableText", "GetIsEditing");

	Params::VNavigableEditableText_GetIsEditing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableHorizontalBox.AddChild
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCommonUserWidget*                ChildToAdd                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPanelSlot*                       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPanelSlot* UVNavigableHorizontalBox::AddChild(class UCommonUserWidget* ChildToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableHorizontalBox", "AddChild");

	Params::VNavigableHorizontalBox_AddChild Parms{};

	Parms.ChildToAdd = ChildToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableHorizontalBox.ClearChildren
// (Final, Native, Public, BlueprintCallable)

void UVNavigableHorizontalBox::ClearChildren()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableHorizontalBox", "ClearChildren");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableHorizontalBox.GetHorizontalBox
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UHorizontalBox*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHorizontalBox* UVNavigableHorizontalBox::GetHorizontalBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableHorizontalBox", "GetHorizontalBox");

	Params::VNavigableHorizontalBox_GetHorizontalBox Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableHorizontalBox.NavigateToElement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCommonUserWidget*                ItemToNavigateTo                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableHorizontalBox::NavigateToElement(class UCommonUserWidget* ItemToNavigateTo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableHorizontalBox", "NavigateToElement");

	Params::VNavigableHorizontalBox_NavigateToElement Parms{};

	Parms.ItemToNavigateTo = ItemToNavigateTo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableHorizontalBox.NavigateToIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableHorizontalBox::NavigateToIndex(int32 NewIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableHorizontalBox", "NavigateToIndex");

	Params::VNavigableHorizontalBox_NavigateToIndex Parms{};

	Parms.NewIndex = NewIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableHorizontalBox.NavigateToNextElement
// (Final, Native, Public, BlueprintCallable)

void UVNavigableHorizontalBox::NavigateToNextElement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableHorizontalBox", "NavigateToNextElement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableHorizontalBox.NavigateToPrevElement
// (Final, Native, Public, BlueprintCallable)

void UVNavigableHorizontalBox::NavigateToPrevElement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableHorizontalBox", "NavigateToPrevElement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableHorizontalBox.OnChildHovered
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const TScriptInterface<class IVEnhancedInputNavigable>&HoveredWidget                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableHorizontalBox::OnChildHovered(const TScriptInterface<class IVEnhancedInputNavigable>& HoveredWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableHorizontalBox", "OnChildHovered");

	Params::VNavigableHorizontalBox_OnChildHovered Parms{};

	Parms.HoveredWidget = HoveredWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableHorizontalBox.GetFocusElementIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UVNavigableHorizontalBox::GetFocusElementIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableHorizontalBox", "GetFocusElementIndex");

	Params::VNavigableHorizontalBox_GetFocusElementIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableHorizontalBox.GetSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UVNavigableHorizontalBox::GetSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableHorizontalBox", "GetSize");

	Params::VNavigableHorizontalBox_GetSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableInputKeySelector.BPOnListenStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableInputKeySelector::BPOnListenStateChanged(bool NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableInputKeySelector", "BPOnListenStateChanged");

	Params::VNavigableInputKeySelector_BPOnListenStateChanged Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableInputKeySelector.OnInputMethodChanged
// (Native, Protected)
// Parameters:
// ECommonInputType                        NewInputType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableInputKeySelector::OnInputMethodChanged(ECommonInputType NewInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableInputKeySelector", "OnInputMethodChanged");

	Params::VNavigableInputKeySelector_OnInputMethodChanged Parms{};

	Parms.NewInputType = NewInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableInputKeySelector.OnKeyChanged
// (Native, Protected)

void UVNavigableInputKeySelector::OnKeyChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableInputKeySelector", "OnKeyChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableInputKeySelector.OnKeySelected
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FInputChord&               NewInputChord                                          (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableInputKeySelector::OnKeySelected(const struct FInputChord& NewInputChord)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableInputKeySelector", "OnKeySelected");

	Params::VNavigableInputKeySelector_OnKeySelected Parms{};

	Parms.NewInputChord = std::move(NewInputChord);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableInputKeySelector.SetCurrentKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FInputChord&               Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableInputKeySelector::SetCurrentKey(const struct FInputChord& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableInputKeySelector", "SetCurrentKey");

	Params::VNavigableInputKeySelector_SetCurrentKey Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableInputKeySelector.SetIsListening
// (Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableInputKeySelector::SetIsListening(bool NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableInputKeySelector", "SetIsListening");

	Params::VNavigableInputKeySelector_SetIsListening Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableInputKeySelector.UpdateSelectedKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FInputChord&               InSelectedKey                                          (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableInputKeySelector::UpdateSelectedKey(const struct FInputChord& InSelectedKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableInputKeySelector", "UpdateSelectedKey");

	Params::VNavigableInputKeySelector_UpdateSelectedKey Parms{};

	Parms.InSelectedKey = std::move(InSelectedKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableInputKeySelector.GetCurrentKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FInputChord                ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FInputChord UVNavigableInputKeySelector::GetCurrentKey() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableInputKeySelector", "GetCurrentKey");

	Params::VNavigableInputKeySelector_GetCurrentKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableInputKeySelector.GetIsListening
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVNavigableInputKeySelector::GetIsListening() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableInputKeySelector", "GetIsListening");

	Params::VNavigableInputKeySelector_GetIsListening Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableInputKeySelector.IsCorrectInputType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVNavigableInputKeySelector::IsCorrectInputType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableInputKeySelector", "IsCorrectInputType");

	Params::VNavigableInputKeySelector_IsCorrectInputType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableListView.AddItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ItemToAdd                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableListView::AddItem(class UObject* ItemToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableListView", "AddItem");

	Params::VNavigableListView_AddItem Parms{};

	Parms.ItemToAdd = ItemToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableListView.ClearSelection
// (Final, Native, Public, BlueprintCallable)

void UVNavigableListView::ClearSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableListView", "ClearSelection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableListView.NavigateToElement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ItemToNavigateTo                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableListView::NavigateToElement(class UObject* ItemToNavigateTo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableListView", "NavigateToElement");

	Params::VNavigableListView_NavigateToElement Parms{};

	Parms.ItemToNavigateTo = ItemToNavigateTo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableListView.NavigateToIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableListView::NavigateToIndex(int32 NewIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableListView", "NavigateToIndex");

	Params::VNavigableListView_NavigateToIndex Parms{};

	Parms.NewIndex = NewIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableListView.NavigateToNextElement
// (Final, Native, Public, BlueprintCallable)

void UVNavigableListView::NavigateToNextElement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableListView", "NavigateToNextElement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableListView.NavigateToPrevElement
// (Final, Native, Public, BlueprintCallable)

void UVNavigableListView::NavigateToPrevElement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableListView", "NavigateToPrevElement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableListView.StopAutomaticElementNavigation
// (Final, Native, Public, BlueprintCallable)

void UVNavigableListView::StopAutomaticElementNavigation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableListView", "StopAutomaticElementNavigation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableListView.GetCurrentElementIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UVNavigableListView::GetCurrentElementIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableListView", "GetCurrentElementIndex");

	Params::VNavigableListView_GetCurrentElementIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableListView.GetFocusedElement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UVNavigableListView::GetFocusedElement() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableListView", "GetFocusedElement");

	Params::VNavigableListView_GetFocusedElement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableListView.GetItemAt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UVNavigableListView::GetItemAt(int32 ItemIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableListView", "GetItemAt");

	Params::VNavigableListView_GetItemAt Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableListView.GetListView
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCommonListView*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCommonListView* UVNavigableListView::GetListView() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableListView", "GetListView");

	Params::VNavigableListView_GetListView Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableListView.GetSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UVNavigableListView::GetSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableListView", "GetSize");

	Params::VNavigableListView_GetSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableListView.GetWidgetFromItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UVNavigableListView::GetWidgetFromItem(class UObject* Item) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableListView", "GetWidgetFromItem");

	Params::VNavigableListView_GetWidgetFromItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableListView.ListViewIsVertical
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVNavigableListView::ListViewIsVertical() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableListView", "ListViewIsVertical");

	Params::VNavigableListView_ListViewIsVertical Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableScrollBox.AddChild
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCommonUserWidget*                ChildToAdd                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPanelSlot*                       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPanelSlot* UVNavigableScrollBox::AddChild(class UCommonUserWidget* ChildToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableScrollBox", "AddChild");

	Params::VNavigableScrollBox_AddChild Parms{};

	Parms.ChildToAdd = ChildToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableScrollBox.ClearChildren
// (Final, Native, Public, BlueprintCallable)

void UVNavigableScrollBox::ClearChildren()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableScrollBox", "ClearChildren");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableScrollBox.GetScrollBox
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UScrollBox*                       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UScrollBox* UVNavigableScrollBox::GetScrollBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableScrollBox", "GetScrollBox");

	Params::VNavigableScrollBox_GetScrollBox Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableScrollBox.NavigateToElement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCommonUserWidget*                ItemToNavigateTo                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableScrollBox::NavigateToElement(class UCommonUserWidget* ItemToNavigateTo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableScrollBox", "NavigateToElement");

	Params::VNavigableScrollBox_NavigateToElement Parms{};

	Parms.ItemToNavigateTo = ItemToNavigateTo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableScrollBox.NavigateToIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableScrollBox::NavigateToIndex(int32 NewIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableScrollBox", "NavigateToIndex");

	Params::VNavigableScrollBox_NavigateToIndex Parms{};

	Parms.NewIndex = NewIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableScrollBox.NavigateToNextElement
// (Final, Native, Public, BlueprintCallable)

void UVNavigableScrollBox::NavigateToNextElement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableScrollBox", "NavigateToNextElement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableScrollBox.NavigateToPrevElement
// (Final, Native, Public, BlueprintCallable)

void UVNavigableScrollBox::NavigateToPrevElement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableScrollBox", "NavigateToPrevElement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableScrollBox.OnChildHovered
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const TScriptInterface<class IVEnhancedInputNavigable>&HoveredWidget                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableScrollBox::OnChildHovered(const TScriptInterface<class IVEnhancedInputNavigable>& HoveredWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableScrollBox", "OnChildHovered");

	Params::VNavigableScrollBox_OnChildHovered Parms{};

	Parms.HoveredWidget = HoveredWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableScrollBox.OnChildHoveredBP
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TScriptInterface<class IVEnhancedInputNavigable>&HoveredWidget                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableScrollBox::OnChildHoveredBP(const TScriptInterface<class IVEnhancedInputNavigable>& HoveredWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableScrollBox", "OnChildHoveredBP");

	Params::VNavigableScrollBox_OnChildHoveredBP Parms{};

	Parms.HoveredWidget = HoveredWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableScrollBox.SetFocusedElementIndex
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   NewIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableScrollBox::SetFocusedElementIndex(int32 NewIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableScrollBox", "SetFocusedElementIndex");

	Params::VNavigableScrollBox_SetFocusedElementIndex Parms{};

	Parms.NewIndex = NewIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableScrollBox.GetFocusedElement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCommonUserWidget*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCommonUserWidget* UVNavigableScrollBox::GetFocusedElement() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableScrollBox", "GetFocusedElement");

	Params::VNavigableScrollBox_GetFocusedElement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableScrollBox.GetFocusElementIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UVNavigableScrollBox::GetFocusElementIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableScrollBox", "GetFocusElementIndex");

	Params::VNavigableScrollBox_GetFocusElementIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableScrollBox.GetSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UVNavigableScrollBox::GetSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableScrollBox", "GetSize");

	Params::VNavigableScrollBox_GetSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableSlider.GetSlider
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnalogSlider*                    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnalogSlider* UVNavigableSlider::GetSlider() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableSlider", "GetSlider");

	Params::VNavigableSlider_GetSlider Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableSlider.GetSliderValueAsPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UVNavigableSlider::GetSliderValueAsPercentage(float Value) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableSlider", "GetSliderValueAsPercentage");

	Params::VNavigableSlider_GetSliderValueAsPercentage Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableTileView.AddItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ItemToAdd                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableTileView::AddItem(class UObject* ItemToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableTileView", "AddItem");

	Params::VNavigableTileView_AddItem Parms{};

	Parms.ItemToAdd = ItemToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableTileView.BP_OnItemClicked
// (Event, Public, BlueprintEvent)
// Parameters:
// class UObject*                          ClickedItem                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableTileView::BP_OnItemClicked(class UObject* ClickedItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableTileView", "BP_OnItemClicked");

	Params::VNavigableTileView_BP_OnItemClicked Parms{};

	Parms.ClickedItem = ClickedItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableTileView.BP_OnItemHovered
// (Event, Public, BlueprintEvent)
// Parameters:
// class UObject*                          NewHoveredItem                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableTileView::BP_OnItemHovered(class UObject* NewHoveredItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableTileView", "BP_OnItemHovered");

	Params::VNavigableTileView_BP_OnItemHovered Parms{};

	Parms.NewHoveredItem = NewHoveredItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VCommonUIEnhancedInputNavigation.VNavigableTileView.ClearTileViewItems
// (Final, Native, Public, BlueprintCallable)

void UVNavigableTileView::ClearTileViewItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableTileView", "ClearTileViewItems");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableTileView.NavigateToElement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ItemToNavigateTo                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableTileView::NavigateToElement(class UObject* ItemToNavigateTo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableTileView", "NavigateToElement");

	Params::VNavigableTileView_NavigateToElement Parms{};

	Parms.ItemToNavigateTo = ItemToNavigateTo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableTileView.NavigateToIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewLine                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewColumn                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableTileView::NavigateToIndex(int32 NewLine, int32 NewColumn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableTileView", "NavigateToIndex");

	Params::VNavigableTileView_NavigateToIndex Parms{};

	Parms.NewLine = NewLine;
	Parms.NewColumn = NewColumn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableTileView.NavigateToIndex1D
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableTileView::NavigateToIndex1D(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableTileView", "NavigateToIndex1D");

	Params::VNavigableTileView_NavigateToIndex1D Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableTileView.SetIndex
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   NewLine                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewColumn                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableTileView::SetIndex(int32 NewLine, int32 NewColumn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableTileView", "SetIndex");

	Params::VNavigableTileView_SetIndex Parms{};

	Parms.NewLine = NewLine;
	Parms.NewColumn = NewColumn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableTileView.GetFocusedItemIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTileViewIndex                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FTileViewIndex UVNavigableTileView::GetFocusedItemIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableTileView", "GetFocusedItemIndex");

	Params::VNavigableTileView_GetFocusedItemIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableTileView.GetIndexOfItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UVNavigableTileView::GetIndexOfItem(class UObject* Item) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableTileView", "GetIndexOfItem");

	Params::VNavigableTileView_GetIndexOfItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableTileView.GetItemAt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Line                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Column                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UVNavigableTileView::GetItemAt(int32 Line, int32 Column) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableTileView", "GetItemAt");

	Params::VNavigableTileView_GetItemAt Parms{};

	Parms.Line = Line;
	Parms.Column = Column;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableTileView.GetItemsPerLine
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UVNavigableTileView::GetItemsPerLine() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableTileView", "GetItemsPerLine");

	Params::VNavigableTileView_GetItemsPerLine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableTileView.GetLinesPerColumn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UVNavigableTileView::GetLinesPerColumn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableTileView", "GetLinesPerColumn");

	Params::VNavigableTileView_GetLinesPerColumn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableTileView.GetSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UVNavigableTileView::GetSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableTileView", "GetSize");

	Params::VNavigableTileView_GetSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableTileView.GetTileView
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCommonTileView*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCommonTileView* UVNavigableTileView::GetTileView() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableTileView", "GetTileView");

	Params::VNavigableTileView_GetTileView Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableTileView.GetTileViewItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UObject*>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UObject*> UVNavigableTileView::GetTileViewItems() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableTileView", "GetTileViewItems");

	Params::VNavigableTileView_GetTileViewItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableTileView.GetWidgetFromItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UVNavigableTileView::GetWidgetFromItem(class UObject* Item) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableTileView", "GetWidgetFromItem");

	Params::VNavigableTileView_GetWidgetFromItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableVerticalBox.AddChild
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCommonUserWidget*                ChildToAdd                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPanelSlot*                       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPanelSlot* UVNavigableVerticalBox::AddChild(class UCommonUserWidget* ChildToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableVerticalBox", "AddChild");

	Params::VNavigableVerticalBox_AddChild Parms{};

	Parms.ChildToAdd = ChildToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableVerticalBox.ClearChildren
// (Final, Native, Public, BlueprintCallable)

void UVNavigableVerticalBox::ClearChildren()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableVerticalBox", "ClearChildren");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableVerticalBox.GetVerticalBox
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UVerticalBox*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UVerticalBox* UVNavigableVerticalBox::GetVerticalBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableVerticalBox", "GetVerticalBox");

	Params::VNavigableVerticalBox_GetVerticalBox Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableVerticalBox.NavigateToElement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCommonUserWidget*                ItemToNavigateTo                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableVerticalBox::NavigateToElement(class UCommonUserWidget* ItemToNavigateTo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableVerticalBox", "NavigateToElement");

	Params::VNavigableVerticalBox_NavigateToElement Parms{};

	Parms.ItemToNavigateTo = ItemToNavigateTo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableVerticalBox.NavigateToIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableVerticalBox::NavigateToIndex(int32 NewIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableVerticalBox", "NavigateToIndex");

	Params::VNavigableVerticalBox_NavigateToIndex Parms{};

	Parms.NewIndex = NewIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableVerticalBox.NavigateToNextElement
// (Final, Native, Public, BlueprintCallable)

void UVNavigableVerticalBox::NavigateToNextElement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableVerticalBox", "NavigateToNextElement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableVerticalBox.NavigateToPrevElement
// (Final, Native, Public, BlueprintCallable)

void UVNavigableVerticalBox::NavigateToPrevElement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableVerticalBox", "NavigateToPrevElement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableVerticalBox.OnChildHovered
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const TScriptInterface<class IVEnhancedInputNavigable>&HoveredWidget                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableVerticalBox::OnChildHovered(const TScriptInterface<class IVEnhancedInputNavigable>& HoveredWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableVerticalBox", "OnChildHovered");

	Params::VNavigableVerticalBox_OnChildHovered Parms{};

	Parms.HoveredWidget = HoveredWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableVerticalBox.GetFocusElementIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UVNavigableVerticalBox::GetFocusElementIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableVerticalBox", "GetFocusElementIndex");

	Params::VNavigableVerticalBox_GetFocusElementIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableVerticalBox.GetSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UVNavigableVerticalBox::GetSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableVerticalBox", "GetSize");

	Params::VNavigableVerticalBox_GetSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableWidgetSwitcher.AddChild
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          ChildToAdd                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPanelSlot*                       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPanelSlot* UVNavigableWidgetSwitcher::AddChild(class UWidget* ChildToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableWidgetSwitcher", "AddChild");

	Params::VNavigableWidgetSwitcher_AddChild Parms{};

	Parms.ChildToAdd = ChildToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableWidgetSwitcher.ClearChildren
// (Final, Native, Public, BlueprintCallable)

void UVNavigableWidgetSwitcher::ClearChildren()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableWidgetSwitcher", "ClearChildren");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableWidgetSwitcher.DisplayIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableWidgetSwitcher::DisplayIndex(int32 NewIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableWidgetSwitcher", "DisplayIndex");

	Params::VNavigableWidgetSwitcher_DisplayIndex Parms{};

	Parms.NewIndex = NewIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableWidgetSwitcher.DisplayWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          NewWidget                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableWidgetSwitcher::DisplayWidget(class UWidget* NewWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableWidgetSwitcher", "DisplayWidget");

	Params::VNavigableWidgetSwitcher_DisplayWidget Parms{};

	Parms.NewWidget = NewWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableWidgetSwitcher.NavigateToIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableWidgetSwitcher::NavigateToIndex(int32 NewIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableWidgetSwitcher", "NavigateToIndex");

	Params::VNavigableWidgetSwitcher_NavigateToIndex Parms{};

	Parms.NewIndex = NewIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableWidgetSwitcher.NavigateToWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          NewWidget                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVNavigableWidgetSwitcher::NavigateToWidget(class UWidget* NewWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableWidgetSwitcher", "NavigateToWidget");

	Params::VNavigableWidgetSwitcher_NavigateToWidget Parms{};

	Parms.NewWidget = NewWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableWidgetSwitcher.GetCurrentIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UVNavigableWidgetSwitcher::GetCurrentIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableWidgetSwitcher", "GetCurrentIndex");

	Params::VNavigableWidgetSwitcher_GetCurrentIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableWidgetSwitcher.GetCurrentWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UVNavigableWidgetSwitcher::GetCurrentWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableWidgetSwitcher", "GetCurrentWidget");

	Params::VNavigableWidgetSwitcher_GetCurrentWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VNavigableWidgetSwitcher.GetSwitcher
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidgetSwitcher*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidgetSwitcher* UVNavigableWidgetSwitcher::GetSwitcher() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VNavigableWidgetSwitcher", "GetSwitcher");

	Params::VNavigableWidgetSwitcher_GetSwitcher Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VUINavigationGlobalSubsystem.NavigateBack
// (Final, Native, Public, BlueprintCallable)

void UVUINavigationGlobalSubsystem::NavigateBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VUINavigationGlobalSubsystem", "NavigateBack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VUINavigationGlobalSubsystem.NavigateToPreviousLayer
// (Final, Native, Public, BlueprintCallable)

void UVUINavigationGlobalSubsystem::NavigateToPreviousLayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VUINavigationGlobalSubsystem", "NavigateToPreviousLayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VUINavigationGlobalSubsystem.NavigateToWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TScriptInterface<class IVEnhancedInputNavigable>&Widget                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVUINavigationGlobalSubsystem::NavigateToWidget(const TScriptInterface<class IVEnhancedInputNavigable>& Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VUINavigationGlobalSubsystem", "NavigateToWidget");

	Params::VUINavigationGlobalSubsystem_NavigateToWidget Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VCommonUIEnhancedInputNavigation.VUINavigationGlobalSubsystem.GetGenericInputAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EVGenericNavigationAction               GenericInputActionType                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVGenericInputActionData   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FVGenericInputActionData UVUINavigationGlobalSubsystem::GetGenericInputAction(EVGenericNavigationAction GenericInputActionType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VUINavigationGlobalSubsystem", "GetGenericInputAction");

	Params::VUINavigationGlobalSubsystem_GetGenericInputAction Parms{};

	Parms.GenericInputActionType = GenericInputActionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VUINavigationGlobalSubsystem.GetGenericNavigationInputMappingContext
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UInputMappingContext*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UInputMappingContext* UVUINavigationGlobalSubsystem::GetGenericNavigationInputMappingContext() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VUINavigationGlobalSubsystem", "GetGenericNavigationInputMappingContext");

	Params::VUINavigationGlobalSubsystem_GetGenericNavigationInputMappingContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VUINavigationGlobalSubsystem.IsWidgetInTopMostFocusedStack
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TScriptInterface<class IVEnhancedInputNavigable>&Widget                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const bool UVUINavigationGlobalSubsystem::IsWidgetInTopMostFocusedStack(const TScriptInterface<class IVEnhancedInputNavigable>& Widget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VUINavigationGlobalSubsystem", "IsWidgetInTopMostFocusedStack");

	Params::VUINavigationGlobalSubsystem_IsWidgetInTopMostFocusedStack Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VUINavigationGlobalSubsystem.IsWidgetTopMostFocusedOne
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TScriptInterface<class IVEnhancedInputNavigable>&Widget                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const bool UVUINavigationGlobalSubsystem::IsWidgetTopMostFocusedOne(const TScriptInterface<class IVEnhancedInputNavigable>& Widget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VUINavigationGlobalSubsystem", "IsWidgetTopMostFocusedOne");

	Params::VUINavigationGlobalSubsystem_IsWidgetTopMostFocusedOne Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VUINavigationPlayerSubsystem.IsAltKeyDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVUINavigationPlayerSubsystem::IsAltKeyDown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VUINavigationPlayerSubsystem", "IsAltKeyDown");

	Params::VUINavigationPlayerSubsystem_IsAltKeyDown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VUINavigationPlayerSubsystem.IsCtrlKeyDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVUINavigationPlayerSubsystem::IsCtrlKeyDown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VUINavigationPlayerSubsystem", "IsCtrlKeyDown");

	Params::VUINavigationPlayerSubsystem_IsCtrlKeyDown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VCommonUIEnhancedInputNavigation.VUINavigationPlayerSubsystem.IsShiftKeyDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVUINavigationPlayerSubsystem::IsShiftKeyDown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VUINavigationPlayerSubsystem", "IsShiftKeyDown");

	Params::VUINavigationPlayerSubsystem_IsShiftKeyDown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

