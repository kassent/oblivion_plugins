#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ModernHud_DamageIndicators

#include "Basic.hpp"

#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ModernHud_DamageIndicators.WBP_ModernHud_DamageIndicators_C
// 0x0028 (0x0310 - 0x02E8)
class UWBP_ModernHud_DamageIndicators_C final : public UCommonUserWidget
{
public:
	class UImage*                                 Apparel;                                           // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Overencumbered;                                    // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Weapon;                                            // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          WeaponShieldVisible;                               // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AboutToBreakThreshold;                             // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Update_Weapon_Damage_Visibility(bool InVisible, double InHealth);
	void UpdateApparelDamageVisibility(const struct FModernApparelData& InApparelData);
	void UpdateOverencumberedVisibility(bool bIsOverencumbered);
	void UpdateWeaponHealth(double InHealth);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ModernHud_DamageIndicators_C">();
	}
	static class UWBP_ModernHud_DamageIndicators_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ModernHud_DamageIndicators_C>();
	}
};
static_assert(alignof(UWBP_ModernHud_DamageIndicators_C) == 0x000008, "Wrong alignment on UWBP_ModernHud_DamageIndicators_C");
static_assert(sizeof(UWBP_ModernHud_DamageIndicators_C) == 0x000310, "Wrong size on UWBP_ModernHud_DamageIndicators_C");
static_assert(offsetof(UWBP_ModernHud_DamageIndicators_C, Apparel) == 0x0002E8, "Member 'UWBP_ModernHud_DamageIndicators_C::Apparel' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_DamageIndicators_C, Overencumbered) == 0x0002F0, "Member 'UWBP_ModernHud_DamageIndicators_C::Overencumbered' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_DamageIndicators_C, Weapon) == 0x0002F8, "Member 'UWBP_ModernHud_DamageIndicators_C::Weapon' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_DamageIndicators_C, WeaponShieldVisible) == 0x000300, "Member 'UWBP_ModernHud_DamageIndicators_C::WeaponShieldVisible' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_DamageIndicators_C, AboutToBreakThreshold) == 0x000308, "Member 'UWBP_ModernHud_DamageIndicators_C::AboutToBreakThreshold' has a wrong offset!");

}

