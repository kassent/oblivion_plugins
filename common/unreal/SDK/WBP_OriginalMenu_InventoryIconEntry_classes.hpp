#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_OriginalMenu_InventoryIconEntry

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_OriginalMenu_InventoryIconEntry.WBP_OriginalMenu_InventoryIconEntry_C
// 0x0168 (0x0450 - 0x02E8)
class UWBP_OriginalMenu_InventoryIconEntry_C final : public UCommonUserWidget
{
public:
	class UWBP_OriginalImageTile_C*               inv_entry_icon;                                    // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AltarTextBlock_C*                  inv_entry_icon_count;                              // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<int32, struct FSlateBrush>               StatusBrushMap;                                    // 0x02F8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	double                                        Health;                                            // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCountVisible;                                    // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Count;                                             // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            ItemBrush;                                         // 0x0360(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   MaxTextForCount;                                   // 0x0430(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void SetCount(int32 NewValue);
	void SetIsCountVisible(bool IsVisible_0);
	void SetItemBrush(class UTexture2D* NewIcon);
	void Update_Count_Visibility_And_Text();

	class FText FormatCountText(int32 Value) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_OriginalMenu_InventoryIconEntry_C">();
	}
	static class UWBP_OriginalMenu_InventoryIconEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_OriginalMenu_InventoryIconEntry_C>();
	}
};
static_assert(alignof(UWBP_OriginalMenu_InventoryIconEntry_C) == 0x000010, "Wrong alignment on UWBP_OriginalMenu_InventoryIconEntry_C");
static_assert(sizeof(UWBP_OriginalMenu_InventoryIconEntry_C) == 0x000450, "Wrong size on UWBP_OriginalMenu_InventoryIconEntry_C");
static_assert(offsetof(UWBP_OriginalMenu_InventoryIconEntry_C, inv_entry_icon) == 0x0002E8, "Member 'UWBP_OriginalMenu_InventoryIconEntry_C::inv_entry_icon' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryIconEntry_C, inv_entry_icon_count) == 0x0002F0, "Member 'UWBP_OriginalMenu_InventoryIconEntry_C::inv_entry_icon_count' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryIconEntry_C, StatusBrushMap) == 0x0002F8, "Member 'UWBP_OriginalMenu_InventoryIconEntry_C::StatusBrushMap' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryIconEntry_C, Health) == 0x000348, "Member 'UWBP_OriginalMenu_InventoryIconEntry_C::Health' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryIconEntry_C, IsCountVisible) == 0x000350, "Member 'UWBP_OriginalMenu_InventoryIconEntry_C::IsCountVisible' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryIconEntry_C, Count) == 0x000354, "Member 'UWBP_OriginalMenu_InventoryIconEntry_C::Count' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryIconEntry_C, ItemBrush) == 0x000360, "Member 'UWBP_OriginalMenu_InventoryIconEntry_C::ItemBrush' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryIconEntry_C, MaxTextForCount) == 0x000430, "Member 'UWBP_OriginalMenu_InventoryIconEntry_C::MaxTextForCount' has a wrong offset!");

}

