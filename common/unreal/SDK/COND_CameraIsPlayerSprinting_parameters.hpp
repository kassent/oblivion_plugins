#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COND_CameraIsPlayerSprinting

#include "Basic.hpp"


namespace SDK::Params
{

// Function COND_CameraIsPlayerSprinting.COND_CameraIsPlayerSprinting_C.ExecuteUbergraph_COND_CameraIsPlayerSprinting
// 0x0050 (0x0050 - 0x0000)
struct COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVStateBase*                            K2Node_Event_OwnerState;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVStateMachineComponent*                CallFunc_GetOwningStateMachineComponent_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AVPairedPawn*                           K2Node_DynamicCast_AsVPaired_Pawn;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_AltarPlayerCameraManager_C*         K2Node_DynamicCast_AsBP_Altar_Player_Camera_Manager; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting) == 0x000008, "Wrong alignment on COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting");
static_assert(sizeof(COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting) == 0x000050, "Wrong size on COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting");
static_assert(offsetof(COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting, EntryPoint) == 0x000000, "Member 'COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting::EntryPoint' has a wrong offset!");
static_assert(offsetof(COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting, CallFunc_GetOwningPlayerController_ReturnValue) == 0x000008, "Member 'COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting::CallFunc_GetOwningPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting, K2Node_Event_OwnerState) == 0x000010, "Member 'COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting::K2Node_Event_OwnerState' has a wrong offset!");
static_assert(offsetof(COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting, CallFunc_K2_GetPawn_ReturnValue) == 0x000018, "Member 'COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting, CallFunc_GetOwningStateMachineComponent_ReturnValue) == 0x000020, "Member 'COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting::CallFunc_GetOwningStateMachineComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting, K2Node_DynamicCast_AsVPaired_Pawn) == 0x000028, "Member 'COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting::K2Node_DynamicCast_AsVPaired_Pawn' has a wrong offset!");
static_assert(offsetof(COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting, K2Node_DynamicCast_AsBP_Altar_Player_Camera_Manager) == 0x000040, "Member 'COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting::K2Node_DynamicCast_AsBP_Altar_Player_Camera_Manager' has a wrong offset!");
static_assert(offsetof(COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'COND_CameraIsPlayerSprinting_C_ExecuteUbergraph_COND_CameraIsPlayerSprinting::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function COND_CameraIsPlayerSprinting.COND_CameraIsPlayerSprinting_C.PostInit
// 0x0008 (0x0008 - 0x0000)
struct COND_CameraIsPlayerSprinting_C_PostInit final
{
public:
	class UVStateBase*                            OwnerState;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COND_CameraIsPlayerSprinting_C_PostInit) == 0x000008, "Wrong alignment on COND_CameraIsPlayerSprinting_C_PostInit");
static_assert(sizeof(COND_CameraIsPlayerSprinting_C_PostInit) == 0x000008, "Wrong size on COND_CameraIsPlayerSprinting_C_PostInit");
static_assert(offsetof(COND_CameraIsPlayerSprinting_C_PostInit, OwnerState) == 0x000000, "Member 'COND_CameraIsPlayerSprinting_C_PostInit::OwnerState' has a wrong offset!");

// Function COND_CameraIsPlayerSprinting.COND_CameraIsPlayerSprinting_C.CheckCondition
// 0x0010 (0x0010 - 0x0000)
struct COND_CameraIsPlayerSprinting_C_CheckCondition final
{
public:
	class UVStateBase*                            CurrentState;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSprinting_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COND_CameraIsPlayerSprinting_C_CheckCondition) == 0x000008, "Wrong alignment on COND_CameraIsPlayerSprinting_C_CheckCondition");
static_assert(sizeof(COND_CameraIsPlayerSprinting_C_CheckCondition) == 0x000010, "Wrong size on COND_CameraIsPlayerSprinting_C_CheckCondition");
static_assert(offsetof(COND_CameraIsPlayerSprinting_C_CheckCondition, CurrentState) == 0x000000, "Member 'COND_CameraIsPlayerSprinting_C_CheckCondition::CurrentState' has a wrong offset!");
static_assert(offsetof(COND_CameraIsPlayerSprinting_C_CheckCondition, ReturnValue) == 0x000008, "Member 'COND_CameraIsPlayerSprinting_C_CheckCondition::ReturnValue' has a wrong offset!");
static_assert(offsetof(COND_CameraIsPlayerSprinting_C_CheckCondition, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'COND_CameraIsPlayerSprinting_C_CheckCondition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COND_CameraIsPlayerSprinting_C_CheckCondition, CallFunc_IsSprinting_ReturnValue) == 0x00000A, "Member 'COND_CameraIsPlayerSprinting_C_CheckCondition::CallFunc_IsSprinting_ReturnValue' has a wrong offset!");

}

