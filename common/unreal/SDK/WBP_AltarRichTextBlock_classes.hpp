#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AltarRichTextBlock

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CommonInput_structs.hpp"
#include "Altar_classes.hpp"
#include "Slate_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_AltarRichTextBlock.WBP_AltarRichTextBlock_C
// 0x0100 (0x05C8 - 0x04C8)
class UWBP_AltarRichTextBlock_C final : public UVAltarWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVAltarRichTextBlock*                   rich_text_block;                                   // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateColor                            Color;                                             // 0x04D8(0x0014)(Edit, BlueprintVisible, ExposeOnSpawn)
	uint8                                         Pad_4EC[0x4];                                      // 0x04EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         FontInfo;                                          // 0x04F0(0x0058)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0548(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          IsScrollingEnable;                                 // 0x0560(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          ApplyFontSizeScalling;                             // 0x0561(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_562[0x2];                                      // 0x0562(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LocalSmallScaleDelta;                              // 0x0564(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalLargeScaleDelta;                              // 0x0568(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Justification;                                     // 0x056C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          AutoWrap;                                          // 0x056D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_56E[0x2];                                      // 0x056E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Text_Style_Set;                                    // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class UClass*>                         Decorator_Classes;                                 // 0x0578(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          OverrideDefautTextStyle;                           // 0x0588(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_589[0x7];                                      // 0x0589(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        WrappedTextAt;                                     // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Font_Size_Channel;                                 // 0x0598(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFontSet;                                         // 0x0599(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59A[0x2];                                      // 0x059A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Shadow_Color_and_Opacity;                          // 0x059C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AC[0x4];                                      // 0x05AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Shadow_Offset;                                     // 0x05B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Line_Height_Percentage;                            // 0x05C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void Destruct();
	void ExecuteUbergraph_WBP_AltarRichTextBlock(int32 EntryPoint);
	void On_Input_Method_Changed(ECommonInputType NewInputType);
	void PreConstruct(bool IsDesignTime);
	void SetFontSize(int32 NewFontSize);
	void SetText(const class FText& InText);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_AltarRichTextBlock_C">();
	}
	static class UWBP_AltarRichTextBlock_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_AltarRichTextBlock_C>();
	}
};
static_assert(alignof(UWBP_AltarRichTextBlock_C) == 0x000008, "Wrong alignment on UWBP_AltarRichTextBlock_C");
static_assert(sizeof(UWBP_AltarRichTextBlock_C) == 0x0005C8, "Wrong size on UWBP_AltarRichTextBlock_C");
static_assert(offsetof(UWBP_AltarRichTextBlock_C, UberGraphFrame) == 0x0004C8, "Member 'UWBP_AltarRichTextBlock_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_AltarRichTextBlock_C, rich_text_block) == 0x0004D0, "Member 'UWBP_AltarRichTextBlock_C::rich_text_block' has a wrong offset!");
static_assert(offsetof(UWBP_AltarRichTextBlock_C, Color) == 0x0004D8, "Member 'UWBP_AltarRichTextBlock_C::Color' has a wrong offset!");
static_assert(offsetof(UWBP_AltarRichTextBlock_C, FontInfo) == 0x0004F0, "Member 'UWBP_AltarRichTextBlock_C::FontInfo' has a wrong offset!");
static_assert(offsetof(UWBP_AltarRichTextBlock_C, Text) == 0x000548, "Member 'UWBP_AltarRichTextBlock_C::Text' has a wrong offset!");
static_assert(offsetof(UWBP_AltarRichTextBlock_C, IsScrollingEnable) == 0x000560, "Member 'UWBP_AltarRichTextBlock_C::IsScrollingEnable' has a wrong offset!");
static_assert(offsetof(UWBP_AltarRichTextBlock_C, ApplyFontSizeScalling) == 0x000561, "Member 'UWBP_AltarRichTextBlock_C::ApplyFontSizeScalling' has a wrong offset!");
static_assert(offsetof(UWBP_AltarRichTextBlock_C, LocalSmallScaleDelta) == 0x000564, "Member 'UWBP_AltarRichTextBlock_C::LocalSmallScaleDelta' has a wrong offset!");
static_assert(offsetof(UWBP_AltarRichTextBlock_C, LocalLargeScaleDelta) == 0x000568, "Member 'UWBP_AltarRichTextBlock_C::LocalLargeScaleDelta' has a wrong offset!");
static_assert(offsetof(UWBP_AltarRichTextBlock_C, Justification) == 0x00056C, "Member 'UWBP_AltarRichTextBlock_C::Justification' has a wrong offset!");
static_assert(offsetof(UWBP_AltarRichTextBlock_C, AutoWrap) == 0x00056D, "Member 'UWBP_AltarRichTextBlock_C::AutoWrap' has a wrong offset!");
static_assert(offsetof(UWBP_AltarRichTextBlock_C, Text_Style_Set) == 0x000570, "Member 'UWBP_AltarRichTextBlock_C::Text_Style_Set' has a wrong offset!");
static_assert(offsetof(UWBP_AltarRichTextBlock_C, Decorator_Classes) == 0x000578, "Member 'UWBP_AltarRichTextBlock_C::Decorator_Classes' has a wrong offset!");
static_assert(offsetof(UWBP_AltarRichTextBlock_C, OverrideDefautTextStyle) == 0x000588, "Member 'UWBP_AltarRichTextBlock_C::OverrideDefautTextStyle' has a wrong offset!");
static_assert(offsetof(UWBP_AltarRichTextBlock_C, WrappedTextAt) == 0x000590, "Member 'UWBP_AltarRichTextBlock_C::WrappedTextAt' has a wrong offset!");
static_assert(offsetof(UWBP_AltarRichTextBlock_C, Font_Size_Channel) == 0x000598, "Member 'UWBP_AltarRichTextBlock_C::Font_Size_Channel' has a wrong offset!");
static_assert(offsetof(UWBP_AltarRichTextBlock_C, IsFontSet) == 0x000599, "Member 'UWBP_AltarRichTextBlock_C::IsFontSet' has a wrong offset!");
static_assert(offsetof(UWBP_AltarRichTextBlock_C, Shadow_Color_and_Opacity) == 0x00059C, "Member 'UWBP_AltarRichTextBlock_C::Shadow_Color_and_Opacity' has a wrong offset!");
static_assert(offsetof(UWBP_AltarRichTextBlock_C, Shadow_Offset) == 0x0005B0, "Member 'UWBP_AltarRichTextBlock_C::Shadow_Offset' has a wrong offset!");
static_assert(offsetof(UWBP_AltarRichTextBlock_C, Line_Height_Percentage) == 0x0005C0, "Member 'UWBP_AltarRichTextBlock_C::Line_Height_Percentage' has a wrong offset!");

}

