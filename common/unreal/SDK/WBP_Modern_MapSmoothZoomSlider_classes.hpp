#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Modern_MapSmoothZoomSlider

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonInput_structs.hpp"
#include "Altar_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Modern_MapSmoothZoomSlider.WBP_Modern_MapSmoothZoomSlider_C
// 0x0068 (0x0610 - 0x05A8)
class UWBP_Modern_MapSmoothZoomSlider_C final : public UVModern_MapZoomSliderSmooth
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_OriginalImageTile_C*               DecreaseButtonImage;                               // 0x05B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModernPrefab_ControllerInputHint_C* DecreaseInput;                                    // 0x05B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OriginalImageTile_C*               HackHandle;                                        // 0x05C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OriginalImageTile_C*               IncreaseButtonImage;                               // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModernPrefab_ControllerInputHint_C* IncreaseInput;                                    // 0x05D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                LocalMapButton;                                    // 0x05D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OriginalImageTile_C*               LocalMapDot;                                       // 0x05E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnMouseUsedDispatcherSmooth;                       // 0x05E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsWorldMap;                                        // 0x05F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMouseCapturing;                                  // 0x05F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsIncreasedButtonPressed;                          // 0x05FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FB[0x5];                                      // 0x05FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnClickLocalMapButton;                             // 0x0600(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BndEvt__WBP_Modern_MapSmoothZoomSlider_DecreaseButton_K2Node_ComponentBoundEvent_2_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__WBP_Modern_MapSmoothZoomSlider_DecreaseButton_K2Node_ComponentBoundEvent_6_OnButtonReleasedEvent__DelegateSignature();
	void BndEvt__WBP_Modern_MapSmoothZoomSlider_IncreaseButton_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__WBP_Modern_MapSmoothZoomSlider_IncreaseButton_K2Node_ComponentBoundEvent_5_OnButtonReleasedEvent__DelegateSignature();
	void BndEvt__WBP_Modern_MapSmoothZoomSlider_LocalMapButton_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_Modern_MapSmoothZoomSlider_Slider_K2Node_ComponentBoundEvent_0_OnMouseCaptureBeginEvent__DelegateSignature();
	void BndEvt__WBP_Modern_MapSmoothZoomSlider_Slider_K2Node_ComponentBoundEvent_3_OnMouseCaptureEndEvent__DelegateSignature();
	void Construct();
	void ExecuteUbergraph_WBP_Modern_MapSmoothZoomSlider(int32 EntryPoint);
	void On_Input_Method_Changed(ECommonInputType NewInputType);
	void PostInit(bool IsWorld);
	void SetHandlePositionWhenChangingMap(bool IsWorldMap_0);
	void SetHandleVisibilityOnly();

	bool IsNavigable() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Modern_MapSmoothZoomSlider_C">();
	}
	static class UWBP_Modern_MapSmoothZoomSlider_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Modern_MapSmoothZoomSlider_C>();
	}
};
static_assert(alignof(UWBP_Modern_MapSmoothZoomSlider_C) == 0x000008, "Wrong alignment on UWBP_Modern_MapSmoothZoomSlider_C");
static_assert(sizeof(UWBP_Modern_MapSmoothZoomSlider_C) == 0x000610, "Wrong size on UWBP_Modern_MapSmoothZoomSlider_C");
static_assert(offsetof(UWBP_Modern_MapSmoothZoomSlider_C, UberGraphFrame) == 0x0005A8, "Member 'UWBP_Modern_MapSmoothZoomSlider_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapSmoothZoomSlider_C, DecreaseButtonImage) == 0x0005B0, "Member 'UWBP_Modern_MapSmoothZoomSlider_C::DecreaseButtonImage' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapSmoothZoomSlider_C, DecreaseInput) == 0x0005B8, "Member 'UWBP_Modern_MapSmoothZoomSlider_C::DecreaseInput' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapSmoothZoomSlider_C, HackHandle) == 0x0005C0, "Member 'UWBP_Modern_MapSmoothZoomSlider_C::HackHandle' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapSmoothZoomSlider_C, IncreaseButtonImage) == 0x0005C8, "Member 'UWBP_Modern_MapSmoothZoomSlider_C::IncreaseButtonImage' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapSmoothZoomSlider_C, IncreaseInput) == 0x0005D0, "Member 'UWBP_Modern_MapSmoothZoomSlider_C::IncreaseInput' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapSmoothZoomSlider_C, LocalMapButton) == 0x0005D8, "Member 'UWBP_Modern_MapSmoothZoomSlider_C::LocalMapButton' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapSmoothZoomSlider_C, LocalMapDot) == 0x0005E0, "Member 'UWBP_Modern_MapSmoothZoomSlider_C::LocalMapDot' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapSmoothZoomSlider_C, OnMouseUsedDispatcherSmooth) == 0x0005E8, "Member 'UWBP_Modern_MapSmoothZoomSlider_C::OnMouseUsedDispatcherSmooth' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapSmoothZoomSlider_C, IsWorldMap) == 0x0005F8, "Member 'UWBP_Modern_MapSmoothZoomSlider_C::IsWorldMap' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapSmoothZoomSlider_C, IsMouseCapturing) == 0x0005F9, "Member 'UWBP_Modern_MapSmoothZoomSlider_C::IsMouseCapturing' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapSmoothZoomSlider_C, IsIncreasedButtonPressed) == 0x0005FA, "Member 'UWBP_Modern_MapSmoothZoomSlider_C::IsIncreasedButtonPressed' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapSmoothZoomSlider_C, OnClickLocalMapButton) == 0x000600, "Member 'UWBP_Modern_MapSmoothZoomSlider_C::OnClickLocalMapButton' has a wrong offset!");

}

