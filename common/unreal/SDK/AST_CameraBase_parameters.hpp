#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AST_CameraBase

#include "Basic.hpp"

#include "Altar_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function AST_CameraBase.AST_CameraBase_C.SetOverrideTransitionDurations
// 0x0050 (0x0050 - 0x0000)
struct AST_CameraBase_C_SetOverrideTransitionDurations final
{
public:
	TMap<struct FGameplayTag, double>             Override_Duration;                                 // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(AST_CameraBase_C_SetOverrideTransitionDurations) == 0x000008, "Wrong alignment on AST_CameraBase_C_SetOverrideTransitionDurations");
static_assert(sizeof(AST_CameraBase_C_SetOverrideTransitionDurations) == 0x000050, "Wrong size on AST_CameraBase_C_SetOverrideTransitionDurations");
static_assert(offsetof(AST_CameraBase_C_SetOverrideTransitionDurations, Override_Duration) == 0x000000, "Member 'AST_CameraBase_C_SetOverrideTransitionDurations::Override_Duration' has a wrong offset!");

// Function AST_CameraBase.AST_CameraBase_C.SetOverrideTransitionCurves
// 0x0050 (0x0050 - 0x0000)
struct AST_CameraBase_C_SetOverrideTransitionCurves final
{
public:
	TMap<struct FGameplayTag, class UCurveFloat*> Override_Curve;                                    // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(AST_CameraBase_C_SetOverrideTransitionCurves) == 0x000008, "Wrong alignment on AST_CameraBase_C_SetOverrideTransitionCurves");
static_assert(sizeof(AST_CameraBase_C_SetOverrideTransitionCurves) == 0x000050, "Wrong size on AST_CameraBase_C_SetOverrideTransitionCurves");
static_assert(offsetof(AST_CameraBase_C_SetOverrideTransitionCurves, Override_Curve) == 0x000000, "Member 'AST_CameraBase_C_SetOverrideTransitionCurves::Override_Curve' has a wrong offset!");

// Function AST_CameraBase.AST_CameraBase_C.SetCameraSettings
// 0x0240 (0x0240 - 0x0000)
struct AST_CameraBase_C_SetCameraSettings final
{
public:
	struct FVCameraSettings                       NewParam;                                          // 0x0000(0x0240)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(AST_CameraBase_C_SetCameraSettings) == 0x000008, "Wrong alignment on AST_CameraBase_C_SetCameraSettings");
static_assert(sizeof(AST_CameraBase_C_SetCameraSettings) == 0x000240, "Wrong size on AST_CameraBase_C_SetCameraSettings");
static_assert(offsetof(AST_CameraBase_C_SetCameraSettings, NewParam) == 0x000000, "Member 'AST_CameraBase_C_SetCameraSettings::NewParam' has a wrong offset!");

// Function AST_CameraBase.AST_CameraBase_C.ExecuteUbergraph_AST_CameraBase
// 0x0004 (0x0004 - 0x0000)
struct AST_CameraBase_C_ExecuteUbergraph_AST_CameraBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AST_CameraBase_C_ExecuteUbergraph_AST_CameraBase) == 0x000004, "Wrong alignment on AST_CameraBase_C_ExecuteUbergraph_AST_CameraBase");
static_assert(sizeof(AST_CameraBase_C_ExecuteUbergraph_AST_CameraBase) == 0x000004, "Wrong size on AST_CameraBase_C_ExecuteUbergraph_AST_CameraBase");
static_assert(offsetof(AST_CameraBase_C_ExecuteUbergraph_AST_CameraBase, EntryPoint) == 0x000000, "Member 'AST_CameraBase_C_ExecuteUbergraph_AST_CameraBase::EntryPoint' has a wrong offset!");

// Function AST_CameraBase.AST_CameraBase_C.ApplyOverrideTransitionParameters
// 0x0080 (0x0080 - 0x0000)
struct AST_CameraBase_C_ApplyOverrideTransitionParameters final
{
public:
	class AVAltarPlayerCameraManager*             PlayerCameraManager;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UVStateMachineComponent*                CallFunc_GetOwningStateMachineComponent_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AVAltarPlayerCameraManager*             K2Node_DynamicCast_AsVAltar_Player_Camera_Manager; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetLastCameraTag_ReturnValue;             // 0x002C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetLastCameraTag_ReturnValue_1;           // 0x0034(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            CallFunc_Map_Find_Value;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_1;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVStateMachineComponent*                CallFunc_GetOwningStateMachineComponent_ReturnValue_1; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AVAltarPlayerCameraManager*             K2Node_DynamicCast_AsVAltar_Player_Camera_Manager_1; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_OverrideTransitionDuration_NewOverrideDuration_ImplicitCast; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AST_CameraBase_C_ApplyOverrideTransitionParameters) == 0x000008, "Wrong alignment on AST_CameraBase_C_ApplyOverrideTransitionParameters");
static_assert(sizeof(AST_CameraBase_C_ApplyOverrideTransitionParameters) == 0x000080, "Wrong size on AST_CameraBase_C_ApplyOverrideTransitionParameters");
static_assert(offsetof(AST_CameraBase_C_ApplyOverrideTransitionParameters, PlayerCameraManager) == 0x000000, "Member 'AST_CameraBase_C_ApplyOverrideTransitionParameters::PlayerCameraManager' has a wrong offset!");
static_assert(offsetof(AST_CameraBase_C_ApplyOverrideTransitionParameters, CallFunc_GetOwningStateMachineComponent_ReturnValue) == 0x000008, "Member 'AST_CameraBase_C_ApplyOverrideTransitionParameters::CallFunc_GetOwningStateMachineComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CameraBase_C_ApplyOverrideTransitionParameters, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'AST_CameraBase_C_ApplyOverrideTransitionParameters::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CameraBase_C_ApplyOverrideTransitionParameters, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'AST_CameraBase_C_ApplyOverrideTransitionParameters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CameraBase_C_ApplyOverrideTransitionParameters, K2Node_DynamicCast_AsVAltar_Player_Camera_Manager) == 0x000020, "Member 'AST_CameraBase_C_ApplyOverrideTransitionParameters::K2Node_DynamicCast_AsVAltar_Player_Camera_Manager' has a wrong offset!");
static_assert(offsetof(AST_CameraBase_C_ApplyOverrideTransitionParameters, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'AST_CameraBase_C_ApplyOverrideTransitionParameters::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AST_CameraBase_C_ApplyOverrideTransitionParameters, CallFunc_GetLastCameraTag_ReturnValue) == 0x00002C, "Member 'AST_CameraBase_C_ApplyOverrideTransitionParameters::CallFunc_GetLastCameraTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CameraBase_C_ApplyOverrideTransitionParameters, CallFunc_GetLastCameraTag_ReturnValue_1) == 0x000034, "Member 'AST_CameraBase_C_ApplyOverrideTransitionParameters::CallFunc_GetLastCameraTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AST_CameraBase_C_ApplyOverrideTransitionParameters, CallFunc_Map_Find_Value) == 0x000040, "Member 'AST_CameraBase_C_ApplyOverrideTransitionParameters::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AST_CameraBase_C_ApplyOverrideTransitionParameters, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'AST_CameraBase_C_ApplyOverrideTransitionParameters::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CameraBase_C_ApplyOverrideTransitionParameters, CallFunc_Map_Find_Value_1) == 0x000050, "Member 'AST_CameraBase_C_ApplyOverrideTransitionParameters::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(AST_CameraBase_C_ApplyOverrideTransitionParameters, CallFunc_Map_Find_ReturnValue_1) == 0x000058, "Member 'AST_CameraBase_C_ApplyOverrideTransitionParameters::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AST_CameraBase_C_ApplyOverrideTransitionParameters, CallFunc_GetOwningStateMachineComponent_ReturnValue_1) == 0x000060, "Member 'AST_CameraBase_C_ApplyOverrideTransitionParameters::CallFunc_GetOwningStateMachineComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AST_CameraBase_C_ApplyOverrideTransitionParameters, CallFunc_GetOwner_ReturnValue_1) == 0x000068, "Member 'AST_CameraBase_C_ApplyOverrideTransitionParameters::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AST_CameraBase_C_ApplyOverrideTransitionParameters, K2Node_DynamicCast_AsVAltar_Player_Camera_Manager_1) == 0x000070, "Member 'AST_CameraBase_C_ApplyOverrideTransitionParameters::K2Node_DynamicCast_AsVAltar_Player_Camera_Manager_1' has a wrong offset!");
static_assert(offsetof(AST_CameraBase_C_ApplyOverrideTransitionParameters, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'AST_CameraBase_C_ApplyOverrideTransitionParameters::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AST_CameraBase_C_ApplyOverrideTransitionParameters, CallFunc_OverrideTransitionDuration_NewOverrideDuration_ImplicitCast) == 0x00007C, "Member 'AST_CameraBase_C_ApplyOverrideTransitionParameters::CallFunc_OverrideTransitionDuration_NewOverrideDuration_ImplicitCast' has a wrong offset!");

// Function AST_CameraBase.AST_CameraBase_C.ApplyCameraSettings
// 0x0020 (0x0020 - 0x0000)
struct AST_CameraBase_C_ApplyCameraSettings final
{
public:
	class UVStateMachineComponent*                CallFunc_GetOwningStateMachineComponent_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AVAltarPlayerCameraManager*             K2Node_DynamicCast_AsVAltar_Player_Camera_Manager; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AST_CameraBase_C_ApplyCameraSettings) == 0x000008, "Wrong alignment on AST_CameraBase_C_ApplyCameraSettings");
static_assert(sizeof(AST_CameraBase_C_ApplyCameraSettings) == 0x000020, "Wrong size on AST_CameraBase_C_ApplyCameraSettings");
static_assert(offsetof(AST_CameraBase_C_ApplyCameraSettings, CallFunc_GetOwningStateMachineComponent_ReturnValue) == 0x000000, "Member 'AST_CameraBase_C_ApplyCameraSettings::CallFunc_GetOwningStateMachineComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CameraBase_C_ApplyCameraSettings, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'AST_CameraBase_C_ApplyCameraSettings::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CameraBase_C_ApplyCameraSettings, K2Node_DynamicCast_AsVAltar_Player_Camera_Manager) == 0x000010, "Member 'AST_CameraBase_C_ApplyCameraSettings::K2Node_DynamicCast_AsVAltar_Player_Camera_Manager' has a wrong offset!");
static_assert(offsetof(AST_CameraBase_C_ApplyCameraSettings, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AST_CameraBase_C_ApplyCameraSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

