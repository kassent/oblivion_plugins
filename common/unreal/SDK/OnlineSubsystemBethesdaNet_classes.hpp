#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OnlineSubsystemBethesdaNet

#include "Basic.hpp"

#include "OnlineSubsystemBethesdaNet_structs.hpp"
#include "UMG_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class OnlineSubsystemBethesdaNet.BethesdaNetEulaProcessCallProxy
// 0x0050 (0x0080 - 0x0030)
class UBethesdaNetEulaProcessCallProxy final : public UOnlineBlueprintCallProxyBase
{
public:
	TMulticastInlineDelegate<void(int32 LocalUserNum, int32 EulaDocId, EBNetEulaStepResult Result, const class FText& Error, bool bIsPrivacyPolicy)> OnStepComplete; // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x40];                                      // 0x0040(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UBethesdaNetEulaProcessCallProxy* AcceptEulaAndMoveNextForPlayer(class UObject* WorldContextObject, class APlayerController* PlayerController, int32 EulaDocId);
	static class UBethesdaNetEulaProcessCallProxy* GetNextEulaForGame(class UObject* WorldContextObject);
	static class UBethesdaNetEulaProcessCallProxy* StartEulaProcessForGame(class UObject* WorldContextObject);
	static class UBethesdaNetEulaProcessCallProxy* StartEulaProcessForPlayer(class UObject* WorldContextObject, class APlayerController* PlayerController);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BethesdaNetEulaProcessCallProxy">();
	}
	static class UBethesdaNetEulaProcessCallProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBethesdaNetEulaProcessCallProxy>();
	}
};
static_assert(alignof(UBethesdaNetEulaProcessCallProxy) == 0x000008, "Wrong alignment on UBethesdaNetEulaProcessCallProxy");
static_assert(sizeof(UBethesdaNetEulaProcessCallProxy) == 0x000080, "Wrong size on UBethesdaNetEulaProcessCallProxy");
static_assert(offsetof(UBethesdaNetEulaProcessCallProxy, OnStepComplete) == 0x000030, "Member 'UBethesdaNetEulaProcessCallProxy::OnStepComplete' has a wrong offset!");

// Class OnlineSubsystemBethesdaNet.BethesdaNetFetchFirstPartyEmailCallProxy
// 0x0038 (0x0068 - 0x0030)
class UBethesdaNetFetchFirstPartyEmailCallProxy final : public UOnlineBlueprintCallProxyBase
{
public:
	TMulticastInlineDelegate<void(int32 LocalUserNum, bool bSuccess, const class FText& EmailAddress)> OnEmailFetchComplete; // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x28];                                      // 0x0040(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UBethesdaNetFetchFirstPartyEmailCallProxy* FetchFirstPartyEmail(class UObject* WorldContextObject, class APlayerController* PlayerController);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BethesdaNetFetchFirstPartyEmailCallProxy">();
	}
	static class UBethesdaNetFetchFirstPartyEmailCallProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBethesdaNetFetchFirstPartyEmailCallProxy>();
	}
};
static_assert(alignof(UBethesdaNetFetchFirstPartyEmailCallProxy) == 0x000008, "Wrong alignment on UBethesdaNetFetchFirstPartyEmailCallProxy");
static_assert(sizeof(UBethesdaNetFetchFirstPartyEmailCallProxy) == 0x000068, "Wrong size on UBethesdaNetFetchFirstPartyEmailCallProxy");
static_assert(offsetof(UBethesdaNetFetchFirstPartyEmailCallProxy, OnEmailFetchComplete) == 0x000030, "Member 'UBethesdaNetFetchFirstPartyEmailCallProxy::OnEmailFetchComplete' has a wrong offset!");

// Class OnlineSubsystemBethesdaNet.BethesdaNetLinkAccountCallProxy
// 0x0040 (0x0070 - 0x0030)
class UBethesdaNetLinkAccountCallProxy final : public UOnlineBlueprintCallProxyBase
{
public:
	TMulticastInlineDelegate<void(int32 LocalUserNum, EBNetLinkAccountResult Result, const class FText& Error)> OnLinkAccountComplete; // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x30];                                      // 0x0040(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UBethesdaNetLinkAccountCallProxy* LinkAccounts(class UObject* WorldContextObject, class APlayerController* PlayerController, class FName FirstPartySubsystemName);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BethesdaNetLinkAccountCallProxy">();
	}
	static class UBethesdaNetLinkAccountCallProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBethesdaNetLinkAccountCallProxy>();
	}
};
static_assert(alignof(UBethesdaNetLinkAccountCallProxy) == 0x000008, "Wrong alignment on UBethesdaNetLinkAccountCallProxy");
static_assert(sizeof(UBethesdaNetLinkAccountCallProxy) == 0x000070, "Wrong size on UBethesdaNetLinkAccountCallProxy");
static_assert(offsetof(UBethesdaNetLinkAccountCallProxy, OnLinkAccountComplete) == 0x000030, "Member 'UBethesdaNetLinkAccountCallProxy::OnLinkAccountComplete' has a wrong offset!");

// Class OnlineSubsystemBethesdaNet.BethesdaNetNewGameSessionCallProxy
// 0x0040 (0x0070 - 0x0030)
class UBethesdaNetNewGameSessionCallProxy final : public UOnlineBlueprintCallProxyBase
{
public:
	TMulticastInlineDelegate<void(int32 LocalUserNum, bool bWasSuccessful)> OnNewGameSessionComplete; // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x30];                                      // 0x0040(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UBethesdaNetNewGameSessionCallProxy* StartNewGameSession(class UObject* WorldContextObject, const class FString& PersistentUserId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BethesdaNetNewGameSessionCallProxy">();
	}
	static class UBethesdaNetNewGameSessionCallProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBethesdaNetNewGameSessionCallProxy>();
	}
};
static_assert(alignof(UBethesdaNetNewGameSessionCallProxy) == 0x000008, "Wrong alignment on UBethesdaNetNewGameSessionCallProxy");
static_assert(sizeof(UBethesdaNetNewGameSessionCallProxy) == 0x000070, "Wrong size on UBethesdaNetNewGameSessionCallProxy");
static_assert(offsetof(UBethesdaNetNewGameSessionCallProxy, OnNewGameSessionComplete) == 0x000030, "Member 'UBethesdaNetNewGameSessionCallProxy::OnNewGameSessionComplete' has a wrong offset!");

// Class OnlineSubsystemBethesdaNet.BethesdaNetQuickAccountCallProxy
// 0x0048 (0x0078 - 0x0030)
class UBethesdaNetQuickAccountCallProxy final : public UOnlineBlueprintCallProxyBase
{
public:
	TMulticastInlineDelegate<void(int32 LocalUserNum, EBNetQuickAccountResult Result, const class FText& Error)> OnQuickAccountComplete; // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x38];                                      // 0x0040(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UBethesdaNetQuickAccountCallProxy* QuickAccountCreate(class UObject* WorldContextObject, class APlayerController* PlayerController, const class FString& EmailAddress);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BethesdaNetQuickAccountCallProxy">();
	}
	static class UBethesdaNetQuickAccountCallProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBethesdaNetQuickAccountCallProxy>();
	}
};
static_assert(alignof(UBethesdaNetQuickAccountCallProxy) == 0x000008, "Wrong alignment on UBethesdaNetQuickAccountCallProxy");
static_assert(sizeof(UBethesdaNetQuickAccountCallProxy) == 0x000078, "Wrong size on UBethesdaNetQuickAccountCallProxy");
static_assert(offsetof(UBethesdaNetQuickAccountCallProxy, OnQuickAccountComplete) == 0x000030, "Member 'UBethesdaNetQuickAccountCallProxy::OnQuickAccountComplete' has a wrong offset!");

// Class OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow
// 0x0198 (0x0430 - 0x0298)
class ABethesdaNetUIQuickAccountFlow final : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(int32 LocalUserNum, EBNetUIQuickAccountFlow Result, const class FText& Error)> OnAccountFlowComplete; // 0x02A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TSubclassOf<class UBethesdaNetUIScreenAccountExists> AccountExistsUiClass;                       // 0x02B0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBethesdaNetUIScreenAgreements> AgreementsUiClass;                             // 0x02B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBethesdaNetUIScreenError>  ErrorUiClass;                                      // 0x02C0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBethesdaNetUIScreenHelp>   HelpUiClass;                                       // 0x02C8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBethesdaNetUIScreenLogin>  LoginUiClass;                                      // 0x02D0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBethesdaNetUIScreenManagement> ManagementUiClass;                             // 0x02D8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBethesdaNetUIScreenQuickAccount> QuickAccountUiClass;                         // 0x02E0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBethesdaNetUIScreenSpinner> SpinnerUiClass;                                   // 0x02E8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBethesdaNetUIScreenSuccess> SuccessUiClass;                                   // 0x02F0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBethesdaNetUIScreenAccountExists*      AccountExistsUi;                                   // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBethesdaNetUIScreenAgreements*         AgreementsUi;                                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBethesdaNetUIScreenError*              ErrorUi;                                           // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBethesdaNetUIScreenHelp*               HelpUi;                                            // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBethesdaNetUIScreenLogin*              LoginUi;                                           // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBethesdaNetUIScreenManagement*         ManagementUi;                                      // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBethesdaNetUIScreenQuickAccount*       QuickAccountUi;                                    // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBethesdaNetUIScreenSpinner*            SpinnerUi;                                         // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBethesdaNetUIScreenSuccess*            SuccessUi;                                         // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         LocalUserNum;                                      // 0x0340(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         ZOrder;                                            // 0x0344(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_348[0xE8];                                     // 0x0348(0x00E8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BeginAccountFlow(int32 InLocalUserNum, const struct FLatentActionInfo& InLatentInfo, EBNetUIQuickAccountFlow* OutResult, class FText* OutError, int32 InZOrder);
	void BeginAccountFlowLatentCallback(int32 InLocalUserNum, EBNetUIQuickAccountFlow InResult, const class FText& InError);
	void OnHelpScreenAccountHelpButtonClicked();
	void OnHelpScreenBackButtonClicked();
	void OnHelpScreenGeneralHelpButtonClicked();
	void OnLoginScreenLoginButtonClicked(const class FText& UserName, const class FText& Password);
	void OnLoginScreenOnAccountHelpButtonClicked();
	void OnLoginScreenOnCancelButtonClicked();
	void OnLoginScreenOnCreateAccountButtonClicked();
	void OnLoginScreenViewAgreementsButtonClicked();
	void OnManagementScreenAccountManageButtonClicked();
	void OnManagementScreenBackButtonClicked();
	void OnManagementScreenHelpButtonClicked();
	void OnManagementScreenViewAgreementsButtonClicked();
	void OnQuickAccountScreenCancelButtonClicked();
	void OnQuickAccountScreenCreateAccountButtonClicked(const class FText& InEmail);
	void OnQuickAccountScreenLoginButtonClicked();
	void OnQuickAccountScreenViewAgreementsButtonClicked();
	void OnScreenAgreementsCancelButtonClicked();
	void OnScreenAgreementsContinueButtonClicked();
	void OnScreenErrorBackButtonClicked();
	void OnScreenErrorCancelButtonClicked();
	void OnScreenExistsAccountHelpButtonClicked();
	void OnScreenExistsAgreementsButtonClicked();
	void OnScreenExistsCancelButtonClicked();
	void OnScreenExistsLoginButtonClicked(const class FText& UserName, const class FText& Password);
	void OnSuccessScreenOkButtonClicked();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BethesdaNetUIQuickAccountFlow">();
	}
	static class ABethesdaNetUIQuickAccountFlow* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABethesdaNetUIQuickAccountFlow>();
	}
};
static_assert(alignof(ABethesdaNetUIQuickAccountFlow) == 0x000008, "Wrong alignment on ABethesdaNetUIQuickAccountFlow");
static_assert(sizeof(ABethesdaNetUIQuickAccountFlow) == 0x000430, "Wrong size on ABethesdaNetUIQuickAccountFlow");
static_assert(offsetof(ABethesdaNetUIQuickAccountFlow, OnAccountFlowComplete) == 0x0002A0, "Member 'ABethesdaNetUIQuickAccountFlow::OnAccountFlowComplete' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIQuickAccountFlow, AccountExistsUiClass) == 0x0002B0, "Member 'ABethesdaNetUIQuickAccountFlow::AccountExistsUiClass' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIQuickAccountFlow, AgreementsUiClass) == 0x0002B8, "Member 'ABethesdaNetUIQuickAccountFlow::AgreementsUiClass' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIQuickAccountFlow, ErrorUiClass) == 0x0002C0, "Member 'ABethesdaNetUIQuickAccountFlow::ErrorUiClass' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIQuickAccountFlow, HelpUiClass) == 0x0002C8, "Member 'ABethesdaNetUIQuickAccountFlow::HelpUiClass' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIQuickAccountFlow, LoginUiClass) == 0x0002D0, "Member 'ABethesdaNetUIQuickAccountFlow::LoginUiClass' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIQuickAccountFlow, ManagementUiClass) == 0x0002D8, "Member 'ABethesdaNetUIQuickAccountFlow::ManagementUiClass' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIQuickAccountFlow, QuickAccountUiClass) == 0x0002E0, "Member 'ABethesdaNetUIQuickAccountFlow::QuickAccountUiClass' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIQuickAccountFlow, SpinnerUiClass) == 0x0002E8, "Member 'ABethesdaNetUIQuickAccountFlow::SpinnerUiClass' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIQuickAccountFlow, SuccessUiClass) == 0x0002F0, "Member 'ABethesdaNetUIQuickAccountFlow::SuccessUiClass' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIQuickAccountFlow, AccountExistsUi) == 0x0002F8, "Member 'ABethesdaNetUIQuickAccountFlow::AccountExistsUi' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIQuickAccountFlow, AgreementsUi) == 0x000300, "Member 'ABethesdaNetUIQuickAccountFlow::AgreementsUi' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIQuickAccountFlow, ErrorUi) == 0x000308, "Member 'ABethesdaNetUIQuickAccountFlow::ErrorUi' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIQuickAccountFlow, HelpUi) == 0x000310, "Member 'ABethesdaNetUIQuickAccountFlow::HelpUi' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIQuickAccountFlow, LoginUi) == 0x000318, "Member 'ABethesdaNetUIQuickAccountFlow::LoginUi' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIQuickAccountFlow, ManagementUi) == 0x000320, "Member 'ABethesdaNetUIQuickAccountFlow::ManagementUi' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIQuickAccountFlow, QuickAccountUi) == 0x000328, "Member 'ABethesdaNetUIQuickAccountFlow::QuickAccountUi' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIQuickAccountFlow, SpinnerUi) == 0x000330, "Member 'ABethesdaNetUIQuickAccountFlow::SpinnerUi' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIQuickAccountFlow, SuccessUi) == 0x000338, "Member 'ABethesdaNetUIQuickAccountFlow::SuccessUi' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIQuickAccountFlow, LocalUserNum) == 0x000340, "Member 'ABethesdaNetUIQuickAccountFlow::LocalUserNum' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIQuickAccountFlow, ZOrder) == 0x000344, "Member 'ABethesdaNetUIQuickAccountFlow::ZOrder' has a wrong offset!");

// Class OnlineSubsystemBethesdaNet.BethesdaNetUIScreenBase
// 0x0058 (0x0318 - 0x02C0)
class UBethesdaNetUIScreenBase : public UUserWidget
{
public:
	class USlateWidgetStyleAsset*                 ScreenStyleAsset;                                  // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWidget>                 InitialFocusWidget;                                // 0x02C8(0x0028)(BlueprintVisible, ExportObject, InstancedReference, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F0[0x28];                                     // 0x02F0(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleExclusiveRightStickInput(float Value);
	void OnScreenAdded();
	struct FEventReply OnScreenCancel(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	struct FEventReply OnScreenConfirm(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void OnScreenGainFocus();
	void OnScreenLoseFocus();
	void OnScreenRemoved();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BethesdaNetUIScreenBase">();
	}
	static class UBethesdaNetUIScreenBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBethesdaNetUIScreenBase>();
	}
};
static_assert(alignof(UBethesdaNetUIScreenBase) == 0x000008, "Wrong alignment on UBethesdaNetUIScreenBase");
static_assert(sizeof(UBethesdaNetUIScreenBase) == 0x000318, "Wrong size on UBethesdaNetUIScreenBase");
static_assert(offsetof(UBethesdaNetUIScreenBase, ScreenStyleAsset) == 0x0002C0, "Member 'UBethesdaNetUIScreenBase::ScreenStyleAsset' has a wrong offset!");
static_assert(offsetof(UBethesdaNetUIScreenBase, InitialFocusWidget) == 0x0002C8, "Member 'UBethesdaNetUIScreenBase::InitialFocusWidget' has a wrong offset!");

// Class OnlineSubsystemBethesdaNet.BethesdaNetUIScreenAccountExists
// 0x0040 (0x0358 - 0x0318)
class UBethesdaNetUIScreenAccountExists final : public UBethesdaNetUIScreenBase
{
public:
	TMulticastInlineDelegate<void()>              OnViewAgreementsButtonClicked;                     // 0x0318(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FText& UserName, const class FText& Password)> OnLoginButtonClicked; // 0x0328(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnCancelButtonClicked;                             // 0x0338(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnAccountHelpButtonClicked;                        // 0x0348(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void AccountHelpButtonClicked();
	void CancelButtonClicked();
	void LoginButtonClicked(const class FText& UserName, const class FText& Password);
	void SetError(const class FText& InErrorMessage);
	void ViewAgreementsButtonClicked();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BethesdaNetUIScreenAccountExists">();
	}
	static class UBethesdaNetUIScreenAccountExists* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBethesdaNetUIScreenAccountExists>();
	}
};
static_assert(alignof(UBethesdaNetUIScreenAccountExists) == 0x000008, "Wrong alignment on UBethesdaNetUIScreenAccountExists");
static_assert(sizeof(UBethesdaNetUIScreenAccountExists) == 0x000358, "Wrong size on UBethesdaNetUIScreenAccountExists");
static_assert(offsetof(UBethesdaNetUIScreenAccountExists, OnViewAgreementsButtonClicked) == 0x000318, "Member 'UBethesdaNetUIScreenAccountExists::OnViewAgreementsButtonClicked' has a wrong offset!");
static_assert(offsetof(UBethesdaNetUIScreenAccountExists, OnLoginButtonClicked) == 0x000328, "Member 'UBethesdaNetUIScreenAccountExists::OnLoginButtonClicked' has a wrong offset!");
static_assert(offsetof(UBethesdaNetUIScreenAccountExists, OnCancelButtonClicked) == 0x000338, "Member 'UBethesdaNetUIScreenAccountExists::OnCancelButtonClicked' has a wrong offset!");
static_assert(offsetof(UBethesdaNetUIScreenAccountExists, OnAccountHelpButtonClicked) == 0x000348, "Member 'UBethesdaNetUIScreenAccountExists::OnAccountHelpButtonClicked' has a wrong offset!");

// Class OnlineSubsystemBethesdaNet.BethesdaNetUIScreenAgreements
// 0x0020 (0x0338 - 0x0318)
class UBethesdaNetUIScreenAgreements final : public UBethesdaNetUIScreenBase
{
public:
	TMulticastInlineDelegate<void()>              OnContinueButtonClicked;                           // 0x0318(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnCancelButtonClicked;                             // 0x0328(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void CancelButtonClicked();
	void ContinueButtonClicked();
	void HideSpinner();
	void SetInUpdatedMode(bool bInUpdatedMode);
	void SetLegalText(const class FText& InLegalText, bool bInPrivacyPolicy);
	void ShowSpinner();

	bool IsInUpdatedMode() const;
	bool IsSpinning() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BethesdaNetUIScreenAgreements">();
	}
	static class UBethesdaNetUIScreenAgreements* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBethesdaNetUIScreenAgreements>();
	}
};
static_assert(alignof(UBethesdaNetUIScreenAgreements) == 0x000008, "Wrong alignment on UBethesdaNetUIScreenAgreements");
static_assert(sizeof(UBethesdaNetUIScreenAgreements) == 0x000338, "Wrong size on UBethesdaNetUIScreenAgreements");
static_assert(offsetof(UBethesdaNetUIScreenAgreements, OnContinueButtonClicked) == 0x000318, "Member 'UBethesdaNetUIScreenAgreements::OnContinueButtonClicked' has a wrong offset!");
static_assert(offsetof(UBethesdaNetUIScreenAgreements, OnCancelButtonClicked) == 0x000328, "Member 'UBethesdaNetUIScreenAgreements::OnCancelButtonClicked' has a wrong offset!");

// Class OnlineSubsystemBethesdaNet.BethesdaNetUIScreenError
// 0x0020 (0x0338 - 0x0318)
class UBethesdaNetUIScreenError final : public UBethesdaNetUIScreenBase
{
public:
	TMulticastInlineDelegate<void()>              OnBackButtonClicked;                               // 0x0318(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnCancelButtonClicked;                             // 0x0328(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void BackButtonClicked();
	void CancelButtonClicked();
	void SetConnectionError(const class FText& InTitleText, const class FText& InMessageText);
	void SetError(const class FText& InTitleText, const class FText& InMessageText, const class FString& InErrorValue);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BethesdaNetUIScreenError">();
	}
	static class UBethesdaNetUIScreenError* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBethesdaNetUIScreenError>();
	}
};
static_assert(alignof(UBethesdaNetUIScreenError) == 0x000008, "Wrong alignment on UBethesdaNetUIScreenError");
static_assert(sizeof(UBethesdaNetUIScreenError) == 0x000338, "Wrong size on UBethesdaNetUIScreenError");
static_assert(offsetof(UBethesdaNetUIScreenError, OnBackButtonClicked) == 0x000318, "Member 'UBethesdaNetUIScreenError::OnBackButtonClicked' has a wrong offset!");
static_assert(offsetof(UBethesdaNetUIScreenError, OnCancelButtonClicked) == 0x000328, "Member 'UBethesdaNetUIScreenError::OnCancelButtonClicked' has a wrong offset!");

// Class OnlineSubsystemBethesdaNet.BethesdaNetUIScreenHelp
// 0x0030 (0x0348 - 0x0318)
class UBethesdaNetUIScreenHelp final : public UBethesdaNetUIScreenBase
{
public:
	TMulticastInlineDelegate<void()>              OnAccountHelpButtonClicked;                        // 0x0318(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnGeneralHelpButtonClicked;                        // 0x0328(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnBackButtonClicked;                               // 0x0338(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void AccountHelpButtonClicked();
	void BackButtonClicked();
	void GeneralHelpButtonClicked();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BethesdaNetUIScreenHelp">();
	}
	static class UBethesdaNetUIScreenHelp* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBethesdaNetUIScreenHelp>();
	}
};
static_assert(alignof(UBethesdaNetUIScreenHelp) == 0x000008, "Wrong alignment on UBethesdaNetUIScreenHelp");
static_assert(sizeof(UBethesdaNetUIScreenHelp) == 0x000348, "Wrong size on UBethesdaNetUIScreenHelp");
static_assert(offsetof(UBethesdaNetUIScreenHelp, OnAccountHelpButtonClicked) == 0x000318, "Member 'UBethesdaNetUIScreenHelp::OnAccountHelpButtonClicked' has a wrong offset!");
static_assert(offsetof(UBethesdaNetUIScreenHelp, OnGeneralHelpButtonClicked) == 0x000328, "Member 'UBethesdaNetUIScreenHelp::OnGeneralHelpButtonClicked' has a wrong offset!");
static_assert(offsetof(UBethesdaNetUIScreenHelp, OnBackButtonClicked) == 0x000338, "Member 'UBethesdaNetUIScreenHelp::OnBackButtonClicked' has a wrong offset!");

// Class OnlineSubsystemBethesdaNet.BethesdaNetUIScreenLogin
// 0x0050 (0x0368 - 0x0318)
class UBethesdaNetUIScreenLogin final : public UBethesdaNetUIScreenBase
{
public:
	TMulticastInlineDelegate<void()>              OnViewAgreementsButtonClicked;                     // 0x0318(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FText& UserName, const class FText& Password)> OnLoginButtonClicked; // 0x0328(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnCancelButtonClicked;                             // 0x0338(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnAccountHelpButtonClicked;                        // 0x0348(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnCreateAccountButtonClicked;                      // 0x0358(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void AccountHelpButtonClicked();
	void CancelButtonClicked();
	void CreateAccountButtonClicked();
	void LoginButtonClicked(const class FText& UserName, const class FText& Password);
	void SetError(const class FText& InError);
	void ViewAgreementsButtonClicked();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BethesdaNetUIScreenLogin">();
	}
	static class UBethesdaNetUIScreenLogin* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBethesdaNetUIScreenLogin>();
	}
};
static_assert(alignof(UBethesdaNetUIScreenLogin) == 0x000008, "Wrong alignment on UBethesdaNetUIScreenLogin");
static_assert(sizeof(UBethesdaNetUIScreenLogin) == 0x000368, "Wrong size on UBethesdaNetUIScreenLogin");
static_assert(offsetof(UBethesdaNetUIScreenLogin, OnViewAgreementsButtonClicked) == 0x000318, "Member 'UBethesdaNetUIScreenLogin::OnViewAgreementsButtonClicked' has a wrong offset!");
static_assert(offsetof(UBethesdaNetUIScreenLogin, OnLoginButtonClicked) == 0x000328, "Member 'UBethesdaNetUIScreenLogin::OnLoginButtonClicked' has a wrong offset!");
static_assert(offsetof(UBethesdaNetUIScreenLogin, OnCancelButtonClicked) == 0x000338, "Member 'UBethesdaNetUIScreenLogin::OnCancelButtonClicked' has a wrong offset!");
static_assert(offsetof(UBethesdaNetUIScreenLogin, OnAccountHelpButtonClicked) == 0x000348, "Member 'UBethesdaNetUIScreenLogin::OnAccountHelpButtonClicked' has a wrong offset!");
static_assert(offsetof(UBethesdaNetUIScreenLogin, OnCreateAccountButtonClicked) == 0x000358, "Member 'UBethesdaNetUIScreenLogin::OnCreateAccountButtonClicked' has a wrong offset!");

// Class OnlineSubsystemBethesdaNet.BethesdaNetUIScreenManagement
// 0x0040 (0x0358 - 0x0318)
class UBethesdaNetUIScreenManagement final : public UBethesdaNetUIScreenBase
{
public:
	TMulticastInlineDelegate<void()>              OnAccountManageButtonClicked;                      // 0x0318(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnHelpButtonClicked;                               // 0x0328(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnViewAgreementsButtonClicked;                     // 0x0338(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnBackButtonClicked;                               // 0x0348(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void AccountManageButtonClicked();
	void BackButtonClicked();
	void HelpButtonClicked();
	void SetUserEmailAddress(const class FText& InEmailAddress);
	void ViewAgreementsButtonClicked();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BethesdaNetUIScreenManagement">();
	}
	static class UBethesdaNetUIScreenManagement* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBethesdaNetUIScreenManagement>();
	}
};
static_assert(alignof(UBethesdaNetUIScreenManagement) == 0x000008, "Wrong alignment on UBethesdaNetUIScreenManagement");
static_assert(sizeof(UBethesdaNetUIScreenManagement) == 0x000358, "Wrong size on UBethesdaNetUIScreenManagement");
static_assert(offsetof(UBethesdaNetUIScreenManagement, OnAccountManageButtonClicked) == 0x000318, "Member 'UBethesdaNetUIScreenManagement::OnAccountManageButtonClicked' has a wrong offset!");
static_assert(offsetof(UBethesdaNetUIScreenManagement, OnHelpButtonClicked) == 0x000328, "Member 'UBethesdaNetUIScreenManagement::OnHelpButtonClicked' has a wrong offset!");
static_assert(offsetof(UBethesdaNetUIScreenManagement, OnViewAgreementsButtonClicked) == 0x000338, "Member 'UBethesdaNetUIScreenManagement::OnViewAgreementsButtonClicked' has a wrong offset!");
static_assert(offsetof(UBethesdaNetUIScreenManagement, OnBackButtonClicked) == 0x000348, "Member 'UBethesdaNetUIScreenManagement::OnBackButtonClicked' has a wrong offset!");

// Class OnlineSubsystemBethesdaNet.BethesdaNetUIScreenQuickAccount
// 0x0040 (0x0358 - 0x0318)
class UBethesdaNetUIScreenQuickAccount final : public UBethesdaNetUIScreenBase
{
public:
	TMulticastInlineDelegate<void()>              OnViewAgreementsButtonClicked;                     // 0x0318(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FText& Email)> OnCreateAccountButtonClicked;           // 0x0328(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnCancelButtonClicked;                             // 0x0338(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnLoginButtonClicked;                              // 0x0348(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void CancelButtonClicked();
	void CreateAccountButtonClicked(const class FText& InEmail);
	void LoginButtonClicked();
	void SetFirstPartyEmail(const class FString& InEmail);
	void ShowInvalidEmail();
	void ViewAgreementsButtonClicked();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BethesdaNetUIScreenQuickAccount">();
	}
	static class UBethesdaNetUIScreenQuickAccount* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBethesdaNetUIScreenQuickAccount>();
	}
};
static_assert(alignof(UBethesdaNetUIScreenQuickAccount) == 0x000008, "Wrong alignment on UBethesdaNetUIScreenQuickAccount");
static_assert(sizeof(UBethesdaNetUIScreenQuickAccount) == 0x000358, "Wrong size on UBethesdaNetUIScreenQuickAccount");
static_assert(offsetof(UBethesdaNetUIScreenQuickAccount, OnViewAgreementsButtonClicked) == 0x000318, "Member 'UBethesdaNetUIScreenQuickAccount::OnViewAgreementsButtonClicked' has a wrong offset!");
static_assert(offsetof(UBethesdaNetUIScreenQuickAccount, OnCreateAccountButtonClicked) == 0x000328, "Member 'UBethesdaNetUIScreenQuickAccount::OnCreateAccountButtonClicked' has a wrong offset!");
static_assert(offsetof(UBethesdaNetUIScreenQuickAccount, OnCancelButtonClicked) == 0x000338, "Member 'UBethesdaNetUIScreenQuickAccount::OnCancelButtonClicked' has a wrong offset!");
static_assert(offsetof(UBethesdaNetUIScreenQuickAccount, OnLoginButtonClicked) == 0x000348, "Member 'UBethesdaNetUIScreenQuickAccount::OnLoginButtonClicked' has a wrong offset!");

// Class OnlineSubsystemBethesdaNet.BethesdaNetUIScreenSpinner
// 0x0000 (0x0318 - 0x0318)
class UBethesdaNetUIScreenSpinner final : public UBethesdaNetUIScreenBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BethesdaNetUIScreenSpinner">();
	}
	static class UBethesdaNetUIScreenSpinner* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBethesdaNetUIScreenSpinner>();
	}
};
static_assert(alignof(UBethesdaNetUIScreenSpinner) == 0x000008, "Wrong alignment on UBethesdaNetUIScreenSpinner");
static_assert(sizeof(UBethesdaNetUIScreenSpinner) == 0x000318, "Wrong size on UBethesdaNetUIScreenSpinner");

// Class OnlineSubsystemBethesdaNet.BethesdaNetUIScreenSuccess
// 0x0010 (0x0328 - 0x0318)
class UBethesdaNetUIScreenSuccess final : public UBethesdaNetUIScreenBase
{
public:
	TMulticastInlineDelegate<void()>              OnOkButtonClicked;                                 // 0x0318(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OkButtonClicked();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BethesdaNetUIScreenSuccess">();
	}
	static class UBethesdaNetUIScreenSuccess* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBethesdaNetUIScreenSuccess>();
	}
};
static_assert(alignof(UBethesdaNetUIScreenSuccess) == 0x000008, "Wrong alignment on UBethesdaNetUIScreenSuccess");
static_assert(sizeof(UBethesdaNetUIScreenSuccess) == 0x000328, "Wrong size on UBethesdaNetUIScreenSuccess");
static_assert(offsetof(UBethesdaNetUIScreenSuccess, OnOkButtonClicked) == 0x000318, "Member 'UBethesdaNetUIScreenSuccess::OnOkButtonClicked' has a wrong offset!");

// Class OnlineSubsystemBethesdaNet.BethesdaNetUIUserManagementFlow
// 0x00C0 (0x0358 - 0x0298)
class ABethesdaNetUIUserManagementFlow final : public AActor
{
public:
	TMulticastInlineDelegate<void(int32 LocalUserNum, EBNetUIManagementFlow Result, const class FText& Error)> OnManagementFlowComplete; // 0x0298(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TSubclassOf<class UBethesdaNetUIScreenAgreements> AgreementsUiClass;                             // 0x02A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBethesdaNetUIScreenManagement> ManagementUiClass;                             // 0x02B0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBethesdaNetUIScreenError>  ErrorUiClass;                                      // 0x02B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBethesdaNetUIScreenSpinner> SpinnerUiClass;                                   // 0x02C0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBethesdaNetUIScreenAgreements*         AgreementsUi;                                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBethesdaNetUIScreenManagement*         ManagementUi;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBethesdaNetUIScreenError*              ErrorUi;                                           // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBethesdaNetUIScreenSpinner*            SpinnerUi;                                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         LocalUserNum;                                      // 0x02E8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         ZOrder;                                            // 0x02EC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F0[0x68];                                     // 0x02F0(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BeginManagementFlow(int32 InLocalUserNum, const struct FLatentActionInfo& InLatentInfo, EBNetUIManagementFlow* OutResult, class FText* OutError, int32 InZOrder);
	void BeginManagementFlowLatentCallback(int32 InLocalUserNum, EBNetUIManagementFlow InResult, const class FText& InError);
	void OnManagementScreenAccountManageButtonClicked();
	void OnManagementScreenBackButtonClicked();
	void OnManagementScreenHelpButtonClicked();
	void OnManagementScreenViewAgreementsButtonClicked();
	void OnScreenAgreementsCancelButtonClicked();
	void OnScreenAgreementsContinueButtonClicked();
	void OnScreenErrorBackButtonClicked();
	void OnScreenErrorCancelButtonClicked();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BethesdaNetUIUserManagementFlow">();
	}
	static class ABethesdaNetUIUserManagementFlow* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABethesdaNetUIUserManagementFlow>();
	}
};
static_assert(alignof(ABethesdaNetUIUserManagementFlow) == 0x000008, "Wrong alignment on ABethesdaNetUIUserManagementFlow");
static_assert(sizeof(ABethesdaNetUIUserManagementFlow) == 0x000358, "Wrong size on ABethesdaNetUIUserManagementFlow");
static_assert(offsetof(ABethesdaNetUIUserManagementFlow, OnManagementFlowComplete) == 0x000298, "Member 'ABethesdaNetUIUserManagementFlow::OnManagementFlowComplete' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIUserManagementFlow, AgreementsUiClass) == 0x0002A8, "Member 'ABethesdaNetUIUserManagementFlow::AgreementsUiClass' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIUserManagementFlow, ManagementUiClass) == 0x0002B0, "Member 'ABethesdaNetUIUserManagementFlow::ManagementUiClass' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIUserManagementFlow, ErrorUiClass) == 0x0002B8, "Member 'ABethesdaNetUIUserManagementFlow::ErrorUiClass' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIUserManagementFlow, SpinnerUiClass) == 0x0002C0, "Member 'ABethesdaNetUIUserManagementFlow::SpinnerUiClass' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIUserManagementFlow, AgreementsUi) == 0x0002C8, "Member 'ABethesdaNetUIUserManagementFlow::AgreementsUi' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIUserManagementFlow, ManagementUi) == 0x0002D0, "Member 'ABethesdaNetUIUserManagementFlow::ManagementUi' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIUserManagementFlow, ErrorUi) == 0x0002D8, "Member 'ABethesdaNetUIUserManagementFlow::ErrorUi' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIUserManagementFlow, SpinnerUi) == 0x0002E0, "Member 'ABethesdaNetUIUserManagementFlow::SpinnerUi' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIUserManagementFlow, LocalUserNum) == 0x0002E8, "Member 'ABethesdaNetUIUserManagementFlow::LocalUserNum' has a wrong offset!");
static_assert(offsetof(ABethesdaNetUIUserManagementFlow, ZOrder) == 0x0002EC, "Member 'ABethesdaNetUIUserManagementFlow::ZOrder' has a wrong offset!");

// Class OnlineSubsystemBethesdaNet.OnlineSubsystemBethesdaNetBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UOnlineSubsystemBethesdaNetBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static class FString GetAccountBUID(int32 LocalUserNum);
	static class FString GetLastErrorAsString();
	static EBNetLoginResult GetLastLoginResult();
	static EBNetLoggingPlatform GetLoggingPlatform();
	static class FString GetPersistentUserId(int32 LocalUserNum);
	static EBNetPlatform GetPlatform();
	static class FString GetUserEmailAddress(int32 LocalUserNum);
	static bool IsLastErrorAConnectionIssue();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OnlineSubsystemBethesdaNetBlueprintLibrary">();
	}
	static class UOnlineSubsystemBethesdaNetBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOnlineSubsystemBethesdaNetBlueprintLibrary>();
	}
};
static_assert(alignof(UOnlineSubsystemBethesdaNetBlueprintLibrary) == 0x000008, "Wrong alignment on UOnlineSubsystemBethesdaNetBlueprintLibrary");
static_assert(sizeof(UOnlineSubsystemBethesdaNetBlueprintLibrary) == 0x000028, "Wrong size on UOnlineSubsystemBethesdaNetBlueprintLibrary");

// Class OnlineSubsystemBethesdaNet.VBethesdaNetIntegrationSubsystem
// 0x0028 (0x0058 - 0x0030)
class UVBethesdaNetIntegrationSubsystem final : public UGameInstanceSubsystem
{
public:
	bool                                          bBdkEnabledInEditor;                               // 0x0030(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bBdkEnabledInBuild;                                // 0x0031(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_32[0x26];                                      // 0x0032(0x0026)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnStartupComplete();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VBethesdaNetIntegrationSubsystem">();
	}
	static class UVBethesdaNetIntegrationSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVBethesdaNetIntegrationSubsystem>();
	}
};
static_assert(alignof(UVBethesdaNetIntegrationSubsystem) == 0x000008, "Wrong alignment on UVBethesdaNetIntegrationSubsystem");
static_assert(sizeof(UVBethesdaNetIntegrationSubsystem) == 0x000058, "Wrong size on UVBethesdaNetIntegrationSubsystem");
static_assert(offsetof(UVBethesdaNetIntegrationSubsystem, bBdkEnabledInEditor) == 0x000030, "Member 'UVBethesdaNetIntegrationSubsystem::bBdkEnabledInEditor' has a wrong offset!");
static_assert(offsetof(UVBethesdaNetIntegrationSubsystem, bBdkEnabledInBuild) == 0x000031, "Member 'UVBethesdaNetIntegrationSubsystem::bBdkEnabledInBuild' has a wrong offset!");

}

