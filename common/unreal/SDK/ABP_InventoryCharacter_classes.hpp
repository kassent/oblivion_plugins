#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_InventoryCharacter

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "ABP_InventoryCharacter_structs.hpp"
#include "Engine_structs.hpp"
#include "Altar_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_InventoryCharacter.ABP_InventoryCharacter_C
// 0x0960 (0x0CC0 - 0x0360)
class UABP_InventoryCharacter_C final : public UVInventoryCharacterAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_InventoryCharacter::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;       // 0x0368(0x0038)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x03A0(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x03A8(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x03B0(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x03D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x03F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0420(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0448(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0470(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0498(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x04C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x04E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0510(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0538(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0560(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x05A8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x05C8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0610(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0630(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0678(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0698(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x06E0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0700(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0748(0x0020)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0768(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0788(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x0850(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x08D0(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x08F8(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x0940(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x09C0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0A08(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0A30(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0AB0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0AD8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0B20(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0B68(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0C58(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0C80(0x0028)()
	class UAnimSequenceBase*                      TorchIdleSequence;                                 // 0x0CA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      ShieldIdleSequence;                                // 0x0CB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         Torch_Pose_Blend_Time;                             // 0x0CB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shield_Hand_Pose_Blend_Time;                       // 0x0CBC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_InventoryCharacter_AnimGraphNode_TransitionResult_06AD518F489444D0C7813A90AA5AF710();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_InventoryCharacter_AnimGraphNode_TransitionResult_12182E8940A02CA0EA24868F2A4B0BA2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_InventoryCharacter_AnimGraphNode_TransitionResult_40B0E169455227D689D76194657335D9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_InventoryCharacter_AnimGraphNode_TransitionResult_69196AB44366C520DDC370B49422CDF2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_InventoryCharacter_AnimGraphNode_TransitionResult_6919C98941733CE4E41B4DB797CA4038();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_InventoryCharacter_AnimGraphNode_TransitionResult_6D0B82DA4D7BAA8707D47781C4391A45();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_InventoryCharacter_AnimGraphNode_TransitionResult_77EACB7545B19FBEF6D706B9DB4F5813();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_InventoryCharacter_AnimGraphNode_TransitionResult_808393D34CA620B3840D3DB43F6635ED();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_InventoryCharacter_AnimGraphNode_TransitionResult_9849EBAE4C9C0E35FCD221A63D36DD4F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_InventoryCharacter_AnimGraphNode_TransitionResult_B6C4CA364AD4B804029A488B95C05CB4();
	void ExecuteUbergraph_ABP_InventoryCharacter(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_InventoryCharacter_C">();
	}
	static class UABP_InventoryCharacter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_InventoryCharacter_C>();
	}
};
static_assert(alignof(UABP_InventoryCharacter_C) == 0x000010, "Wrong alignment on UABP_InventoryCharacter_C");
static_assert(sizeof(UABP_InventoryCharacter_C) == 0x000CC0, "Wrong size on UABP_InventoryCharacter_C");
static_assert(offsetof(UABP_InventoryCharacter_C, UberGraphFrame) == 0x000360, "Member 'UABP_InventoryCharacter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, __AnimBlueprintMutables) == 0x000368, "Member 'UABP_InventoryCharacter_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimBlueprintExtension_PropertyAccess) == 0x0003A0, "Member 'UABP_InventoryCharacter_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimBlueprintExtension_Base) == 0x0003A8, "Member 'UABP_InventoryCharacter_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_Root) == 0x0003B0, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_TransitionResult_9) == 0x0003D0, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_TransitionResult_8) == 0x0003F8, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_TransitionResult_7) == 0x000420, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_TransitionResult_6) == 0x000448, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_TransitionResult_5) == 0x000470, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_TransitionResult_4) == 0x000498, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_TransitionResult_3) == 0x0004C0, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_TransitionResult_2) == 0x0004E8, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_TransitionResult_1) == 0x000510, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_TransitionResult) == 0x000538, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_SequencePlayer_6) == 0x000560, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_StateResult_5) == 0x0005A8, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_SequencePlayer_5) == 0x0005C8, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_StateResult_4) == 0x000610, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_SequencePlayer_4) == 0x000630, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_StateResult_3) == 0x000678, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_SequencePlayer_3) == 0x000698, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_StateResult_2) == 0x0006E0, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_SequencePlayer_2) == 0x000700, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_StateResult_1) == 0x000748, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_StateResult) == 0x000768, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_StateMachine) == 0x000788, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_SaveCachedPose_2) == 0x000850, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_UseCachedPose_4) == 0x0008D0, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_BlendListByBool_1) == 0x0008F8, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_SaveCachedPose_1) == 0x000940, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_BlendListByBool) == 0x0009C0, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_UseCachedPose_3) == 0x000A08, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_SaveCachedPose) == 0x000A30, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_UseCachedPose_2) == 0x000AB0, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_SequencePlayer_1) == 0x000AD8, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_SequencePlayer) == 0x000B20, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_LayeredBoneBlend) == 0x000B68, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_UseCachedPose_1) == 0x000C58, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, AnimGraphNode_UseCachedPose) == 0x000C80, "Member 'UABP_InventoryCharacter_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, TorchIdleSequence) == 0x000CA8, "Member 'UABP_InventoryCharacter_C::TorchIdleSequence' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, ShieldIdleSequence) == 0x000CB0, "Member 'UABP_InventoryCharacter_C::ShieldIdleSequence' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, Torch_Pose_Blend_Time) == 0x000CB8, "Member 'UABP_InventoryCharacter_C::Torch_Pose_Blend_Time' has a wrong offset!");
static_assert(offsetof(UABP_InventoryCharacter_C, Shield_Hand_Pose_Blend_Time) == 0x000CBC, "Member 'UABP_InventoryCharacter_C::Shield_Hand_Pose_Blend_Time' has a wrong offset!");

}

