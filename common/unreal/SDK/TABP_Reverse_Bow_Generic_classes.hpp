#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TABP_Reverse_Bow_Generic

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "TABP_Reverse_Bow_Generic_structs.hpp"
#include "Struct_Creatures_Bow_Attacks_structs.hpp"
#include "EN_CreatureSpecies_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass TABP_Reverse_Bow_Generic.TABP_Reverse_Bow_Generic_C
// 0x0710 (0x0A60 - 0x0350)
class UTABP_Reverse_Bow_Generic_C : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct TABP_Reverse_Bow_Generic::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;     // 0x0358(0x0005)(HasGetValueTypeHash)
	uint8                                         Pad_35D[0x3];                                      // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0360(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0368(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0370(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0390(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x03B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x03E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0408(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0430(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0458(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0480(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x04A8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x04F0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0538(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0580(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x05A0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x05E8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0630(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0678(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0698(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x06E0(0x0020)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x0700(0x0010)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0710(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0758(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x07A0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x07E8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0830(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0850(0x00C8)()
	struct FGameplayTagContainer                  K2Node_PropertyAccess_17;                          // 0x0918(0x0020)()
	struct FGameplayTagContainer                  K2Node_PropertyAccess_16;                          // 0x0938(0x0020)()
	struct FGameplayTagContainer                  K2Node_PropertyAccess_15;                          // 0x0958(0x0020)()
	struct FGameplayTagContainer                  K2Node_PropertyAccess_14;                          // 0x0978(0x0020)()
	bool                                          AttackStart;                                       // 0x0998(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AttackEnd;                                         // 0x0999(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AttackCancel;                                      // 0x099A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99B[0x5];                                      // 0x099B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_Creatures_Bow_Attacks          HumanoidAnims;                                     // 0x09A0(0x0020)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FStruct_Creatures_Bow_Attacks          HumanoidSneakingAnims;                             // 0x09C0(0x0020)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AVPairedPawn*                           PairedPawn;                                        // 0x09E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AVPairedCreature*                       PairedCreature;                                    // 0x09E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EN_CreatureSpecies                            Species;                                           // 0x09F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSneaking;                                        // 0x09F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F2[0x6];                                      // 0x09F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_Creatures_Bow_Attacks          CurrentAnimStruct;                                 // 0x09F8(0x0020)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FStruct_Creatures_Bow_Attacks          CurrentSneakingAnimStruct;                         // 0x0A18(0x0020)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          HasIdleAnim;                                       // 0x0A38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A39[0x7];                                      // 0x0A39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_Creatures_Bow_Attacks          CreatureAnimStruct;                                // 0x0A40(0x0020)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AssignAnimationStructs();
	void BlueprintBeginPlay();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_TABP_Reverse_Bow_Generic(int32 EntryPoint);
	void GetCharacter();
	void UpdateAnimations();
	void UpdateStates();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TABP_Reverse_Bow_Generic_C">();
	}
	static class UTABP_Reverse_Bow_Generic_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTABP_Reverse_Bow_Generic_C>();
	}
};
static_assert(alignof(UTABP_Reverse_Bow_Generic_C) == 0x000010, "Wrong alignment on UTABP_Reverse_Bow_Generic_C");
static_assert(sizeof(UTABP_Reverse_Bow_Generic_C) == 0x000A60, "Wrong size on UTABP_Reverse_Bow_Generic_C");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, UberGraphFrame) == 0x000350, "Member 'UTABP_Reverse_Bow_Generic_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, __AnimBlueprintMutables) == 0x000358, "Member 'UTABP_Reverse_Bow_Generic_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimBlueprintExtension_PropertyAccess) == 0x000360, "Member 'UTABP_Reverse_Bow_Generic_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimBlueprintExtension_Base) == 0x000368, "Member 'UTABP_Reverse_Bow_Generic_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_Root) == 0x000370, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_TransitionResult_6) == 0x000390, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_TransitionResult_5) == 0x0003B8, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_TransitionResult_4) == 0x0003E0, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_TransitionResult_3) == 0x000408, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_TransitionResult_2) == 0x000430, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_TransitionResult_1) == 0x000458, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_TransitionResult) == 0x000480, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_SequencePlayer_6) == 0x0004A8, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_BlendListByBool_3) == 0x0004F0, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_SequencePlayer_5) == 0x000538, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_StateResult_3) == 0x000580, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_SequencePlayer_4) == 0x0005A0, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_BlendListByBool_2) == 0x0005E8, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_SequencePlayer_3) == 0x000630, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_StateResult_2) == 0x000678, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_SequencePlayer_2) == 0x000698, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_StateResult_1) == 0x0006E0, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_LocalRefPose) == 0x000700, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_BlendListByBool_1) == 0x000710, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_SequencePlayer_1) == 0x000758, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_BlendListByBool) == 0x0007A0, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_SequencePlayer) == 0x0007E8, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_StateResult) == 0x000830, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AnimGraphNode_StateMachine) == 0x000850, "Member 'UTABP_Reverse_Bow_Generic_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, K2Node_PropertyAccess_17) == 0x000918, "Member 'UTABP_Reverse_Bow_Generic_C::K2Node_PropertyAccess_17' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, K2Node_PropertyAccess_16) == 0x000938, "Member 'UTABP_Reverse_Bow_Generic_C::K2Node_PropertyAccess_16' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, K2Node_PropertyAccess_15) == 0x000958, "Member 'UTABP_Reverse_Bow_Generic_C::K2Node_PropertyAccess_15' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, K2Node_PropertyAccess_14) == 0x000978, "Member 'UTABP_Reverse_Bow_Generic_C::K2Node_PropertyAccess_14' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AttackStart) == 0x000998, "Member 'UTABP_Reverse_Bow_Generic_C::AttackStart' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AttackEnd) == 0x000999, "Member 'UTABP_Reverse_Bow_Generic_C::AttackEnd' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, AttackCancel) == 0x00099A, "Member 'UTABP_Reverse_Bow_Generic_C::AttackCancel' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, HumanoidAnims) == 0x0009A0, "Member 'UTABP_Reverse_Bow_Generic_C::HumanoidAnims' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, HumanoidSneakingAnims) == 0x0009C0, "Member 'UTABP_Reverse_Bow_Generic_C::HumanoidSneakingAnims' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, PairedPawn) == 0x0009E0, "Member 'UTABP_Reverse_Bow_Generic_C::PairedPawn' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, PairedCreature) == 0x0009E8, "Member 'UTABP_Reverse_Bow_Generic_C::PairedCreature' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, Species) == 0x0009F0, "Member 'UTABP_Reverse_Bow_Generic_C::Species' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, IsSneaking) == 0x0009F1, "Member 'UTABP_Reverse_Bow_Generic_C::IsSneaking' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, CurrentAnimStruct) == 0x0009F8, "Member 'UTABP_Reverse_Bow_Generic_C::CurrentAnimStruct' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, CurrentSneakingAnimStruct) == 0x000A18, "Member 'UTABP_Reverse_Bow_Generic_C::CurrentSneakingAnimStruct' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, HasIdleAnim) == 0x000A38, "Member 'UTABP_Reverse_Bow_Generic_C::HasIdleAnim' has a wrong offset!");
static_assert(offsetof(UTABP_Reverse_Bow_Generic_C, CreatureAnimStruct) == 0x000A40, "Member 'UTABP_Reverse_Bow_Generic_C::CreatureAnimStruct' has a wrong offset!");

}

