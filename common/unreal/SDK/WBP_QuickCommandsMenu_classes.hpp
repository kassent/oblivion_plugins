#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_QuickCommandsMenu

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_QuickCommandsMenu.WBP_QuickCommandsMenu_C
// 0x02F8 (0x05B8 - 0x02C0)
class UWBP_QuickCommandsMenu_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                b_additem;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                b_addspell;                                        // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                b_Close;                                           // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                b_coe;                                             // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                b_expand;                                          // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                b_moveto;                                          // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                b_PhysicsDebug_MoveSelect;                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                b_PhysicsDebug_ShowPanel;                          // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                b_placeatme_CREA;                                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                b_placeatme_NPC;                                   // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                b_SetAv;                                           // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                b_SetAv_extra;                                     // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                b_SetLevel;                                        // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                b_VersionNotes;                                    // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UComboBoxString*                        CBS_attributes;                                    // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UComboBoxString*                        CBS_attributes_extra;                              // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UComboBoxString*                        CBS_buffer;                                        // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UComboBoxString*                        CBS_viewmodes;                                     // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UExpandableArea*                        ExpandableArea_41;                                 // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_3;                                           // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_4;                                           // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_5;                                           // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_60;                                          // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMultiLineEditableTextBox*              MultiLineEditableTextBox_351;                      // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          t_Title;                                           // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          t_Title_1;                                         // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               vb_VersionNotes;                                   // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMultiLineEditableTextBox*              w_additem_selection;                               // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMultiLineEditableTextBox*              w_addspell_selection;                              // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          w_coe_X;                                           // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          w_coe_Y;                                           // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          w_PhysicsDebug_Offset;                             // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          w_PhysicsDebug_Range;                              // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          w_SetAv_Amount;                                    // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          w_SetAv_Amount_extra;                              // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          w_SetLevel_Amount;                                 // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_QuickCommandsMenu_FilteredBox_C*   WBP_additem;                                       // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_QuickCommandsMenu_FilteredBox_C*   WBP_addspell;                                      // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ConsoleCommandButton_Simple_C*     WBP_AdvLevel;                                      // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_QuickCommandsMenu_FilteredBox_C*   WBP_Coc;                                           // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ConsoleCommandButton_Simple_C*     WBP_DebugMainMenu;                                 // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ConsoleCommandButton_Simple_C*     WBP_DebugMainMenu_1;                               // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ConsoleCommandButton_Simple_C*     WBP_Ghost;                                         // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ConsoleCommandButton_Simple_C*     WBP_KillAll;                                       // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_QuickCommandsMenu_FilteredBox_C*   WBP_moveto;                                        // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ConsoleCommandButton_Simple_C*     WBP_movetoqt;                                      // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ConsoleCommandButton_Simple_C*     WBP_ObvGodMode;                                    // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ConsoleCommandButton_Simple_C*     WBP_PhysicsDebug_HidePanel;                        // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_QuickCommandsMenu_FilteredBox_C*   WBP_placeatme_CREA;                                // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_QuickCommandsMenu_FilteredBox_C*   WBP_placeatme_NPC;                                 // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ConsoleCommandButton_Simple_C*     WBP_RaceMenu;                                      // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ConsoleCommandButton_Simple_C*     WBP_ShowAllMapsMarkers;                            // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ConsoleCommandButton_Simple_C*     WBP_ShowEnchantment;                               // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ConsoleCommandButton_Simple_C*     WBP_ShowSpellMenu;                                 // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ConsoleCommandButton_Simple_C*     WBP_tcai;                                          // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ConsoleCommandButton_Simple_C*     WBP_Walk;                                          // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class FString>                         Attributes;                                        // 0x04A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         SetAv_Amount;                                      // 0x04B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B4[0x4];                                      // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      PlayerController;                                  // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         SetAv_Amount_Extra;                                // 0x04C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Attributes_Extra;                                  // 0x04C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         SetLevel_Amount;                                   // 0x04D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PhysicsDebug_Range;                                // 0x04DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PhysicsDebug_Offset;                               // 0x04E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E4[0x4];                                      // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ViewModes;                                         // 0x04E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         bufferVisualizations;                              // 0x04F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         coe_X;                                             // 0x0508(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         coe_Y;                                             // 0x050C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             DT_Locations;                                      // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             DT_NPC;                                            // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             DT_CREA;                                           // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FString                                 placeatme_target_NPC;                              // 0x0528(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 placeatme_target_CREA;                             // 0x0538(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class UDataTable*                             DT_AMMO;                                           // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             DT_WEAP;                                           // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             DT_SPEL;                                           // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             DT_CLOT;                                           // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             DT_ARMO;                                           // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             DT_ALCH;                                           // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             DT_Custom;                                         // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             DT_MoveToTargets;                                  // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FString                                 MoveToRefID;                                       // 0x0588(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class FString>                         ElementsToAdd;                                     // 0x0598(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 ElementToAdd;                                      // 0x05A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void Bind_placeatme_NPC(const class FString& SelectedItem, ESelectInfo SelectionType);
	void Bind_placeatme_CREA(const class FString& SelectedItem, ESelectInfo SelectionType);
	void Bind_MoveTo(const class FString& SelectedItem, ESelectInfo SelectionType);
	void Bind_coc_command(const class FString& SelectedItem, ESelectInfo SelectionType);
	void Bind_addspell(const class FString& SelectedItem, ESelectInfo SelectionType);
	void Bind_additem(const class FString& SelectedItem, ESelectInfo SelectionType);
	void AddSpellToSelection(const class FString& SelectedItem);
	void AddItemToSelection(const class FString& SelectedItem);
	void BndEvt__WBP_CheatCommandsMenu_b_addspell_K2Node_ComponentBoundEvent_22_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_CheatCommandsMenu_b_additem_K2Node_ComponentBoundEvent_21_OnButtonClickedEvent__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void OpenedMenu();
	void ExecuteUbergraph_WBP_QuickCommandsMenu(int32 EntryPoint);
	void Construct();
	void coc(const class FString& SelectedItem);
	void break1();
	void BndEvt__WBP_QuickCommandsMenu_b_VersionNotes_K2Node_ComponentBoundEvent_18_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_QuickCommandsMenu_b_moveto_K2Node_ComponentBoundEvent_17_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_QuickCommandsMenu_b_Close_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_ObcCheatCommandsMenu_b_SetAv_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_ObcCheatCommandsMenu_b_expand_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_CheatCommandsMenu_w_SetLevel_Amount_K2Node_ComponentBoundEvent_6_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__WBP_CheatCommandsMenu_w_SetAv_Amount_K2Node_ComponentBoundEvent_3_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__WBP_CheatCommandsMenu_w_SetAv_Amount_extra_K2Node_ComponentBoundEvent_4_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__WBP_CheatCommandsMenu_w_PhysicsDebug_Range_K2Node_ComponentBoundEvent_8_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__WBP_CheatCommandsMenu_w_PhysicsDebug_Offset_K2Node_ComponentBoundEvent_9_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__WBP_CheatCommandsMenu_w_coe_Y_K2Node_ComponentBoundEvent_15_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__WBP_CheatCommandsMenu_w_coe_X_K2Node_ComponentBoundEvent_14_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__WBP_CheatCommandsMenu_CBS_viewmodes_K2Node_ComponentBoundEvent_12_OnSelectionChangedEvent__DelegateSignature(const class FString& SelectedItem, ESelectInfo SelectionType);
	void BndEvt__WBP_CheatCommandsMenu_CBS_buffer_K2Node_ComponentBoundEvent_13_OnSelectionChangedEvent__DelegateSignature(const class FString& SelectedItem, ESelectInfo SelectionType);
	void BndEvt__WBP_CheatCommandsMenu_b_SetLevel_K2Node_ComponentBoundEvent_7_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_CheatCommandsMenu_b_SetAv_extra_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_CheatCommandsMenu_b_placeatme_NPC_K2Node_ComponentBoundEvent_19_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_CheatCommandsMenu_b_placeatme_CREA_K2Node_ComponentBoundEvent_20_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_CheatCommandsMenu_b_PhysicsDebug_ShowPanel_K2Node_ComponentBoundEvent_10_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_CheatCommandsMenu_b_PhysicsDebug_MoveSelect_K2Node_ComponentBoundEvent_11_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_CheatCommandsMenu_b_coe_K2Node_ComponentBoundEvent_16_OnButtonClickedEvent__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_QuickCommandsMenu_C">();
	}
	static class UWBP_QuickCommandsMenu_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_QuickCommandsMenu_C>();
	}
};
static_assert(alignof(UWBP_QuickCommandsMenu_C) == 0x000008, "Wrong alignment on UWBP_QuickCommandsMenu_C");
static_assert(sizeof(UWBP_QuickCommandsMenu_C) == 0x0005B8, "Wrong size on UWBP_QuickCommandsMenu_C");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_QuickCommandsMenu_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, b_additem) == 0x0002C8, "Member 'UWBP_QuickCommandsMenu_C::b_additem' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, b_addspell) == 0x0002D0, "Member 'UWBP_QuickCommandsMenu_C::b_addspell' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, b_Close) == 0x0002D8, "Member 'UWBP_QuickCommandsMenu_C::b_Close' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, b_coe) == 0x0002E0, "Member 'UWBP_QuickCommandsMenu_C::b_coe' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, b_expand) == 0x0002E8, "Member 'UWBP_QuickCommandsMenu_C::b_expand' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, b_moveto) == 0x0002F0, "Member 'UWBP_QuickCommandsMenu_C::b_moveto' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, b_PhysicsDebug_MoveSelect) == 0x0002F8, "Member 'UWBP_QuickCommandsMenu_C::b_PhysicsDebug_MoveSelect' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, b_PhysicsDebug_ShowPanel) == 0x000300, "Member 'UWBP_QuickCommandsMenu_C::b_PhysicsDebug_ShowPanel' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, b_placeatme_CREA) == 0x000308, "Member 'UWBP_QuickCommandsMenu_C::b_placeatme_CREA' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, b_placeatme_NPC) == 0x000310, "Member 'UWBP_QuickCommandsMenu_C::b_placeatme_NPC' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, b_SetAv) == 0x000318, "Member 'UWBP_QuickCommandsMenu_C::b_SetAv' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, b_SetAv_extra) == 0x000320, "Member 'UWBP_QuickCommandsMenu_C::b_SetAv_extra' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, b_SetLevel) == 0x000328, "Member 'UWBP_QuickCommandsMenu_C::b_SetLevel' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, b_VersionNotes) == 0x000330, "Member 'UWBP_QuickCommandsMenu_C::b_VersionNotes' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, CBS_attributes) == 0x000338, "Member 'UWBP_QuickCommandsMenu_C::CBS_attributes' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, CBS_attributes_extra) == 0x000340, "Member 'UWBP_QuickCommandsMenu_C::CBS_attributes_extra' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, CBS_buffer) == 0x000348, "Member 'UWBP_QuickCommandsMenu_C::CBS_buffer' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, CBS_viewmodes) == 0x000350, "Member 'UWBP_QuickCommandsMenu_C::CBS_viewmodes' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, ExpandableArea_41) == 0x000358, "Member 'UWBP_QuickCommandsMenu_C::ExpandableArea_41' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, Image) == 0x000360, "Member 'UWBP_QuickCommandsMenu_C::Image' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, Image_1) == 0x000368, "Member 'UWBP_QuickCommandsMenu_C::Image_1' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, Image_2) == 0x000370, "Member 'UWBP_QuickCommandsMenu_C::Image_2' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, Image_3) == 0x000378, "Member 'UWBP_QuickCommandsMenu_C::Image_3' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, Image_4) == 0x000380, "Member 'UWBP_QuickCommandsMenu_C::Image_4' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, Image_5) == 0x000388, "Member 'UWBP_QuickCommandsMenu_C::Image_5' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, Image_60) == 0x000390, "Member 'UWBP_QuickCommandsMenu_C::Image_60' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, MultiLineEditableTextBox_351) == 0x000398, "Member 'UWBP_QuickCommandsMenu_C::MultiLineEditableTextBox_351' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, t_Title) == 0x0003A0, "Member 'UWBP_QuickCommandsMenu_C::t_Title' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, t_Title_1) == 0x0003A8, "Member 'UWBP_QuickCommandsMenu_C::t_Title_1' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, vb_VersionNotes) == 0x0003B0, "Member 'UWBP_QuickCommandsMenu_C::vb_VersionNotes' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, w_additem_selection) == 0x0003B8, "Member 'UWBP_QuickCommandsMenu_C::w_additem_selection' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, w_addspell_selection) == 0x0003C0, "Member 'UWBP_QuickCommandsMenu_C::w_addspell_selection' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, w_coe_X) == 0x0003C8, "Member 'UWBP_QuickCommandsMenu_C::w_coe_X' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, w_coe_Y) == 0x0003D0, "Member 'UWBP_QuickCommandsMenu_C::w_coe_Y' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, w_PhysicsDebug_Offset) == 0x0003D8, "Member 'UWBP_QuickCommandsMenu_C::w_PhysicsDebug_Offset' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, w_PhysicsDebug_Range) == 0x0003E0, "Member 'UWBP_QuickCommandsMenu_C::w_PhysicsDebug_Range' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, w_SetAv_Amount) == 0x0003E8, "Member 'UWBP_QuickCommandsMenu_C::w_SetAv_Amount' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, w_SetAv_Amount_extra) == 0x0003F0, "Member 'UWBP_QuickCommandsMenu_C::w_SetAv_Amount_extra' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, w_SetLevel_Amount) == 0x0003F8, "Member 'UWBP_QuickCommandsMenu_C::w_SetLevel_Amount' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, WBP_additem) == 0x000400, "Member 'UWBP_QuickCommandsMenu_C::WBP_additem' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, WBP_addspell) == 0x000408, "Member 'UWBP_QuickCommandsMenu_C::WBP_addspell' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, WBP_AdvLevel) == 0x000410, "Member 'UWBP_QuickCommandsMenu_C::WBP_AdvLevel' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, WBP_Coc) == 0x000418, "Member 'UWBP_QuickCommandsMenu_C::WBP_Coc' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, WBP_DebugMainMenu) == 0x000420, "Member 'UWBP_QuickCommandsMenu_C::WBP_DebugMainMenu' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, WBP_DebugMainMenu_1) == 0x000428, "Member 'UWBP_QuickCommandsMenu_C::WBP_DebugMainMenu_1' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, WBP_Ghost) == 0x000430, "Member 'UWBP_QuickCommandsMenu_C::WBP_Ghost' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, WBP_KillAll) == 0x000438, "Member 'UWBP_QuickCommandsMenu_C::WBP_KillAll' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, WBP_moveto) == 0x000440, "Member 'UWBP_QuickCommandsMenu_C::WBP_moveto' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, WBP_movetoqt) == 0x000448, "Member 'UWBP_QuickCommandsMenu_C::WBP_movetoqt' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, WBP_ObvGodMode) == 0x000450, "Member 'UWBP_QuickCommandsMenu_C::WBP_ObvGodMode' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, WBP_PhysicsDebug_HidePanel) == 0x000458, "Member 'UWBP_QuickCommandsMenu_C::WBP_PhysicsDebug_HidePanel' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, WBP_placeatme_CREA) == 0x000460, "Member 'UWBP_QuickCommandsMenu_C::WBP_placeatme_CREA' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, WBP_placeatme_NPC) == 0x000468, "Member 'UWBP_QuickCommandsMenu_C::WBP_placeatme_NPC' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, WBP_RaceMenu) == 0x000470, "Member 'UWBP_QuickCommandsMenu_C::WBP_RaceMenu' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, WBP_ShowAllMapsMarkers) == 0x000478, "Member 'UWBP_QuickCommandsMenu_C::WBP_ShowAllMapsMarkers' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, WBP_ShowEnchantment) == 0x000480, "Member 'UWBP_QuickCommandsMenu_C::WBP_ShowEnchantment' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, WBP_ShowSpellMenu) == 0x000488, "Member 'UWBP_QuickCommandsMenu_C::WBP_ShowSpellMenu' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, WBP_tcai) == 0x000490, "Member 'UWBP_QuickCommandsMenu_C::WBP_tcai' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, WBP_Walk) == 0x000498, "Member 'UWBP_QuickCommandsMenu_C::WBP_Walk' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, Attributes) == 0x0004A0, "Member 'UWBP_QuickCommandsMenu_C::Attributes' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, SetAv_Amount) == 0x0004B0, "Member 'UWBP_QuickCommandsMenu_C::SetAv_Amount' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, PlayerController) == 0x0004B8, "Member 'UWBP_QuickCommandsMenu_C::PlayerController' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, SetAv_Amount_Extra) == 0x0004C0, "Member 'UWBP_QuickCommandsMenu_C::SetAv_Amount_Extra' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, Attributes_Extra) == 0x0004C8, "Member 'UWBP_QuickCommandsMenu_C::Attributes_Extra' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, SetLevel_Amount) == 0x0004D8, "Member 'UWBP_QuickCommandsMenu_C::SetLevel_Amount' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, PhysicsDebug_Range) == 0x0004DC, "Member 'UWBP_QuickCommandsMenu_C::PhysicsDebug_Range' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, PhysicsDebug_Offset) == 0x0004E0, "Member 'UWBP_QuickCommandsMenu_C::PhysicsDebug_Offset' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, ViewModes) == 0x0004E8, "Member 'UWBP_QuickCommandsMenu_C::ViewModes' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, bufferVisualizations) == 0x0004F8, "Member 'UWBP_QuickCommandsMenu_C::bufferVisualizations' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, coe_X) == 0x000508, "Member 'UWBP_QuickCommandsMenu_C::coe_X' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, coe_Y) == 0x00050C, "Member 'UWBP_QuickCommandsMenu_C::coe_Y' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, DT_Locations) == 0x000510, "Member 'UWBP_QuickCommandsMenu_C::DT_Locations' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, DT_NPC) == 0x000518, "Member 'UWBP_QuickCommandsMenu_C::DT_NPC' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, DT_CREA) == 0x000520, "Member 'UWBP_QuickCommandsMenu_C::DT_CREA' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, placeatme_target_NPC) == 0x000528, "Member 'UWBP_QuickCommandsMenu_C::placeatme_target_NPC' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, placeatme_target_CREA) == 0x000538, "Member 'UWBP_QuickCommandsMenu_C::placeatme_target_CREA' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, DT_AMMO) == 0x000548, "Member 'UWBP_QuickCommandsMenu_C::DT_AMMO' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, DT_WEAP) == 0x000550, "Member 'UWBP_QuickCommandsMenu_C::DT_WEAP' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, DT_SPEL) == 0x000558, "Member 'UWBP_QuickCommandsMenu_C::DT_SPEL' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, DT_CLOT) == 0x000560, "Member 'UWBP_QuickCommandsMenu_C::DT_CLOT' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, DT_ARMO) == 0x000568, "Member 'UWBP_QuickCommandsMenu_C::DT_ARMO' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, DT_ALCH) == 0x000570, "Member 'UWBP_QuickCommandsMenu_C::DT_ALCH' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, DT_Custom) == 0x000578, "Member 'UWBP_QuickCommandsMenu_C::DT_Custom' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, DT_MoveToTargets) == 0x000580, "Member 'UWBP_QuickCommandsMenu_C::DT_MoveToTargets' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, MoveToRefID) == 0x000588, "Member 'UWBP_QuickCommandsMenu_C::MoveToRefID' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, ElementsToAdd) == 0x000598, "Member 'UWBP_QuickCommandsMenu_C::ElementsToAdd' has a wrong offset!");
static_assert(offsetof(UWBP_QuickCommandsMenu_C, ElementToAdd) == 0x0005A8, "Member 'UWBP_QuickCommandsMenu_C::ElementToAdd' has a wrong offset!");

}

