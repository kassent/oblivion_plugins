#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Graphic_DLSS_Reflex

#include "Basic.hpp"

#include "StreamlineBlueprint_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_Graphic_DLSS_Reflex.WBP_Graphic_DLSS_Reflex_C.ExecuteUbergraph_WBP_Graphic_DLSS_Reflex
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineDLSSGMode                         Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0018(0x0018)()
	EUStreamlineDLSSGMode                         Temp_byte_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineReflexMode                        Temp_byte_Variable_2;                              // 0x0038(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineReflexMode                        Temp_byte_Variable_3;                              // 0x0039(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineReflexMode                        Temp_byte_Variable_4;                              // 0x003A(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& SelectedItem, ESelectInfo SelectionType)> K2Node_CreateDelegate_OutputDelegate; // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_GraphicsPanel_C*                   K2Node_DynamicCast_AsWBP_Graphics_Panel;           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineDLSSGMode                         CallFunc_GetDLSSGMode_ReturnValue;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLabel_ReturnValue;                     // 0x0070(0x0018)(ConstParm)
	EUStreamlineDLSSGMode                         CallFunc_GetDLSSGMode_ReturnValue_1;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x5];                                       // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_SelectedItem;                   // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_CustomEvent_SelectionType;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineReflexMode                        K2Node_Select_Default_2;                           // 0x00A8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex) == 0x000008, "Wrong alignment on WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex");
static_assert(sizeof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex) == 0x0000D0, "Wrong size on WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, EntryPoint) == 0x000000, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, Temp_byte_Variable) == 0x000004, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, Temp_bool_Variable) == 0x000005, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, Temp_bool_Variable_1) == 0x000006, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, Temp_bool_Variable_2) == 0x000007, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, K2Node_MakeArray_Array) == 0x000008, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, CallFunc_Format_ReturnValue) == 0x000018, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, Temp_byte_Variable_1) == 0x000030, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, Temp_bool_Variable_3) == 0x000031, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, Temp_bool_Variable_4) == 0x000032, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, Temp_bool_Variable_5) == 0x000033, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, Temp_int_Variable) == 0x000034, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, Temp_byte_Variable_2) == 0x000038, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, Temp_byte_Variable_3) == 0x000039, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, Temp_byte_Variable_4) == 0x00003A, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, K2Node_DynamicCast_AsWBP_Graphics_Panel) == 0x000050, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::K2Node_DynamicCast_AsWBP_Graphics_Panel' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, CallFunc_GetDLSSGMode_ReturnValue) == 0x000059, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::CallFunc_GetDLSSGMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, K2Node_Select_Default) == 0x00005A, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, K2Node_CreateDelegate_OutputDelegate_1) == 0x00005C, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, CallFunc_GetLabel_ReturnValue) == 0x000070, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::CallFunc_GetLabel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, CallFunc_GetDLSSGMode_ReturnValue_1) == 0x000088, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::CallFunc_GetDLSSGMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000089, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, K2Node_Select_Default_1) == 0x00008A, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, K2Node_CustomEvent_SelectedItem) == 0x000090, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::K2Node_CustomEvent_SelectedItem' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, K2Node_CustomEvent_SelectionType) == 0x0000A0, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::K2Node_CustomEvent_SelectionType' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, CallFunc_Array_Find_ReturnValue) == 0x0000A4, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, K2Node_Select_Default_2) == 0x0000A8, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000B0, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C0, "Member 'WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function WBP_Graphic_DLSS_Reflex.WBP_Graphic_DLSS_Reflex_C.Get System Reflex Mode
// 0x0020 (0x0020 - 0x0000)
struct WBP_Graphic_DLSS_Reflex_C_Get_System_Reflex_Mode final
{
public:
	int32                                         Refelex_Mode_Index;                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Reflex_Mode_Name;                                  // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Graphic_DLSS_Reflex_C_Get_System_Reflex_Mode) == 0x000008, "Wrong alignment on WBP_Graphic_DLSS_Reflex_C_Get_System_Reflex_Mode");
static_assert(sizeof(WBP_Graphic_DLSS_Reflex_C_Get_System_Reflex_Mode) == 0x000020, "Wrong size on WBP_Graphic_DLSS_Reflex_C_Get_System_Reflex_Mode");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Get_System_Reflex_Mode, Refelex_Mode_Index) == 0x000000, "Member 'WBP_Graphic_DLSS_Reflex_C_Get_System_Reflex_Mode::Refelex_Mode_Index' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Get_System_Reflex_Mode, Reflex_Mode_Name) == 0x000008, "Member 'WBP_Graphic_DLSS_Reflex_C_Get_System_Reflex_Mode::Reflex_Mode_Name' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Get_System_Reflex_Mode, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x000018, "Member 'WBP_Graphic_DLSS_Reflex_C_Get_System_Reflex_Mode::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");

// Function WBP_Graphic_DLSS_Reflex.WBP_Graphic_DLSS_Reflex_C.Reflex Mode Change Event
// 0x0018 (0x0018 - 0x0000)
struct WBP_Graphic_DLSS_Reflex_C_Reflex_Mode_Change_Event final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Graphic_DLSS_Reflex_C_Reflex_Mode_Change_Event) == 0x000008, "Wrong alignment on WBP_Graphic_DLSS_Reflex_C_Reflex_Mode_Change_Event");
static_assert(sizeof(WBP_Graphic_DLSS_Reflex_C_Reflex_Mode_Change_Event) == 0x000018, "Wrong size on WBP_Graphic_DLSS_Reflex_C_Reflex_Mode_Change_Event");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Reflex_Mode_Change_Event, SelectedItem) == 0x000000, "Member 'WBP_Graphic_DLSS_Reflex_C_Reflex_Mode_Change_Event::SelectedItem' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Reflex_Mode_Change_Event, SelectionType) == 0x000010, "Member 'WBP_Graphic_DLSS_Reflex_C_Reflex_Mode_Change_Event::SelectionType' has a wrong offset!");

// Function WBP_Graphic_DLSS_Reflex.WBP_Graphic_DLSS_Reflex_C.Refresh
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_Graphic_DLSS_Reflex_C_Refresh final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_System_Reflex_Mode_Refelex_Mode_Index; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_System_Reflex_Mode_Reflex_Mode_Name;  // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EUStreamlineReflexMode                        CallFunc_GetReflexMode_ReturnValue;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EUStreamlineReflexMode>                K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	EUStreamlineReflexMode                        CallFunc_Array_Get_Item;                           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReflexSupported_ReturnValue;            // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLabel_ReturnValue;                     // 0x0090(0x0018)(ConstParm)
};
static_assert(alignof(WBP_Graphic_DLSS_Reflex_C_Refresh) == 0x000008, "Wrong alignment on WBP_Graphic_DLSS_Reflex_C_Refresh");
static_assert(sizeof(WBP_Graphic_DLSS_Reflex_C_Refresh) == 0x0000A8, "Wrong size on WBP_Graphic_DLSS_Reflex_C_Refresh");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, Temp_int_Variable) == 0x000000, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, Temp_int_Variable_1) == 0x000004, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, CallFunc_Conv_IntToByte_ReturnValue) == 0x000008, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, CallFunc_GetValidValue_ReturnValue) == 0x000010, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000011, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000018, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000028, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00002C, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, Temp_int_Array_Index_Variable) == 0x000030, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, CallFunc_Get_System_Reflex_Mode_Refelex_Mode_Index) == 0x000034, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::CallFunc_Get_System_Reflex_Mode_Refelex_Mode_Index' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, CallFunc_Get_System_Reflex_Mode_Reflex_Mode_Name) == 0x000038, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::CallFunc_Get_System_Reflex_Mode_Reflex_Mode_Name' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, CallFunc_GetReflexMode_ReturnValue) == 0x000048, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::CallFunc_GetReflexMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, CallFunc_MakeLiteralInt_ReturnValue) == 0x000058, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, K2Node_MakeArray_Array) == 0x000060, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, CallFunc_Array_Get_Item) == 0x000070, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000078, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, CallFunc_Less_IntInt_ReturnValue_1) == 0x000088, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, CallFunc_IsReflexSupported_ReturnValue) == 0x000089, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::CallFunc_IsReflexSupported_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphic_DLSS_Reflex_C_Refresh, CallFunc_GetLabel_ReturnValue) == 0x000090, "Member 'WBP_Graphic_DLSS_Reflex_C_Refresh::CallFunc_GetLabel_ReturnValue' has a wrong offset!");

}

