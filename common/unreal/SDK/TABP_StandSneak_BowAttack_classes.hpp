#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TABP_StandSneak_BowAttack

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "TABP_StandSneak_BowAttack_structs.hpp"
#include "Altar_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass TABP_StandSneak_BowAttack.TABP_StandSneak_BowAttack_C
// 0x0630 (0x0A20 - 0x03F0)
class UTABP_StandSneak_BowAttack_C final : public UVBowAttackStandSneakAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct TABP_StandSneak_BowAttack::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;    // 0x03F8(0x001C)(HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0418(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0420(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0428(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0448(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0470(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0498(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x04C0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0508(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x0550(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0598(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x05B8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0600(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0648(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0690(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x06B0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x06F8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0740(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0788(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x07A8(0x00C8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0870(0x00B8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0928(0x0080)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x09A8(0x0020)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x09C8(0x0010)()
	struct FGameplayTagContainer                  K2Node_PropertyAccess_14;                          // 0x09D8(0x0020)()
	struct FGameplayTagContainer                  K2Node_PropertyAccess_13;                          // 0x09F8(0x0020)()

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AttackingLayer(const struct FPoseLink& InPose, struct FPoseLink* AttackingLayer_0);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_TABP_StandSneak_BowAttack_AnimGraphNode_BlendListByBool_297D02F84AC6E2D637D8C3B2DB1DB872();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_TABP_StandSneak_BowAttack_AnimGraphNode_BlendListByBool_72FCAB3D4ECBCBE0D3E19188943D7F3C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_TABP_StandSneak_BowAttack_AnimGraphNode_BlendListByBool_87C8ADC144697B2B9C3EB199E30C3EF5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_TABP_StandSneak_BowAttack_AnimGraphNode_TransitionResult_B1F6A8C840EB9C07F469BE95A24785E4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_TABP_StandSneak_BowAttack_AnimGraphNode_TransitionResult_E0E157CC4FD512348E8C5FBBDD812B6C();
	void ExecuteUbergraph_TABP_StandSneak_BowAttack(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TABP_StandSneak_BowAttack_C">();
	}
	static class UTABP_StandSneak_BowAttack_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTABP_StandSneak_BowAttack_C>();
	}
};
static_assert(alignof(UTABP_StandSneak_BowAttack_C) == 0x000010, "Wrong alignment on UTABP_StandSneak_BowAttack_C");
static_assert(sizeof(UTABP_StandSneak_BowAttack_C) == 0x000A20, "Wrong size on UTABP_StandSneak_BowAttack_C");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, UberGraphFrame) == 0x0003F0, "Member 'UTABP_StandSneak_BowAttack_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, __AnimBlueprintMutables) == 0x0003F8, "Member 'UTABP_StandSneak_BowAttack_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, AnimBlueprintExtension_PropertyAccess) == 0x000418, "Member 'UTABP_StandSneak_BowAttack_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, AnimBlueprintExtension_Base) == 0x000420, "Member 'UTABP_StandSneak_BowAttack_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, AnimGraphNode_Root_1) == 0x000428, "Member 'UTABP_StandSneak_BowAttack_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, AnimGraphNode_TransitionResult_2) == 0x000448, "Member 'UTABP_StandSneak_BowAttack_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, AnimGraphNode_TransitionResult_1) == 0x000470, "Member 'UTABP_StandSneak_BowAttack_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, AnimGraphNode_TransitionResult) == 0x000498, "Member 'UTABP_StandSneak_BowAttack_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, AnimGraphNode_SequencePlayer_5) == 0x0004C0, "Member 'UTABP_StandSneak_BowAttack_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, AnimGraphNode_SequencePlayer_4) == 0x000508, "Member 'UTABP_StandSneak_BowAttack_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, AnimGraphNode_BlendListByBool_2) == 0x000550, "Member 'UTABP_StandSneak_BowAttack_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, AnimGraphNode_StateResult_2) == 0x000598, "Member 'UTABP_StandSneak_BowAttack_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, AnimGraphNode_SequencePlayer_3) == 0x0005B8, "Member 'UTABP_StandSneak_BowAttack_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, AnimGraphNode_SequencePlayer_2) == 0x000600, "Member 'UTABP_StandSneak_BowAttack_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, AnimGraphNode_BlendListByBool_1) == 0x000648, "Member 'UTABP_StandSneak_BowAttack_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, AnimGraphNode_StateResult_1) == 0x000690, "Member 'UTABP_StandSneak_BowAttack_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, AnimGraphNode_SequencePlayer_1) == 0x0006B0, "Member 'UTABP_StandSneak_BowAttack_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, AnimGraphNode_SequencePlayer) == 0x0006F8, "Member 'UTABP_StandSneak_BowAttack_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, AnimGraphNode_BlendListByBool) == 0x000740, "Member 'UTABP_StandSneak_BowAttack_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, AnimGraphNode_StateResult) == 0x000788, "Member 'UTABP_StandSneak_BowAttack_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, AnimGraphNode_StateMachine) == 0x0007A8, "Member 'UTABP_StandSneak_BowAttack_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, AnimGraphNode_LinkedInputPose) == 0x000870, "Member 'UTABP_StandSneak_BowAttack_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, AnimGraphNode_SaveCachedPose) == 0x000928, "Member 'UTABP_StandSneak_BowAttack_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, AnimGraphNode_Root) == 0x0009A8, "Member 'UTABP_StandSneak_BowAttack_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, AnimGraphNode_LocalRefPose) == 0x0009C8, "Member 'UTABP_StandSneak_BowAttack_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, K2Node_PropertyAccess_14) == 0x0009D8, "Member 'UTABP_StandSneak_BowAttack_C::K2Node_PropertyAccess_14' has a wrong offset!");
static_assert(offsetof(UTABP_StandSneak_BowAttack_C, K2Node_PropertyAccess_13) == 0x0009F8, "Member 'UTABP_StandSneak_BowAttack_C::K2Node_PropertyAccess_13' has a wrong offset!");

}

