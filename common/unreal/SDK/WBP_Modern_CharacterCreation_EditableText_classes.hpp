#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Modern_CharacterCreation_EditableText

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Altar_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Modern_CharacterCreation_EditableText.WBP_Modern_CharacterCreation_EditableText_C
// 0x0070 (0x0580 - 0x0510)
class UWBP_Modern_CharacterCreation_EditableText_C final : public UVAltarNavigableEditableText
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0510(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        LastEnteredNumber;                                 // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(double Number)> OnNumberChanged;                                   // 0x0520(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         MaximumLabelFractionalDigits;                      // 0x0530(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534[0x4];                                      // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MinValue;                                          // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        MaxValue;                                          // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Factor;                                            // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            TextColor;                                         // 0x0550(0x0014)(Edit, BlueprintVisible)
	uint8                                         Pad_564[0x4];                                      // 0x0564(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LastText;                                          // 0x0568(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void UpdateTextNumber(double NewNumber);
	void UpdateText(const class FText& InText);
	void SetLastTextFromFloat(double NewFloatValue, class FText* NewTextValue);
	void PreConstruct(bool IsDesignTime);
	void UpdateTextColor(const struct FSlateColor& NewColor);
	void Construct();
	void BndEvt__WBP_Modern_CharacterCreation_EditableText_EditableText_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void ExecuteUbergraph_WBP_Modern_CharacterCreation_EditableText(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Modern_CharacterCreation_EditableText_C">();
	}
	static class UWBP_Modern_CharacterCreation_EditableText_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Modern_CharacterCreation_EditableText_C>();
	}
};
static_assert(alignof(UWBP_Modern_CharacterCreation_EditableText_C) == 0x000008, "Wrong alignment on UWBP_Modern_CharacterCreation_EditableText_C");
static_assert(sizeof(UWBP_Modern_CharacterCreation_EditableText_C) == 0x000580, "Wrong size on UWBP_Modern_CharacterCreation_EditableText_C");
static_assert(offsetof(UWBP_Modern_CharacterCreation_EditableText_C, UberGraphFrame) == 0x000510, "Member 'UWBP_Modern_CharacterCreation_EditableText_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_CharacterCreation_EditableText_C, LastEnteredNumber) == 0x000518, "Member 'UWBP_Modern_CharacterCreation_EditableText_C::LastEnteredNumber' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_CharacterCreation_EditableText_C, OnNumberChanged) == 0x000520, "Member 'UWBP_Modern_CharacterCreation_EditableText_C::OnNumberChanged' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_CharacterCreation_EditableText_C, MaximumLabelFractionalDigits) == 0x000530, "Member 'UWBP_Modern_CharacterCreation_EditableText_C::MaximumLabelFractionalDigits' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_CharacterCreation_EditableText_C, MinValue) == 0x000538, "Member 'UWBP_Modern_CharacterCreation_EditableText_C::MinValue' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_CharacterCreation_EditableText_C, MaxValue) == 0x000540, "Member 'UWBP_Modern_CharacterCreation_EditableText_C::MaxValue' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_CharacterCreation_EditableText_C, Factor) == 0x000548, "Member 'UWBP_Modern_CharacterCreation_EditableText_C::Factor' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_CharacterCreation_EditableText_C, TextColor) == 0x000550, "Member 'UWBP_Modern_CharacterCreation_EditableText_C::TextColor' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_CharacterCreation_EditableText_C, LastText) == 0x000568, "Member 'UWBP_Modern_CharacterCreation_EditableText_C::LastText' has a wrong offset!");

}

