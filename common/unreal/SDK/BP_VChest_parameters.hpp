#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VChest

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_VChest.BP_VChest_C.1 Rotation
// 0x0148 (0x0148 - 0x0000)
struct BP_VChest_C_One_Rotation final
{
public:
	class USceneComponent*                        Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Original_Rotation;                                 // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Target_Rotation;                                   // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        Timeline;                                          // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0058(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_RLerp_Alpha_ImplicitCast;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VChest_C_One_Rotation) == 0x000008, "Wrong alignment on BP_VChest_C_One_Rotation");
static_assert(sizeof(BP_VChest_C_One_Rotation) == 0x000148, "Wrong size on BP_VChest_C_One_Rotation");
static_assert(offsetof(BP_VChest_C_One_Rotation, Mesh) == 0x000000, "Member 'BP_VChest_C_One_Rotation::Mesh' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_One_Rotation, Original_Rotation) == 0x000008, "Member 'BP_VChest_C_One_Rotation::Original_Rotation' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_One_Rotation, Target_Rotation) == 0x000020, "Member 'BP_VChest_C_One_Rotation::Target_Rotation' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_One_Rotation, Timeline) == 0x000038, "Member 'BP_VChest_C_One_Rotation::Timeline' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_One_Rotation, CallFunc_RLerp_ReturnValue) == 0x000040, "Member 'BP_VChest_C_One_Rotation::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_One_Rotation, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000058, "Member 'BP_VChest_C_One_Rotation::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_One_Rotation, CallFunc_RLerp_Alpha_ImplicitCast) == 0x000140, "Member 'BP_VChest_C_One_Rotation::CallFunc_RLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function BP_VChest.BP_VChest_C.1 Teleport
// 0x0208 (0x0208 - 0x0000)
struct BP_VChest_C_One_Teleport final
{
public:
	class USceneComponent*                        Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_Location;                                   // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Target_Rotation;                                   // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0038(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0120(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_VChest_C_One_Teleport) == 0x000008, "Wrong alignment on BP_VChest_C_One_Teleport");
static_assert(sizeof(BP_VChest_C_One_Teleport) == 0x000208, "Wrong size on BP_VChest_C_One_Teleport");
static_assert(offsetof(BP_VChest_C_One_Teleport, Mesh) == 0x000000, "Member 'BP_VChest_C_One_Teleport::Mesh' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_One_Teleport, Target_Location) == 0x000008, "Member 'BP_VChest_C_One_Teleport::Target_Location' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_One_Teleport, Target_Rotation) == 0x000020, "Member 'BP_VChest_C_One_Teleport::Target_Rotation' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_One_Teleport, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000038, "Member 'BP_VChest_C_One_Teleport::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_One_Teleport, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000120, "Member 'BP_VChest_C_One_Teleport::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function BP_VChest.BP_VChest_C.1 Translation
// 0x0148 (0x0148 - 0x0000)
struct BP_VChest_C_One_Translation final
{
public:
	class USceneComponent*                        Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Original_Location;                                 // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_Location;                                   // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Timeline;                                          // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0058(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VChest_C_One_Translation) == 0x000008, "Wrong alignment on BP_VChest_C_One_Translation");
static_assert(sizeof(BP_VChest_C_One_Translation) == 0x000148, "Wrong size on BP_VChest_C_One_Translation");
static_assert(offsetof(BP_VChest_C_One_Translation, Mesh) == 0x000000, "Member 'BP_VChest_C_One_Translation::Mesh' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_One_Translation, Original_Location) == 0x000008, "Member 'BP_VChest_C_One_Translation::Original_Location' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_One_Translation, Target_Location) == 0x000020, "Member 'BP_VChest_C_One_Translation::Target_Location' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_One_Translation, Timeline) == 0x000038, "Member 'BP_VChest_C_One_Translation::Timeline' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_One_Translation, CallFunc_VLerp_ReturnValue) == 0x000040, "Member 'BP_VChest_C_One_Translation::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_One_Translation, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000058, "Member 'BP_VChest_C_One_Translation::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_One_Translation, CallFunc_VLerp_Alpha_ImplicitCast) == 0x000140, "Member 'BP_VChest_C_One_Translation::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function BP_VChest.BP_VChest_C.ExecuteUbergraph_BP_VChest
// 0x0058 (0x0058 - 0x0000)
struct BP_VChest_C_ExecuteUbergraph_BP_VChest final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsContainerUnlocked_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsContainerOpen_ReturnValue;              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsContainerOpen_ReturnValue_1;            // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsContainerOpen_ReturnValue_2;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsContainerOpen_ReturnValue_3;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsContainerOpen_ReturnValue_4;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsContainerOpen_ReturnValue_5;            // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsContainerOpen_ReturnValue_6;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_HalfSecBefore;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_HalfSecAfter;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_3rd;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Update_Timeline_HalfSecBefore_ImplicitCast; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Update_Timeline_HalfSecAfter_ImplicitCast; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Update_Timeline_3rd_ImplicitCast;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Update_Timeline_HalfSecBefore_ImplicitCast_1; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Update_Timeline_HalfSecAfter_ImplicitCast_1; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Update_Timeline_3rd_ImplicitCast_1;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VChest_C_ExecuteUbergraph_BP_VChest) == 0x000008, "Wrong alignment on BP_VChest_C_ExecuteUbergraph_BP_VChest");
static_assert(sizeof(BP_VChest_C_ExecuteUbergraph_BP_VChest) == 0x000058, "Wrong size on BP_VChest_C_ExecuteUbergraph_BP_VChest");
static_assert(offsetof(BP_VChest_C_ExecuteUbergraph_BP_VChest, EntryPoint) == 0x000000, "Member 'BP_VChest_C_ExecuteUbergraph_BP_VChest::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_ExecuteUbergraph_BP_VChest, CallFunc_IsContainerUnlocked_ReturnValue) == 0x000004, "Member 'BP_VChest_C_ExecuteUbergraph_BP_VChest::CallFunc_IsContainerUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_ExecuteUbergraph_BP_VChest, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'BP_VChest_C_ExecuteUbergraph_BP_VChest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_ExecuteUbergraph_BP_VChest, CallFunc_IsContainerOpen_ReturnValue) == 0x000006, "Member 'BP_VChest_C_ExecuteUbergraph_BP_VChest::CallFunc_IsContainerOpen_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_ExecuteUbergraph_BP_VChest, CallFunc_IsContainerOpen_ReturnValue_1) == 0x000007, "Member 'BP_VChest_C_ExecuteUbergraph_BP_VChest::CallFunc_IsContainerOpen_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_ExecuteUbergraph_BP_VChest, CallFunc_IsContainerOpen_ReturnValue_2) == 0x000008, "Member 'BP_VChest_C_ExecuteUbergraph_BP_VChest::CallFunc_IsContainerOpen_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_ExecuteUbergraph_BP_VChest, CallFunc_IsContainerOpen_ReturnValue_3) == 0x000009, "Member 'BP_VChest_C_ExecuteUbergraph_BP_VChest::CallFunc_IsContainerOpen_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_ExecuteUbergraph_BP_VChest, CallFunc_IsContainerOpen_ReturnValue_4) == 0x00000A, "Member 'BP_VChest_C_ExecuteUbergraph_BP_VChest::CallFunc_IsContainerOpen_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_ExecuteUbergraph_BP_VChest, CallFunc_IsContainerOpen_ReturnValue_5) == 0x00000B, "Member 'BP_VChest_C_ExecuteUbergraph_BP_VChest::CallFunc_IsContainerOpen_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_ExecuteUbergraph_BP_VChest, CallFunc_IsContainerOpen_ReturnValue_6) == 0x00000C, "Member 'BP_VChest_C_ExecuteUbergraph_BP_VChest::CallFunc_IsContainerOpen_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_ExecuteUbergraph_BP_VChest, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'BP_VChest_C_ExecuteUbergraph_BP_VChest::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_ExecuteUbergraph_BP_VChest, K2Node_CustomEvent_HalfSecBefore) == 0x000010, "Member 'BP_VChest_C_ExecuteUbergraph_BP_VChest::K2Node_CustomEvent_HalfSecBefore' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_ExecuteUbergraph_BP_VChest, K2Node_CustomEvent_HalfSecAfter) == 0x000018, "Member 'BP_VChest_C_ExecuteUbergraph_BP_VChest::K2Node_CustomEvent_HalfSecAfter' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_ExecuteUbergraph_BP_VChest, K2Node_CustomEvent_3rd) == 0x000020, "Member 'BP_VChest_C_ExecuteUbergraph_BP_VChest::K2Node_CustomEvent_3rd' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_ExecuteUbergraph_BP_VChest, CallFunc_Update_Timeline_HalfSecBefore_ImplicitCast) == 0x000028, "Member 'BP_VChest_C_ExecuteUbergraph_BP_VChest::CallFunc_Update_Timeline_HalfSecBefore_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_ExecuteUbergraph_BP_VChest, CallFunc_Update_Timeline_HalfSecAfter_ImplicitCast) == 0x000030, "Member 'BP_VChest_C_ExecuteUbergraph_BP_VChest::CallFunc_Update_Timeline_HalfSecAfter_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_ExecuteUbergraph_BP_VChest, CallFunc_Update_Timeline_3rd_ImplicitCast) == 0x000038, "Member 'BP_VChest_C_ExecuteUbergraph_BP_VChest::CallFunc_Update_Timeline_3rd_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_ExecuteUbergraph_BP_VChest, CallFunc_Update_Timeline_HalfSecBefore_ImplicitCast_1) == 0x000040, "Member 'BP_VChest_C_ExecuteUbergraph_BP_VChest::CallFunc_Update_Timeline_HalfSecBefore_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_ExecuteUbergraph_BP_VChest, CallFunc_Update_Timeline_HalfSecAfter_ImplicitCast_1) == 0x000048, "Member 'BP_VChest_C_ExecuteUbergraph_BP_VChest::CallFunc_Update_Timeline_HalfSecAfter_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_ExecuteUbergraph_BP_VChest, CallFunc_Update_Timeline_3rd_ImplicitCast_1) == 0x000050, "Member 'BP_VChest_C_ExecuteUbergraph_BP_VChest::CallFunc_Update_Timeline_3rd_ImplicitCast_1' has a wrong offset!");

// Function BP_VChest.BP_VChest_C.Update Timeline
// 0x0018 (0x0018 - 0x0000)
struct BP_VChest_C_Update_Timeline final
{
public:
	double                                        HalfSecBefore;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HalfSecAfter;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Threerd;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VChest_C_Update_Timeline) == 0x000008, "Wrong alignment on BP_VChest_C_Update_Timeline");
static_assert(sizeof(BP_VChest_C_Update_Timeline) == 0x000018, "Wrong size on BP_VChest_C_Update_Timeline");
static_assert(offsetof(BP_VChest_C_Update_Timeline, HalfSecBefore) == 0x000000, "Member 'BP_VChest_C_Update_Timeline::HalfSecBefore' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_Update_Timeline, HalfSecAfter) == 0x000008, "Member 'BP_VChest_C_Update_Timeline::HalfSecAfter' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_Update_Timeline, Threerd) == 0x000010, "Member 'BP_VChest_C_Update_Timeline::Threerd' has a wrong offset!");

// Function BP_VChest.BP_VChest_C.UserConstructionScript
// 0x0003 (0x0003 - 0x0000)
struct BP_VChest_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsContainerUnlocked_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VChest_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_VChest_C_UserConstructionScript");
static_assert(sizeof(BP_VChest_C_UserConstructionScript) == 0x000003, "Wrong size on BP_VChest_C_UserConstructionScript");
static_assert(offsetof(BP_VChest_C_UserConstructionScript, CallFunc_IsContainerUnlocked_ReturnValue) == 0x000000, "Member 'BP_VChest_C_UserConstructionScript::CallFunc_IsContainerUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_UserConstructionScript, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'BP_VChest_C_UserConstructionScript::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VChest_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000002, "Member 'BP_VChest_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

}

