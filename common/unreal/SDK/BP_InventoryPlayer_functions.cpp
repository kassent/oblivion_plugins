#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InventoryPlayer

#include "Basic.hpp"

#include "BP_InventoryPlayer_classes.hpp"
#include "BP_InventoryPlayer_parameters.hpp"


namespace SDK
{

// Function BP_InventoryPlayer.BP_InventoryPlayer_C.BindOnCharacterPreviewChanged
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_InventoryPlayer_C::BindOnCharacterPreviewChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryPlayer_C", "BindOnCharacterPreviewChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InventoryPlayer.BP_InventoryPlayer_C.ChangeEquippedObjectVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InEquippedObject                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_InventoryPlayer_C::ChangeEquippedObjectVisibility(class AActor* InEquippedObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryPlayer_C", "ChangeEquippedObjectVisibility");

	Params::BP_InventoryPlayer_C_ChangeEquippedObjectVisibility Parms{};

	Parms.InEquippedObject = InEquippedObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventoryPlayer.BP_InventoryPlayer_C.ChangeEquippedShieldVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InEquippedObject                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_InventoryPlayer_C::ChangeEquippedShieldVisibility(class AActor* InEquippedObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryPlayer_C", "ChangeEquippedShieldVisibility");

	Params::BP_InventoryPlayer_C_ChangeEquippedShieldVisibility Parms{};

	Parms.InEquippedObject = InEquippedObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventoryPlayer.BP_InventoryPlayer_C.ExecuteUbergraph_BP_InventoryPlayer
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InventoryPlayer_C::ExecuteUbergraph_BP_InventoryPlayer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryPlayer_C", "ExecuteUbergraph_BP_InventoryPlayer");

	Params::BP_InventoryPlayer_C_ExecuteUbergraph_BP_InventoryPlayer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventoryPlayer.BP_InventoryPlayer_C.OnEquippedObjectVisibilityChanged
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_InventoryPlayer_C::OnEquippedObjectVisibilityChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryPlayer_C", "OnEquippedObjectVisibilityChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InventoryPlayer.BP_InventoryPlayer_C.OnItemDisplayed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsItemDisplayed                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InventoryPlayer_C::OnItemDisplayed(bool IsItemDisplayed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryPlayer_C", "OnItemDisplayed");

	Params::BP_InventoryPlayer_C_OnItemDisplayed Parms{};

	Parms.IsItemDisplayed = IsItemDisplayed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventoryPlayer.BP_InventoryPlayer_C.OnQuiverFormChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class AVQuiver*                   QuiverActor                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bEquipping                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InventoryPlayer_C::OnQuiverFormChanged(const class AVQuiver* QuiverActor, bool bEquipping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryPlayer_C", "OnQuiverFormChanged");

	Params::BP_InventoryPlayer_C_OnQuiverFormChanged Parms{};

	Parms.QuiverActor = QuiverActor;
	Parms.bEquipping = bEquipping;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventoryPlayer.BP_InventoryPlayer_C.OnShieldVisibilityChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class AActor*                     ShieldActor                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bEquipping                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InventoryPlayer_C::OnShieldVisibilityChanged(const class AActor* ShieldActor, bool bEquipping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryPlayer_C", "OnShieldVisibilityChanged");

	Params::BP_InventoryPlayer_C_OnShieldVisibilityChanged Parms{};

	Parms.ShieldActor = ShieldActor;
	Parms.bEquipping = bEquipping;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventoryPlayer.BP_InventoryPlayer_C.OnTorchActorChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class AActor*                     TorchActor                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bEquipping                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InventoryPlayer_C::OnTorchActorChanged(const class AActor* TorchActor, bool bEquipping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryPlayer_C", "OnTorchActorChanged");

	Params::BP_InventoryPlayer_C_OnTorchActorChanged Parms{};

	Parms.TorchActor = TorchActor;
	Parms.bEquipping = bEquipping;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventoryPlayer.BP_InventoryPlayer_C.OnWeaponFormChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class AVWeapon*                   WeaponActor                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_InventoryPlayer_C::OnWeaponFormChanged(const class AVWeapon* WeaponActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryPlayer_C", "OnWeaponFormChanged");

	Params::BP_InventoryPlayer_C_OnWeaponFormChanged Parms{};

	Parms.WeaponActor = WeaponActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventoryPlayer.BP_InventoryPlayer_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_InventoryPlayer_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryPlayer_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InventoryPlayer.BP_InventoryPlayer_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_InventoryPlayer_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryPlayer_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InventoryPlayer.BP_InventoryPlayer_C.UnbindOnCharacterPreviewChanged
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_InventoryPlayer_C::UnbindOnCharacterPreviewChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryPlayer_C", "UnbindOnCharacterPreviewChanged");

	UObject::ProcessEvent(Func, nullptr);
}

}

