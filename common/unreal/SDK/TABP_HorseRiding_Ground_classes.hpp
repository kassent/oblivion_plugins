#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TABP_HorseRiding_Ground

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "TABP_HorseRiding_Ground_structs.hpp"
#include "Engine_structs.hpp"
#include "Altar_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass TABP_HorseRiding_Ground.TABP_HorseRiding_Ground_C
// 0x0900 (0x0E00 - 0x0500)
class UTABP_HorseRiding_Ground_C final : public UVGroundLocomotionHorseRiderAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0500(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct TABP_HorseRiding_Ground::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;      // 0x0508(0x0038)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0540(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0548(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0550(0x0020)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive;              // 0x0570(0x00D0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x0640(0x0070)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x06B0(0x0010)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x06C0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0708(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0730(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0758(0x0080)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x07D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0800(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0828(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0850(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0878(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x08A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x08C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x08F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0918(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0940(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0968(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0990(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x09D8(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x09F8(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0A68(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x0A88(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0AF8(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x0B18(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0B88(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0BA8(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0C18(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0C38(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0C80(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0CA0(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0D68(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0DB0(0x0020)()
	double                                        K2Node_PropertyAccess_16;                          // 0x0DD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_PropertyAccess_12;                          // 0x0DD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_PropertyAccess_9;                           // 0x0DE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE4[0x4];                                      // 0x0DE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_PropertyAccess_8;                           // 0x0DE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_PropertyAccess_5;                           // 0x0DF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active_Value;                                      // 0x0DF8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void ExecuteUbergraph_TABP_HorseRiding_Ground(int32 EntryPoint);
	void HorseRidingLayer(struct FPoseLink* HorseRidingLayer_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TABP_HorseRiding_Ground_C">();
	}
	static class UTABP_HorseRiding_Ground_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTABP_HorseRiding_Ground_C>();
	}
};
static_assert(alignof(UTABP_HorseRiding_Ground_C) == 0x000010, "Wrong alignment on UTABP_HorseRiding_Ground_C");
static_assert(sizeof(UTABP_HorseRiding_Ground_C) == 0x000E00, "Wrong size on UTABP_HorseRiding_Ground_C");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, UberGraphFrame) == 0x000500, "Member 'UTABP_HorseRiding_Ground_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, __AnimBlueprintMutables) == 0x000508, "Member 'UTABP_HorseRiding_Ground_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimBlueprintExtension_PropertyAccess) == 0x000540, "Member 'UTABP_HorseRiding_Ground_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimBlueprintExtension_Base) == 0x000548, "Member 'UTABP_HorseRiding_Ground_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_Root_1) == 0x000550, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_ApplyMeshSpaceAdditive) == 0x000570, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_ApplyMeshSpaceAdditive' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_BlendSpacePlayer_4) == 0x000640, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_LocalRefPose) == 0x0006B0, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_BlendListByBool_1) == 0x0006C0, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_UseCachedPose_1) == 0x000708, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_UseCachedPose) == 0x000730, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_SaveCachedPose) == 0x000758, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_TransitionResult_10) == 0x0007D8, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_TransitionResult_9) == 0x000800, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_TransitionResult_8) == 0x000828, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_TransitionResult_7) == 0x000850, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_TransitionResult_6) == 0x000878, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_TransitionResult_5) == 0x0008A0, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_TransitionResult_4) == 0x0008C8, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_TransitionResult_3) == 0x0008F0, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_TransitionResult_2) == 0x000918, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_TransitionResult_1) == 0x000940, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_TransitionResult) == 0x000968, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_SequencePlayer_1) == 0x000990, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_StateResult_5) == 0x0009D8, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_BlendSpacePlayer_3) == 0x0009F8, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_StateResult_4) == 0x000A68, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_BlendSpacePlayer_2) == 0x000A88, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_StateResult_3) == 0x000AF8, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_BlendSpacePlayer_1) == 0x000B18, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_StateResult_2) == 0x000B88, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_BlendSpacePlayer) == 0x000BA8, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_StateResult_1) == 0x000C18, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_SequencePlayer) == 0x000C38, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_StateResult) == 0x000C80, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_StateMachine) == 0x000CA0, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_BlendListByBool) == 0x000D68, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, AnimGraphNode_Root) == 0x000DB0, "Member 'UTABP_HorseRiding_Ground_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, K2Node_PropertyAccess_16) == 0x000DD0, "Member 'UTABP_HorseRiding_Ground_C::K2Node_PropertyAccess_16' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, K2Node_PropertyAccess_12) == 0x000DD8, "Member 'UTABP_HorseRiding_Ground_C::K2Node_PropertyAccess_12' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, K2Node_PropertyAccess_9) == 0x000DE0, "Member 'UTABP_HorseRiding_Ground_C::K2Node_PropertyAccess_9' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, K2Node_PropertyAccess_8) == 0x000DE8, "Member 'UTABP_HorseRiding_Ground_C::K2Node_PropertyAccess_8' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, K2Node_PropertyAccess_5) == 0x000DF0, "Member 'UTABP_HorseRiding_Ground_C::K2Node_PropertyAccess_5' has a wrong offset!");
static_assert(offsetof(UTABP_HorseRiding_Ground_C, Active_Value) == 0x000DF8, "Member 'UTABP_HorseRiding_Ground_C::Active_Value' has a wrong offset!");

}

