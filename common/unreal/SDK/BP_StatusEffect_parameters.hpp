#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StatusEffect

#include "Basic.hpp"

#include "ENiagaraRegionCoordinateSpace_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BPE_CameraStatusEffect_Colors_structs.hpp"


namespace SDK::Params
{

// Function BP_StatusEffect.BP_StatusEffect_C.Activate Used Component
// 0x0003 (0x0003 - 0x0000)
struct BP_StatusEffect_C_Activate_Used_Component final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StatusEffect_C_Activate_Used_Component) == 0x000001, "Wrong alignment on BP_StatusEffect_C_Activate_Used_Component");
static_assert(sizeof(BP_StatusEffect_C_Activate_Used_Component) == 0x000003, "Wrong size on BP_StatusEffect_C_Activate_Used_Component");
static_assert(offsetof(BP_StatusEffect_C_Activate_Used_Component, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_StatusEffect_C_Activate_Used_Component::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Activate_Used_Component, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'BP_StatusEffect_C_Activate_Used_Component::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Activate_Used_Component, CallFunc_BooleanAND_ReturnValue_1) == 0x000002, "Member 'BP_StatusEffect_C_Activate_Used_Component::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_StatusEffect.BP_StatusEffect_C.Event PostProcess Activate
// 0x0001 (0x0001 - 0x0000)
struct BP_StatusEffect_C_Event_PostProcess_Activate final
{
public:
	bool                                          Is_Fading;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StatusEffect_C_Event_PostProcess_Activate) == 0x000001, "Wrong alignment on BP_StatusEffect_C_Event_PostProcess_Activate");
static_assert(sizeof(BP_StatusEffect_C_Event_PostProcess_Activate) == 0x000001, "Wrong size on BP_StatusEffect_C_Event_PostProcess_Activate");
static_assert(offsetof(BP_StatusEffect_C_Event_PostProcess_Activate, Is_Fading) == 0x000000, "Member 'BP_StatusEffect_C_Event_PostProcess_Activate::Is_Fading' has a wrong offset!");

// Function BP_StatusEffect.BP_StatusEffect_C.Event PostProcess Deactivate
// 0x0001 (0x0001 - 0x0000)
struct BP_StatusEffect_C_Event_PostProcess_Deactivate final
{
public:
	bool                                          Is_Fading;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StatusEffect_C_Event_PostProcess_Deactivate) == 0x000001, "Wrong alignment on BP_StatusEffect_C_Event_PostProcess_Deactivate");
static_assert(sizeof(BP_StatusEffect_C_Event_PostProcess_Deactivate) == 0x000001, "Wrong size on BP_StatusEffect_C_Event_PostProcess_Deactivate");
static_assert(offsetof(BP_StatusEffect_C_Event_PostProcess_Deactivate, Is_Fading) == 0x000000, "Member 'BP_StatusEffect_C_Event_PostProcess_Deactivate::Is_Fading' has a wrong offset!");

// Function BP_StatusEffect.BP_StatusEffect_C.ExecuteUbergraph_BP_StatusEffect
// 0x00D8 (0x00D8 - 0x0000)
struct BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsFirstPerson;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsTheOnlyVFX;                        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsMainEffect_2;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Is_Fading_1;                          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Is_Fading;                            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeSinceCreation_ReturnValue;     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_Event_SkeletalMeshComponent;                // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDoesBeginInFirstPerson_1;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Value_1;                              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   K2Node_Event_VFXColors_1;                          // 0x0038(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_Event_bDoesBeginAsTheOnlyVFX_1;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsEnchant_1;                         // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsMainEffect_1;                      // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsInInventory_1;                     // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_Event_StaticMeshComponent;                  // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDoesBeginInFirstPerson;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Value;                                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   K2Node_Event_VFXColors;                            // 0x0060(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_Event_bDoesBeginAsTheOnlyVFX;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsEnchant;                           // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsMainEffect;                        // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsInInventory;                       // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_PostProcess_Fading_Value_ImplicitCast; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast;         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast_1;       // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect) == 0x000008, "Wrong alignment on BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect");
static_assert(sizeof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect) == 0x0000D8, "Wrong size on BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, EntryPoint) == 0x000000, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, Temp_bool_Variable) == 0x000004, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, Temp_bool_Variable_1) == 0x000005, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, Temp_bool_Variable_2) == 0x000006, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, Temp_bool_Variable_3) == 0x000007, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_Event_bIsFirstPerson) == 0x000008, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_Event_bIsFirstPerson' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_Event_bIsTheOnlyVFX) == 0x000009, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_Event_bIsTheOnlyVFX' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_Event_bIsMainEffect_2) == 0x00000A, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_Event_bIsMainEffect_2' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_SwitchEnum_CmpSuccess) == 0x00000B, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_SwitchEnum_CmpSuccess_1) == 0x00000C, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_Event_Is_Fading_1) == 0x000018, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_Event_Is_Fading_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_Event_Is_Fading) == 0x000019, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_Event_Is_Fading' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, CallFunc_GetGameTimeSinceCreation_ReturnValue) == 0x00001C, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::CallFunc_GetGameTimeSinceCreation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_SwitchEnum_CmpSuccess_2) == 0x000020, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_Event_DeltaSeconds) == 0x000024, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_Event_SkeletalMeshComponent) == 0x000028, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_Event_SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_Event_bDoesBeginInFirstPerson_1) == 0x000030, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_Event_bDoesBeginInFirstPerson_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_Event_Value_1) == 0x000034, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_Event_Value_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_Event_VFXColors_1) == 0x000038, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_Event_VFXColors_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_Event_bDoesBeginAsTheOnlyVFX_1) == 0x000048, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_Event_bDoesBeginAsTheOnlyVFX_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_Event_bIsEnchant_1) == 0x000049, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_Event_bIsEnchant_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_Event_bIsMainEffect_1) == 0x00004A, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_Event_bIsMainEffect_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_Event_bIsInInventory_1) == 0x00004B, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_Event_bIsInInventory_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_Select_Default) == 0x00004C, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_Event_StaticMeshComponent) == 0x000050, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_Event_StaticMeshComponent' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_Event_bDoesBeginInFirstPerson) == 0x000058, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_Event_bDoesBeginInFirstPerson' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_Event_Value) == 0x00005C, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_Event_VFXColors) == 0x000060, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_Event_VFXColors' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_Event_bDoesBeginAsTheOnlyVFX) == 0x000070, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_Event_bDoesBeginAsTheOnlyVFX' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_Event_bIsEnchant) == 0x000071, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_Event_bIsEnchant' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_Event_bIsMainEffect) == 0x000072, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_Event_bIsMainEffect' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_Event_bIsInInventory) == 0x000073, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_Event_bIsInInventory' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, CallFunc_BooleanAND_ReturnValue) == 0x000074, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_Select_Default_1) == 0x000090, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, CallFunc_BooleanAND_ReturnValue_1) == 0x000091, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0000A4, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, K2Node_VariableSet_PostProcess_Fading_Value_ImplicitCast) == 0x0000A8, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::K2Node_VariableSet_PostProcess_Fading_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000B0, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0000B8, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0000C0, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, CallFunc_SetPlayRate_NewRate_ImplicitCast) == 0x0000C8, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::CallFunc_SetPlayRate_NewRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, CallFunc_SetPlayRate_NewRate_ImplicitCast_1) == 0x0000CC, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::CallFunc_SetPlayRate_NewRate_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect, CallFunc_Delay_Duration_ImplicitCast) == 0x0000D0, "Member 'BP_StatusEffect_C_ExecuteUbergraph_BP_StatusEffect::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function BP_StatusEffect.BP_StatusEffect_C.OnChangeFirstPerson
// 0x0001 (0x0001 - 0x0000)
struct BP_StatusEffect_C_OnChangeFirstPerson final
{
public:
	bool                                          bIsFirstPerson;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StatusEffect_C_OnChangeFirstPerson) == 0x000001, "Wrong alignment on BP_StatusEffect_C_OnChangeFirstPerson");
static_assert(sizeof(BP_StatusEffect_C_OnChangeFirstPerson) == 0x000001, "Wrong size on BP_StatusEffect_C_OnChangeFirstPerson");
static_assert(offsetof(BP_StatusEffect_C_OnChangeFirstPerson, bIsFirstPerson) == 0x000000, "Member 'BP_StatusEffect_C_OnChangeFirstPerson::bIsFirstPerson' has a wrong offset!");

// Function BP_StatusEffect.BP_StatusEffect_C.OnChangePerfomances
// 0x0002 (0x0002 - 0x0000)
struct BP_StatusEffect_C_OnChangePerfomances final
{
public:
	bool                                          bIsTheOnlyVFX;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsMainEffect;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StatusEffect_C_OnChangePerfomances) == 0x000001, "Wrong alignment on BP_StatusEffect_C_OnChangePerfomances");
static_assert(sizeof(BP_StatusEffect_C_OnChangePerfomances) == 0x000002, "Wrong size on BP_StatusEffect_C_OnChangePerfomances");
static_assert(offsetof(BP_StatusEffect_C_OnChangePerfomances, bIsTheOnlyVFX) == 0x000000, "Member 'BP_StatusEffect_C_OnChangePerfomances::bIsTheOnlyVFX' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_OnChangePerfomances, bIsMainEffect) == 0x000001, "Member 'BP_StatusEffect_C_OnChangePerfomances::bIsMainEffect' has a wrong offset!");

// Function BP_StatusEffect.BP_StatusEffect_C.OnStartPlaySkeletal
// 0x0028 (0x0028 - 0x0000)
struct BP_StatusEffect_C_OnStartPlaySkeletal final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoesBeginInFirstPerson;                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   VFXColors;                                         // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bDoesBeginAsTheOnlyVFX;                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEnchant;                                        // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsMainEffect;                                     // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInInventory;                                    // 0x0023(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StatusEffect_C_OnStartPlaySkeletal) == 0x000008, "Wrong alignment on BP_StatusEffect_C_OnStartPlaySkeletal");
static_assert(sizeof(BP_StatusEffect_C_OnStartPlaySkeletal) == 0x000028, "Wrong size on BP_StatusEffect_C_OnStartPlaySkeletal");
static_assert(offsetof(BP_StatusEffect_C_OnStartPlaySkeletal, SkeletalMeshComponent) == 0x000000, "Member 'BP_StatusEffect_C_OnStartPlaySkeletal::SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_OnStartPlaySkeletal, bDoesBeginInFirstPerson) == 0x000008, "Member 'BP_StatusEffect_C_OnStartPlaySkeletal::bDoesBeginInFirstPerson' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_OnStartPlaySkeletal, Value) == 0x00000C, "Member 'BP_StatusEffect_C_OnStartPlaySkeletal::Value' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_OnStartPlaySkeletal, VFXColors) == 0x000010, "Member 'BP_StatusEffect_C_OnStartPlaySkeletal::VFXColors' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_OnStartPlaySkeletal, bDoesBeginAsTheOnlyVFX) == 0x000020, "Member 'BP_StatusEffect_C_OnStartPlaySkeletal::bDoesBeginAsTheOnlyVFX' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_OnStartPlaySkeletal, bIsEnchant) == 0x000021, "Member 'BP_StatusEffect_C_OnStartPlaySkeletal::bIsEnchant' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_OnStartPlaySkeletal, bIsMainEffect) == 0x000022, "Member 'BP_StatusEffect_C_OnStartPlaySkeletal::bIsMainEffect' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_OnStartPlaySkeletal, bIsInInventory) == 0x000023, "Member 'BP_StatusEffect_C_OnStartPlaySkeletal::bIsInInventory' has a wrong offset!");

// Function BP_StatusEffect.BP_StatusEffect_C.OnStartPlayStatic
// 0x0028 (0x0028 - 0x0000)
struct BP_StatusEffect_C_OnStartPlayStatic final
{
public:
	class UStaticMeshComponent*                   StaticMeshComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoesBeginInFirstPerson;                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   VFXColors;                                         // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bDoesBeginAsTheOnlyVFX;                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEnchant;                                        // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsMainEffect;                                     // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInInventory;                                    // 0x0023(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StatusEffect_C_OnStartPlayStatic) == 0x000008, "Wrong alignment on BP_StatusEffect_C_OnStartPlayStatic");
static_assert(sizeof(BP_StatusEffect_C_OnStartPlayStatic) == 0x000028, "Wrong size on BP_StatusEffect_C_OnStartPlayStatic");
static_assert(offsetof(BP_StatusEffect_C_OnStartPlayStatic, StaticMeshComponent) == 0x000000, "Member 'BP_StatusEffect_C_OnStartPlayStatic::StaticMeshComponent' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_OnStartPlayStatic, bDoesBeginInFirstPerson) == 0x000008, "Member 'BP_StatusEffect_C_OnStartPlayStatic::bDoesBeginInFirstPerson' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_OnStartPlayStatic, Value) == 0x00000C, "Member 'BP_StatusEffect_C_OnStartPlayStatic::Value' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_OnStartPlayStatic, VFXColors) == 0x000010, "Member 'BP_StatusEffect_C_OnStartPlayStatic::VFXColors' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_OnStartPlayStatic, bDoesBeginAsTheOnlyVFX) == 0x000020, "Member 'BP_StatusEffect_C_OnStartPlayStatic::bDoesBeginAsTheOnlyVFX' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_OnStartPlayStatic, bIsEnchant) == 0x000021, "Member 'BP_StatusEffect_C_OnStartPlayStatic::bIsEnchant' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_OnStartPlayStatic, bIsMainEffect) == 0x000022, "Member 'BP_StatusEffect_C_OnStartPlayStatic::bIsMainEffect' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_OnStartPlayStatic, bIsInInventory) == 0x000023, "Member 'BP_StatusEffect_C_OnStartPlayStatic::bIsInInventory' has a wrong offset!");

// Function BP_StatusEffect.BP_StatusEffect_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_StatusEffect_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StatusEffect_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_StatusEffect_C_ReceiveTick");
static_assert(sizeof(BP_StatusEffect_C_ReceiveTick) == 0x000004, "Wrong size on BP_StatusEffect_C_ReceiveTick");
static_assert(offsetof(BP_StatusEffect_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_StatusEffect_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_StatusEffect.BP_StatusEffect_C.Send Color Values to PostProcess Material
// 0x0108 (0x0108 - 0x0000)
struct BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_CameraStatusEffect_Colors                Temp_byte_Variable;                                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_10;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_12;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_13;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_14;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_15;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_16;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_17;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_18;                             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_19;                             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_20;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_21;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_22;                             // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_23;                             // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_CameraStatusEffect_Colors                Temp_byte_Variable_1;                              // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Array_Get_Item;                           // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_CameraStatusEffect_Colors                CallFunc_Array_Get_Item_1;                         // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material) == 0x000004, "Wrong alignment on BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material");
static_assert(sizeof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material) == 0x000108, "Wrong size on BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Condition) == 0x000000, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Condition' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_name_Variable) == 0x000004, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_name_Variable_1) == 0x00000C, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_name_Variable_2) == 0x000014, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_name_Variable_3) == 0x00001C, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_name_Variable_4) == 0x000024, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_name_Variable_5) == 0x00002C, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_name_Variable_6) == 0x000034, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_name_Variable_7) == 0x00003C, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_name_Variable_8) == 0x000044, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_name_Variable_9) == 0x00004C, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_byte_Variable) == 0x000054, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_name_Variable_10) == 0x000058, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_name_Variable_11) == 0x000060, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_name_Variable_12) == 0x000068, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_name_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_name_Variable_13) == 0x000070, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_name_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_name_Variable_14) == 0x000078, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_name_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_name_Variable_15) == 0x000080, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_name_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_name_Variable_16) == 0x000088, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_name_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_name_Variable_17) == 0x000090, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_name_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_name_Variable_18) == 0x000098, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_name_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_name_Variable_19) == 0x0000A0, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_name_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_name_Variable_20) == 0x0000A8, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_name_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_name_Variable_21) == 0x0000B0, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_name_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_int_Array_Index_Variable) == 0x0000B8, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_name_Variable_22) == 0x0000C4, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_name_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_name_Variable_23) == 0x0000CC, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_name_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, Temp_byte_Variable_1) == 0x0000D4, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, CallFunc_Array_Get_Item_1) == 0x0000E8, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, K2Node_Select_Default) == 0x0000EC, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, K2Node_Select_Default_1) == 0x0000F4, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, K2Node_SwitchEnum_CmpSuccess) == 0x0000FC, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material, CallFunc_Less_IntInt_ReturnValue) == 0x000104, "Member 'BP_StatusEffect_C_Send_Color_Values_to_PostProcess_Material::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_StatusEffect.BP_StatusEffect_C.Send Event Data to Niagara
// 0x0008 (0x0008 - 0x0000)
struct BP_StatusEffect_C_Send_Event_Data_to_Niagara final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetVariableFloat_InValue_ImplicitCast;    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StatusEffect_C_Send_Event_Data_to_Niagara) == 0x000004, "Wrong alignment on BP_StatusEffect_C_Send_Event_Data_to_Niagara");
static_assert(sizeof(BP_StatusEffect_C_Send_Event_Data_to_Niagara) == 0x000008, "Wrong size on BP_StatusEffect_C_Send_Event_Data_to_Niagara");
static_assert(offsetof(BP_StatusEffect_C_Send_Event_Data_to_Niagara, Condition) == 0x000000, "Member 'BP_StatusEffect_C_Send_Event_Data_to_Niagara::Condition' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Send_Event_Data_to_Niagara, CallFunc_SetVariableFloat_InValue_ImplicitCast) == 0x000004, "Member 'BP_StatusEffect_C_Send_Event_Data_to_Niagara::CallFunc_SetVariableFloat_InValue_ImplicitCast' has a wrong offset!");

// Function BP_StatusEffect.BP_StatusEffect_C.Send New "Is First Person" Value to Niagara
// 0x0001 (0x0001 - 0x0000)
struct BP_StatusEffect_C_Send_New__Is_First_Person__Value_to_Niagara final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StatusEffect_C_Send_New__Is_First_Person__Value_to_Niagara) == 0x000001, "Wrong alignment on BP_StatusEffect_C_Send_New__Is_First_Person__Value_to_Niagara");
static_assert(sizeof(BP_StatusEffect_C_Send_New__Is_First_Person__Value_to_Niagara) == 0x000001, "Wrong size on BP_StatusEffect_C_Send_New__Is_First_Person__Value_to_Niagara");
static_assert(offsetof(BP_StatusEffect_C_Send_New__Is_First_Person__Value_to_Niagara, Condition) == 0x000000, "Member 'BP_StatusEffect_C_Send_New__Is_First_Person__Value_to_Niagara::Condition' has a wrong offset!");

// Function BP_StatusEffect.BP_StatusEffect_C.Send New "Is Only Status" Value to Niagara
// 0x0001 (0x0001 - 0x0000)
struct BP_StatusEffect_C_Send_New__Is_Only_Status__Value_to_Niagara final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StatusEffect_C_Send_New__Is_Only_Status__Value_to_Niagara) == 0x000001, "Wrong alignment on BP_StatusEffect_C_Send_New__Is_Only_Status__Value_to_Niagara");
static_assert(sizeof(BP_StatusEffect_C_Send_New__Is_Only_Status__Value_to_Niagara) == 0x000001, "Wrong size on BP_StatusEffect_C_Send_New__Is_Only_Status__Value_to_Niagara");
static_assert(offsetof(BP_StatusEffect_C_Send_New__Is_Only_Status__Value_to_Niagara, Condition) == 0x000000, "Member 'BP_StatusEffect_C_Send_New__Is_Only_Status__Value_to_Niagara::Condition' has a wrong offset!");

// Function BP_StatusEffect.BP_StatusEffect_C.Store Form Data
// 0x0260 (0x0260 - 0x0000)
struct BP_StatusEffect_C_Store_Form_Data final
{
public:
	bool                                          Event_Is_Skeletal_Event;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 Event_Skeletal_Mesh_Component;                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Event_Static_Mesh_Component;                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Event_Is_Begin_in_First_Person;                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Event_Value;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   Event_Colors;                                      // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Event_Beggin_as_Only_VFX;                          // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Event_Is_Enchant;                                  // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Event_Is_Main_VFX;                                 // 0x003A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENiagaraRegionCoordinateSpace                 Temp_byte_Variable;                                // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENiagaraRegionCoordinateSpace                 Temp_byte_Variable_1;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0040(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENiagaraRegionCoordinateSpace                 Temp_byte_Variable_2;                              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0xF];                                       // 0x00A1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x00B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Player_VFX_Socket_Location_Location;  // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_158[0x8];                                      // 0x0158(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_2;     // 0x0160(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue_1;   // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Character_VFX_Socket_Location_Location; // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_1;                           // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue_2;   // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_2;                           // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StatusEffect_C_Store_Form_Data) == 0x000010, "Wrong alignment on BP_StatusEffect_C_Store_Form_Data");
static_assert(sizeof(BP_StatusEffect_C_Store_Form_Data) == 0x000260, "Wrong size on BP_StatusEffect_C_Store_Form_Data");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, Event_Is_Skeletal_Event) == 0x000000, "Member 'BP_StatusEffect_C_Store_Form_Data::Event_Is_Skeletal_Event' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, Event_Skeletal_Mesh_Component) == 0x000008, "Member 'BP_StatusEffect_C_Store_Form_Data::Event_Skeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, Event_Static_Mesh_Component) == 0x000010, "Member 'BP_StatusEffect_C_Store_Form_Data::Event_Static_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, Event_Is_Begin_in_First_Person) == 0x000018, "Member 'BP_StatusEffect_C_Store_Form_Data::Event_Is_Begin_in_First_Person' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, Event_Value) == 0x000020, "Member 'BP_StatusEffect_C_Store_Form_Data::Event_Value' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, Event_Colors) == 0x000028, "Member 'BP_StatusEffect_C_Store_Form_Data::Event_Colors' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, Event_Beggin_as_Only_VFX) == 0x000038, "Member 'BP_StatusEffect_C_Store_Form_Data::Event_Beggin_as_Only_VFX' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, Event_Is_Enchant) == 0x000039, "Member 'BP_StatusEffect_C_Store_Form_Data::Event_Is_Enchant' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, Event_Is_Main_VFX) == 0x00003A, "Member 'BP_StatusEffect_C_Store_Form_Data::Event_Is_Main_VFX' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, Temp_byte_Variable) == 0x00003B, "Member 'BP_StatusEffect_C_Store_Form_Data::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, Temp_byte_Variable_1) == 0x00003C, "Member 'BP_StatusEffect_C_Store_Form_Data::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000040, "Member 'BP_StatusEffect_C_Store_Form_Data::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, Temp_byte_Variable_2) == 0x0000A0, "Member 'BP_StatusEffect_C_Store_Form_Data::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x0000B0, "Member 'BP_StatusEffect_C_Store_Form_Data::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, CallFunc_Get_Player_VFX_Socket_Location_Location) == 0x000110, "Member 'BP_StatusEffect_C_Store_Form_Data::CallFunc_Get_Player_VFX_Socket_Location_Location' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, CallFunc_InverseTransformLocation_ReturnValue) == 0x000128, "Member 'BP_StatusEffect_C_Store_Form_Data::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, K2Node_Select_Default) == 0x000140, "Member 'BP_StatusEffect_C_Store_Form_Data::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, CallFunc_K2_GetComponentToWorld_ReturnValue_2) == 0x000160, "Member 'BP_StatusEffect_C_Store_Form_Data::CallFunc_K2_GetComponentToWorld_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, CallFunc_GetComponentByClass_ReturnValue) == 0x0001C0, "Member 'BP_StatusEffect_C_Store_Form_Data::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0001C8, "Member 'BP_StatusEffect_C_Store_Form_Data::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, CallFunc_InverseTransformLocation_ReturnValue_1) == 0x0001E0, "Member 'BP_StatusEffect_C_Store_Form_Data::CallFunc_InverseTransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, CallFunc_Get_Character_VFX_Socket_Location_Location) == 0x0001F8, "Member 'BP_StatusEffect_C_Store_Form_Data::CallFunc_Get_Character_VFX_Socket_Location_Location' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, K2Node_Select_Default_1) == 0x000210, "Member 'BP_StatusEffect_C_Store_Form_Data::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, CallFunc_InverseTransformLocation_ReturnValue_2) == 0x000228, "Member 'BP_StatusEffect_C_Store_Form_Data::CallFunc_InverseTransformLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Store_Form_Data, K2Node_Select_Default_2) == 0x000240, "Member 'BP_StatusEffect_C_Store_Form_Data::K2Node_Select_Default_2' has a wrong offset!");

// Function BP_StatusEffect.BP_StatusEffect_C. Off First Person PostProcess
// 0x0004 (0x0004 - 0x0000)
struct BP_StatusEffect_C__Off_First_Person_PostProcess final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StatusEffect_C__Off_First_Person_PostProcess) == 0x000001, "Wrong alignment on BP_StatusEffect_C__Off_First_Person_PostProcess");
static_assert(sizeof(BP_StatusEffect_C__Off_First_Person_PostProcess) == 0x000004, "Wrong size on BP_StatusEffect_C__Off_First_Person_PostProcess");
static_assert(offsetof(BP_StatusEffect_C__Off_First_Person_PostProcess, Condition) == 0x000000, "Member 'BP_StatusEffect_C__Off_First_Person_PostProcess::Condition' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C__Off_First_Person_PostProcess, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_StatusEffect_C__Off_First_Person_PostProcess::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C__Off_First_Person_PostProcess, K2Node_SwitchEnum_CmpSuccess_1) == 0x000002, "Member 'BP_StatusEffect_C__Off_First_Person_PostProcess::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C__Off_First_Person_PostProcess, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_StatusEffect_C__Off_First_Person_PostProcess::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_StatusEffect.BP_StatusEffect_C.Update Target Position for Niagara
// 0x0200 (0x0200 - 0x0000)
struct BP_StatusEffect_C_Update_Target_Position_for_Niagara final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENiagaraRegionCoordinateSpace                 Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENiagaraRegionCoordinateSpace                 Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0xD];                                        // 0x0003(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0070(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Player_VFX_Socket_Location_Location;  // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_118[0x8];                                      // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_2;     // 0x0120(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Character_VFX_Socket_Location_Location; // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue_1;   // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_1;                           // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue_2;   // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StatusEffect_C_Update_Target_Position_for_Niagara) == 0x000010, "Wrong alignment on BP_StatusEffect_C_Update_Target_Position_for_Niagara");
static_assert(sizeof(BP_StatusEffect_C_Update_Target_Position_for_Niagara) == 0x000200, "Wrong size on BP_StatusEffect_C_Update_Target_Position_for_Niagara");
static_assert(offsetof(BP_StatusEffect_C_Update_Target_Position_for_Niagara, Condition) == 0x000000, "Member 'BP_StatusEffect_C_Update_Target_Position_for_Niagara::Condition' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Update_Target_Position_for_Niagara, Temp_byte_Variable) == 0x000001, "Member 'BP_StatusEffect_C_Update_Target_Position_for_Niagara::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Update_Target_Position_for_Niagara, Temp_byte_Variable_1) == 0x000002, "Member 'BP_StatusEffect_C_Update_Target_Position_for_Niagara::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Update_Target_Position_for_Niagara, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'BP_StatusEffect_C_Update_Target_Position_for_Niagara::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Update_Target_Position_for_Niagara, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000070, "Member 'BP_StatusEffect_C_Update_Target_Position_for_Niagara::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Update_Target_Position_for_Niagara, CallFunc_Get_Player_VFX_Socket_Location_Location) == 0x0000D0, "Member 'BP_StatusEffect_C_Update_Target_Position_for_Niagara::CallFunc_Get_Player_VFX_Socket_Location_Location' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Update_Target_Position_for_Niagara, CallFunc_InverseTransformLocation_ReturnValue) == 0x0000E8, "Member 'BP_StatusEffect_C_Update_Target_Position_for_Niagara::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Update_Target_Position_for_Niagara, K2Node_Select_Default) == 0x000100, "Member 'BP_StatusEffect_C_Update_Target_Position_for_Niagara::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Update_Target_Position_for_Niagara, CallFunc_K2_GetComponentToWorld_ReturnValue_2) == 0x000120, "Member 'BP_StatusEffect_C_Update_Target_Position_for_Niagara::CallFunc_K2_GetComponentToWorld_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Update_Target_Position_for_Niagara, CallFunc_Get_Character_VFX_Socket_Location_Location) == 0x000180, "Member 'BP_StatusEffect_C_Update_Target_Position_for_Niagara::CallFunc_Get_Character_VFX_Socket_Location_Location' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Update_Target_Position_for_Niagara, CallFunc_InverseTransformLocation_ReturnValue_1) == 0x000198, "Member 'BP_StatusEffect_C_Update_Target_Position_for_Niagara::CallFunc_InverseTransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Update_Target_Position_for_Niagara, K2Node_Select_Default_1) == 0x0001B0, "Member 'BP_StatusEffect_C_Update_Target_Position_for_Niagara::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Update_Target_Position_for_Niagara, CallFunc_GetComponentByClass_ReturnValue) == 0x0001C8, "Member 'BP_StatusEffect_C_Update_Target_Position_for_Niagara::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Update_Target_Position_for_Niagara, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0001D0, "Member 'BP_StatusEffect_C_Update_Target_Position_for_Niagara::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_Update_Target_Position_for_Niagara, CallFunc_InverseTransformLocation_ReturnValue_2) == 0x0001E8, "Member 'BP_StatusEffect_C_Update_Target_Position_for_Niagara::CallFunc_InverseTransformLocation_ReturnValue_2' has a wrong offset!");

// Function BP_StatusEffect.BP_StatusEffect_C.UserConstructionScript
// 0x0003 (0x0003 - 0x0000)
struct BP_StatusEffect_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StatusEffect_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_StatusEffect_C_UserConstructionScript");
static_assert(sizeof(BP_StatusEffect_C_UserConstructionScript) == 0x000003, "Wrong size on BP_StatusEffect_C_UserConstructionScript");
static_assert(offsetof(BP_StatusEffect_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_StatusEffect_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_StatusEffect_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StatusEffect_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_2) == 0x000002, "Member 'BP_StatusEffect_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

}

