#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AST_CharacterActionPowerAttack

#include "Basic.hpp"

#include "Altar_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function AST_CharacterActionPowerAttack.AST_CharacterActionPowerAttack_C.ExecuteUbergraph_AST_CharacterActionPowerAttack
// 0x0040 (0x0040 - 0x0000)
struct AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVActionType                                  CallFunc_GetPowerAttackType_PowerAttackType;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UVActorBehaviorBase*                    CallFunc_StartBehaviorFromTag_StartedBehavior;     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UActionStateStartBehavior*              CallFunc_StartBehaviorFromTag_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBehavior_AttackBehaviorBase_C*         K2Node_DynamicCast_AsBehavior_Attack_Behavior_Base; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EVActorBehaviorState                          CallFunc_GetState_ReturnValue;                     // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack) == 0x000008, "Wrong alignment on AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack");
static_assert(sizeof(AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack) == 0x000040, "Wrong size on AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack, EntryPoint) == 0x000000, "Member 'AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack::EntryPoint' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack, CallFunc_GetPowerAttackType_PowerAttackType) == 0x000004, "Member 'AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack::CallFunc_GetPowerAttackType_PowerAttackType' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack, CallFunc_StartBehaviorFromTag_StartedBehavior) == 0x000008, "Member 'AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack::CallFunc_StartBehaviorFromTag_StartedBehavior' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack, CallFunc_StartBehaviorFromTag_ReturnValue) == 0x000010, "Member 'AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack::CallFunc_StartBehaviorFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack, K2Node_Event_DeltaTime) == 0x000018, "Member 'AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack, K2Node_DynamicCast_AsBehavior_Attack_Behavior_Base) == 0x000020, "Member 'AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack::K2Node_DynamicCast_AsBehavior_Attack_Behavior_Base' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack, CallFunc_HasTag_ReturnValue) == 0x000029, "Member 'AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack, CallFunc_GetState_ReturnValue) == 0x00003C, "Member 'AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack::CallFunc_GetState_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003D, "Member 'AST_CharacterActionPowerAttack_C_ExecuteUbergraph_AST_CharacterActionPowerAttack::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function AST_CharacterActionPowerAttack.AST_CharacterActionPowerAttack_C.GetPowerAttackType
// 0x0008 (0x0008 - 0x0000)
struct AST_CharacterActionPowerAttack_C_GetPowerAttackType final
{
public:
	EVActionType                                  PowerAttackType;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVMoveDirection                               CallFunc_GetMovementDirection_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue_1;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue_2;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue_3;                     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerCharacter_ReturnValue;            // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AST_CharacterActionPowerAttack_C_GetPowerAttackType) == 0x000001, "Wrong alignment on AST_CharacterActionPowerAttack_C_GetPowerAttackType");
static_assert(sizeof(AST_CharacterActionPowerAttack_C_GetPowerAttackType) == 0x000008, "Wrong size on AST_CharacterActionPowerAttack_C_GetPowerAttackType");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_GetPowerAttackType, PowerAttackType) == 0x000000, "Member 'AST_CharacterActionPowerAttack_C_GetPowerAttackType::PowerAttackType' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_GetPowerAttackType, CallFunc_GetMovementDirection_ReturnValue) == 0x000001, "Member 'AST_CharacterActionPowerAttack_C_GetPowerAttackType::CallFunc_GetMovementDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_GetPowerAttackType, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'AST_CharacterActionPowerAttack_C_GetPowerAttackType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_GetPowerAttackType, CallFunc_HasTag_ReturnValue) == 0x000003, "Member 'AST_CharacterActionPowerAttack_C_GetPowerAttackType::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_GetPowerAttackType, CallFunc_HasTag_ReturnValue_1) == 0x000004, "Member 'AST_CharacterActionPowerAttack_C_GetPowerAttackType::CallFunc_HasTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_GetPowerAttackType, CallFunc_HasTag_ReturnValue_2) == 0x000005, "Member 'AST_CharacterActionPowerAttack_C_GetPowerAttackType::CallFunc_HasTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_GetPowerAttackType, CallFunc_HasTag_ReturnValue_3) == 0x000006, "Member 'AST_CharacterActionPowerAttack_C_GetPowerAttackType::CallFunc_HasTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_GetPowerAttackType, CallFunc_IsPlayerCharacter_ReturnValue) == 0x000007, "Member 'AST_CharacterActionPowerAttack_C_GetPowerAttackType::CallFunc_IsPlayerCharacter_ReturnValue' has a wrong offset!");

// Function AST_CharacterActionPowerAttack.AST_CharacterActionPowerAttack_C.OnStateUpdate
// 0x0004 (0x0004 - 0x0000)
struct AST_CharacterActionPowerAttack_C_OnStateUpdate final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AST_CharacterActionPowerAttack_C_OnStateUpdate) == 0x000004, "Wrong alignment on AST_CharacterActionPowerAttack_C_OnStateUpdate");
static_assert(sizeof(AST_CharacterActionPowerAttack_C_OnStateUpdate) == 0x000004, "Wrong size on AST_CharacterActionPowerAttack_C_OnStateUpdate");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_OnStateUpdate, DeltaTime) == 0x000000, "Member 'AST_CharacterActionPowerAttack_C_OnStateUpdate::DeltaTime' has a wrong offset!");

// Function AST_CharacterActionPowerAttack.AST_CharacterActionPowerAttack_C.UpdatePowerAttackTag
// 0x0010 (0x0010 - 0x0000)
struct AST_CharacterActionPowerAttack_C_UpdatePowerAttackTag final
{
public:
	bool                                          CallFunc_HasGameplayTag_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_FindFirstGameplayTagMatching_ReturnValue; // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AST_CharacterActionPowerAttack_C_UpdatePowerAttackTag) == 0x000004, "Wrong alignment on AST_CharacterActionPowerAttack_C_UpdatePowerAttackTag");
static_assert(sizeof(AST_CharacterActionPowerAttack_C_UpdatePowerAttackTag) == 0x000010, "Wrong size on AST_CharacterActionPowerAttack_C_UpdatePowerAttackTag");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_UpdatePowerAttackTag, CallFunc_HasGameplayTag_ReturnValue) == 0x000000, "Member 'AST_CharacterActionPowerAttack_C_UpdatePowerAttackTag::CallFunc_HasGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_UpdatePowerAttackTag, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'AST_CharacterActionPowerAttack_C_UpdatePowerAttackTag::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_UpdatePowerAttackTag, CallFunc_FindFirstGameplayTagMatching_ReturnValue) == 0x000004, "Member 'AST_CharacterActionPowerAttack_C_UpdatePowerAttackTag::CallFunc_FindFirstGameplayTagMatching_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionPowerAttack_C_UpdatePowerAttackTag, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x00000C, "Member 'AST_CharacterActionPowerAttack_C_UpdatePowerAttackTag::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

}

