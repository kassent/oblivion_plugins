#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AltarBI

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class AltarBI.AltarBISubsystem
// 0x0080 (0x00B0 - 0x0030)
class UAltarBISubsystem final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bAlterBIEnabledInBuild;                            // 0x0038(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        AlterBIRetryDelayMS;                               // 0x003C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32                                        AlterBIEventBufferSize;                            // 0x0040(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32                                        AlterBIResetSessionSuspendTimeSec;                 // 0x0044(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_48[0x60];                                      // 0x0048(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	class UBIEventManager*                        m_biEventManager;                                  // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AltarBISubsystem">();
	}
	static class UAltarBISubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAltarBISubsystem>();
	}
};
static_assert(alignof(UAltarBISubsystem) == 0x000008, "Wrong alignment on UAltarBISubsystem");
static_assert(sizeof(UAltarBISubsystem) == 0x0000B0, "Wrong size on UAltarBISubsystem");
static_assert(offsetof(UAltarBISubsystem, bAlterBIEnabledInBuild) == 0x000038, "Member 'UAltarBISubsystem::bAlterBIEnabledInBuild' has a wrong offset!");
static_assert(offsetof(UAltarBISubsystem, AlterBIRetryDelayMS) == 0x00003C, "Member 'UAltarBISubsystem::AlterBIRetryDelayMS' has a wrong offset!");
static_assert(offsetof(UAltarBISubsystem, AlterBIEventBufferSize) == 0x000040, "Member 'UAltarBISubsystem::AlterBIEventBufferSize' has a wrong offset!");
static_assert(offsetof(UAltarBISubsystem, AlterBIResetSessionSuspendTimeSec) == 0x000044, "Member 'UAltarBISubsystem::AlterBIResetSessionSuspendTimeSec' has a wrong offset!");
static_assert(offsetof(UAltarBISubsystem, m_biEventManager) == 0x0000A8, "Member 'UAltarBISubsystem::m_biEventManager' has a wrong offset!");

// Class AltarBI.BIEventManager
// 0x0168 (0x0190 - 0x0028)
class alignas(0x10) UBIEventManager final : public UObject
{
public:
	uint32                                        BIEventBulkSendRateMS;                             // 0x0028(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32                                        MaxNumberOfBulkBIEventsCallsPerFrame;              // 0x002C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32                                        ForceWaitCallbackTimeoutMS;                        // 0x0030(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_34[0x9C];                                      // 0x0034(0x009C)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IVAltarBISaveIdentificationProvider> SaveIdentificationProvider;          // 0x00D0(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E0[0xB0];                                      // 0x00E0(0x00B0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BIEventManager">();
	}
	static class UBIEventManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBIEventManager>();
	}
};
static_assert(alignof(UBIEventManager) == 0x000010, "Wrong alignment on UBIEventManager");
static_assert(sizeof(UBIEventManager) == 0x000190, "Wrong size on UBIEventManager");
static_assert(offsetof(UBIEventManager, BIEventBulkSendRateMS) == 0x000028, "Member 'UBIEventManager::BIEventBulkSendRateMS' has a wrong offset!");
static_assert(offsetof(UBIEventManager, MaxNumberOfBulkBIEventsCallsPerFrame) == 0x00002C, "Member 'UBIEventManager::MaxNumberOfBulkBIEventsCallsPerFrame' has a wrong offset!");
static_assert(offsetof(UBIEventManager, ForceWaitCallbackTimeoutMS) == 0x000030, "Member 'UBIEventManager::ForceWaitCallbackTimeoutMS' has a wrong offset!");
static_assert(offsetof(UBIEventManager, SaveIdentificationProvider) == 0x0000D0, "Member 'UBIEventManager::SaveIdentificationProvider' has a wrong offset!");

// Class AltarBI.VAltarBISaveIdentificationProvider
// 0x0000 (0x0000 - 0x0000)
class IVAltarBISaveIdentificationProvider final
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VAltarBISaveIdentificationProvider">();
	}
	static class IVAltarBISaveIdentificationProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<IVAltarBISaveIdentificationProvider>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
static_assert(alignof(IVAltarBISaveIdentificationProvider) == 0x000001, "Wrong alignment on IVAltarBISaveIdentificationProvider");
static_assert(sizeof(IVAltarBISaveIdentificationProvider) == 0x000001, "Wrong size on IVAltarBISaveIdentificationProvider");

}

