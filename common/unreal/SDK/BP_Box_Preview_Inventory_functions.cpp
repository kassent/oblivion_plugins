#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Box_Preview_Inventory

#include "Basic.hpp"

#include "BP_Box_Preview_Inventory_classes.hpp"
#include "BP_Box_Preview_Inventory_parameters.hpp"


namespace SDK
{

// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.EnableWater
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Box_Preview_Inventory_C::EnableWater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "EnableWater");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.DisableWater
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Box_Preview_Inventory_C::DisableWater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "DisableWater");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.UpdateBackgroundDrawSize_FromCameraComponent
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Box_Preview_Inventory_C::UpdateBackgroundDrawSize_FromCameraComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "UpdateBackgroundDrawSize_FromCameraComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.GetFrustumBoundsAtLocation_FromCameraComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   InLocation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   InNormal                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   InCameraLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         TopLeftBounds                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         TopRightBounds                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         BottomLeftBounds                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         BottomRightBounds                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::GetFrustumBoundsAtLocation_FromCameraComponent(const struct FVector& InLocation, const struct FVector& InNormal, const struct FVector& InCameraLocation, struct FVector* TopLeftBounds, struct FVector* TopRightBounds, struct FVector* BottomLeftBounds, struct FVector* BottomRightBounds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "GetFrustumBoundsAtLocation_FromCameraComponent");

	Params::BP_Box_Preview_Inventory_C_GetFrustumBoundsAtLocation_FromCameraComponent Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InNormal = std::move(InNormal);
	Parms.InCameraLocation = std::move(InCameraLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (TopLeftBounds != nullptr)
		*TopLeftBounds = std::move(Parms.TopLeftBounds);

	if (TopRightBounds != nullptr)
		*TopRightBounds = std::move(Parms.TopRightBounds);

	if (BottomLeftBounds != nullptr)
		*BottomLeftBounds = std::move(Parms.BottomLeftBounds);

	if (BottomRightBounds != nullptr)
		*BottomRightBounds = std::move(Parms.BottomRightBounds);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.GetFrustumEnd_FromCameraComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector2D&                 InScreenPosition                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InMaximumDistance                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_Box_Preview_Inventory_C::GetFrustumEnd_FromCameraComponent(const struct FVector2D& InScreenPosition, double InMaximumDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "GetFrustumEnd_FromCameraComponent");

	Params::BP_Box_Preview_Inventory_C_GetFrustumEnd_FromCameraComponent Parms{};

	Parms.InScreenPosition = std::move(InScreenPosition);
	Parms.InMaximumDistance = InMaximumDistance;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.RequestBackgroundImageCapture
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Box_Preview_Inventory_C::RequestBackgroundImageCapture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "RequestBackgroundImageCapture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.UpdateBackgroundDrawSize
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Box_Preview_Inventory_C::UpdateBackgroundDrawSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "UpdateBackgroundDrawSize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.TrySetCloudMaxReprojectionDistance
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Box_Preview_Inventory_C::TrySetCloudMaxReprojectionDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "TrySetCloudMaxReprojectionDistance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.ResetCloudMaxReprojectionDistance
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Box_Preview_Inventory_C::ResetCloudMaxReprojectionDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "ResetCloudMaxReprojectionDistance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.SetGlobalColorGradingActive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InColorGradingActive                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::SetGlobalColorGradingActive(bool InColorGradingActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "SetGlobalColorGradingActive");

	Params::BP_Box_Preview_Inventory_C_SetGlobalColorGradingActive Parms{};

	Parms.InColorGradingActive = InColorGradingActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.TryResetUnboundGlobalPostProcess
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Box_Preview_Inventory_C::TryResetUnboundGlobalPostProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "TryResetUnboundGlobalPostProcess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.TryUnboundGlobalPostProcess
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Box_Preview_Inventory_C::TryUnboundGlobalPostProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "TryUnboundGlobalPostProcess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.EnableFog
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Box_Preview_Inventory_C::EnableFog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "EnableFog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.DisableFog
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Box_Preview_Inventory_C::DisableFog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "DisableFog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.SetDitheringForMeshComponent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   InMeshComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  InDitherValue                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::SetDitheringForMeshComponent(class UMeshComponent* InMeshComponent, double InDitherValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "SetDitheringForMeshComponent");

	Params::BP_Box_Preview_Inventory_C_SetDitheringForMeshComponent Parms{};

	Parms.InMeshComponent = InMeshComponent;
	Parms.InDitherValue = InDitherValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.SetDitheringForActor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InActor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  InDitherValue                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::SetDitheringForActor(class AActor* InActor, double InDitherValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "SetDitheringForActor");

	Params::BP_Box_Preview_Inventory_C_SetDitheringForActor Parms{};

	Parms.InActor = InActor;
	Parms.InDitherValue = InDitherValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.UpdateDithering
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InCurrentDither                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::UpdateDithering(double InCurrentDither)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "UpdateDithering");

	Params::BP_Box_Preview_Inventory_C_UpdateDithering Parms{};

	Parms.InCurrentDither = InCurrentDither;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.ForceRefreshItemBodyParts
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AVInventoryPlayerCharacter*       Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::ForceRefreshItemBodyParts(class AVInventoryPlayerCharacter* Inventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "ForceRefreshItemBodyParts");

	Params::BP_Box_Preview_Inventory_C_ForceRefreshItemBodyParts Parms{};

	Parms.Inventory = Inventory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.SetDialoguePostProcessAsUnbound
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldBeUnbound                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::SetDialoguePostProcessAsUnbound(bool bShouldBeUnbound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "SetDialoguePostProcessAsUnbound");

	Params::BP_Box_Preview_Inventory_C_SetDialoguePostProcessAsUnbound Parms{};

	Parms.bShouldBeUnbound = bShouldBeUnbound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.GetFrustumBoundsAtLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   InLocation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   InNormal                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   InCameraLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         TopLeftBounds                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         TopRightBounds                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         BottomLeftBounds                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         BottomRightBounds                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::GetFrustumBoundsAtLocation(const struct FVector& InLocation, const struct FVector& InNormal, const struct FVector& InCameraLocation, struct FVector* TopLeftBounds, struct FVector* TopRightBounds, struct FVector* BottomLeftBounds, struct FVector* BottomRightBounds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "GetFrustumBoundsAtLocation");

	Params::BP_Box_Preview_Inventory_C_GetFrustumBoundsAtLocation Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InNormal = std::move(InNormal);
	Parms.InCameraLocation = std::move(InCameraLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (TopLeftBounds != nullptr)
		*TopLeftBounds = std::move(Parms.TopLeftBounds);

	if (TopRightBounds != nullptr)
		*TopRightBounds = std::move(Parms.TopRightBounds);

	if (BottomLeftBounds != nullptr)
		*BottomLeftBounds = std::move(Parms.BottomLeftBounds);

	if (BottomRightBounds != nullptr)
		*BottomRightBounds = std::move(Parms.BottomRightBounds);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.GetFrustumBounds
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   PlaneOrigin                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   PlaneNormal                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   InCameraLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   InTopLeftFrustumEnd                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   InTopRightFrustumEnd                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   InBottomLeftFrustumEnd                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   InBottomRightFrustumEnd                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         TopLeftBounds                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         TopRightBounds                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         BottomLeftBounds                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         BottomRightBounds                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::GetFrustumBounds(const struct FVector& PlaneOrigin, const struct FVector& PlaneNormal, const struct FVector& InCameraLocation, const struct FVector& InTopLeftFrustumEnd, const struct FVector& InTopRightFrustumEnd, const struct FVector& InBottomLeftFrustumEnd, const struct FVector& InBottomRightFrustumEnd, struct FVector* TopLeftBounds, struct FVector* TopRightBounds, struct FVector* BottomLeftBounds, struct FVector* BottomRightBounds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "GetFrustumBounds");

	Params::BP_Box_Preview_Inventory_C_GetFrustumBounds Parms{};

	Parms.PlaneOrigin = std::move(PlaneOrigin);
	Parms.PlaneNormal = std::move(PlaneNormal);
	Parms.InCameraLocation = std::move(InCameraLocation);
	Parms.InTopLeftFrustumEnd = std::move(InTopLeftFrustumEnd);
	Parms.InTopRightFrustumEnd = std::move(InTopRightFrustumEnd);
	Parms.InBottomLeftFrustumEnd = std::move(InBottomLeftFrustumEnd);
	Parms.InBottomRightFrustumEnd = std::move(InBottomRightFrustumEnd);

	UObject::ProcessEvent(Func, &Parms);

	if (TopLeftBounds != nullptr)
		*TopLeftBounds = std::move(Parms.TopLeftBounds);

	if (TopRightBounds != nullptr)
		*TopRightBounds = std::move(Parms.TopRightBounds);

	if (BottomLeftBounds != nullptr)
		*BottomLeftBounds = std::move(Parms.BottomLeftBounds);

	if (BottomRightBounds != nullptr)
		*BottomRightBounds = std::move(Parms.BottomRightBounds);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.GetFrustumEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector2D&                 InScreenPosition                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InMaximumDistance                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_Box_Preview_Inventory_C::GetFrustumEnd(const struct FVector2D& InScreenPosition, double InMaximumDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "GetFrustumEnd");

	Params::BP_Box_Preview_Inventory_C_GetFrustumEnd Parms{};

	Parms.InScreenPosition = std::move(InScreenPosition);
	Parms.InMaximumDistance = InMaximumDistance;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.GetViewportRect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector2D*                       TopLeft_0                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       TopRight                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       BottomLeft                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       BottomRight_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::GetViewportRect(struct FVector2D* TopLeft_0, struct FVector2D* TopRight, struct FVector2D* BottomLeft, struct FVector2D* BottomRight_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "GetViewportRect");

	Params::BP_Box_Preview_Inventory_C_GetViewportRect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TopLeft_0 != nullptr)
		*TopLeft_0 = std::move(Parms.TopLeft_0);

	if (TopRight != nullptr)
		*TopRight = std::move(Parms.TopRight);

	if (BottomLeft != nullptr)
		*BottomLeft = std::move(Parms.BottomLeft);

	if (BottomRight_0 != nullptr)
		*BottomRight_0 = std::move(Parms.BottomRight_0);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.Toggle All Inventory Actors Visibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShowInventoryActors                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::Toggle_All_Inventory_Actors_Visibility(bool ShowInventoryActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "Toggle All Inventory Actors Visibility");

	Params::BP_Box_Preview_Inventory_C_Toggle_All_Inventory_Actors_Visibility Parms{};

	Parms.ShowInventoryActors = ShowInventoryActors;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.ApplyLocationOffsetFromContext
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             InContext                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::ApplyLocationOffsetFromContext(class FName InContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "ApplyLocationOffsetFromContext");

	Params::BP_Box_Preview_Inventory_C_ApplyLocationOffsetFromContext Parms{};

	Parms.InContext = InContext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.SetItemPreviewPosition
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 InViewportPosition                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::SetItemPreviewPosition(const struct FVector2D& InViewportPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "SetItemPreviewPosition");

	Params::BP_Box_Preview_Inventory_C_SetItemPreviewPosition Parms{};

	Parms.InViewportPosition = std::move(InViewportPosition);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.Remove Light and VFX
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Box_Preview_Inventory_C::Remove_Light_and_VFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "Remove Light and VFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.ApplyCurrentCharacterZoom
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Box_Preview_Inventory_C::ApplyCurrentCharacterZoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "ApplyCurrentCharacterZoom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.AddCharacterZoom
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ZoomIncrease                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::AddCharacterZoom(double ZoomIncrease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "AddCharacterZoom");

	Params::BP_Box_Preview_Inventory_C_AddCharacterZoom Parms{};

	Parms.ZoomIncrease = ZoomIncrease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.SetCharacterZoom
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  NewZoomAmount                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::SetCharacterZoom(double NewZoomAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "SetCharacterZoom");

	Params::BP_Box_Preview_Inventory_C_SetCharacterZoom Parms{};

	Parms.NewZoomAmount = NewZoomAmount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.UpdateMainCamera
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Box_Preview_Inventory_C::UpdateMainCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "UpdateMainCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.SetPrimaryGameLayoutBackgroundVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        NewVisibility                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::SetPrimaryGameLayoutBackgroundVisibility(ESlateVisibility NewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "SetPrimaryGameLayoutBackgroundVisibility");

	Params::BP_Box_Preview_Inventory_C_SetPrimaryGameLayoutBackgroundVisibility Parms{};

	Parms.NewVisibility = NewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.ShowInventoryCharacter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShowCharacter                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::ShowInventoryCharacter(bool bShowCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "ShowInventoryCharacter");

	Params::BP_Box_Preview_Inventory_C_ShowInventoryCharacter Parms{};

	Parms.bShowCharacter = bShowCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.ShowInventoryItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShowItem                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::ShowInventoryItem(bool bShowItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "ShowInventoryItem");

	Params::BP_Box_Preview_Inventory_C_ShowInventoryItem Parms{};

	Parms.bShowItem = bShowItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.Switch Camera
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           New_Camera                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::Switch_Camera(class AActor* New_Camera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "Switch Camera");

	Params::BP_Box_Preview_Inventory_C_Switch_Camera Parms{};

	Parms.New_Camera = New_Camera;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.EnableInventoryCamera
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::EnableInventoryCamera(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "EnableInventoryCamera");

	Params::BP_Box_Preview_Inventory_C_EnableInventoryCamera Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.ApplyLevelUpDitherTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_Box_Preview_Inventory_C::ApplyLevelUpDitherTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "ApplyLevelUpDitherTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.ApplyLevelUpDitherTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_Box_Preview_Inventory_C::ApplyLevelUpDitherTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "ApplyLevelUpDitherTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.ApplyInventoryDitherTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_Box_Preview_Inventory_C::ApplyInventoryDitherTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "ApplyInventoryDitherTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.ApplyInventoryDitherTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_Box_Preview_Inventory_C::ApplyInventoryDitherTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "ApplyInventoryDitherTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.EventSwitchCamera
// (BlueprintCallable, BlueprintEvent)

void ABP_Box_Preview_Inventory_C::EventSwitchCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "EventSwitchCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.OnPreviewInventoryChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InventoryActive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::OnPreviewInventoryChanged(bool InventoryActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "OnPreviewInventoryChanged");

	Params::BP_Box_Preview_Inventory_C_OnPreviewInventoryChanged Parms{};

	Parms.InventoryActive = InventoryActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.BeginDitherFadeOut
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             DitherType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::BeginDitherFadeOut(class FName DitherType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "BeginDitherFadeOut");

	Params::BP_Box_Preview_Inventory_C_BeginDitherFadeOut Parms{};

	Parms.DitherType = DitherType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.BeginDitherFadeIn
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             DitherType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::BeginDitherFadeIn(class FName DitherType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "BeginDitherFadeIn");

	Params::BP_Box_Preview_Inventory_C_BeginDitherFadeIn Parms{};

	Parms.DitherType = DitherType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Box_Preview_Inventory_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "ReceiveTick");

	Params::BP_Box_Preview_Inventory_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C.ExecuteUbergraph_BP_Box_Preview_Inventory
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Box_Preview_Inventory_C::ExecuteUbergraph_BP_Box_Preview_Inventory(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Box_Preview_Inventory_C", "ExecuteUbergraph_BP_Box_Preview_Inventory");

	Params::BP_Box_Preview_Inventory_C_ExecuteUbergraph_BP_Box_Preview_Inventory Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

