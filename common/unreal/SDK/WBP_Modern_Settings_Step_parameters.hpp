#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Modern_Settings_Step

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Modern_Settings_Step.WBP_Modern_Settings_Step_C.SetSelectionState
// 0x0009 (0x0009 - 0x0000)
struct WBP_Modern_Settings_Step_C_SetSelectionState final
{
public:
	bool                                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_Settings_Step_C_SetSelectionState) == 0x000001, "Wrong alignment on WBP_Modern_Settings_Step_C_SetSelectionState");
static_assert(sizeof(WBP_Modern_Settings_Step_C_SetSelectionState) == 0x000009, "Wrong size on WBP_Modern_Settings_Step_C_SetSelectionState");
static_assert(offsetof(WBP_Modern_Settings_Step_C_SetSelectionState, NewState) == 0x000000, "Member 'WBP_Modern_Settings_Step_C_SetSelectionState::NewState' has a wrong offset!");
static_assert(offsetof(WBP_Modern_Settings_Step_C_SetSelectionState, Temp_bool_Variable) == 0x000001, "Member 'WBP_Modern_Settings_Step_C_SetSelectionState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Modern_Settings_Step_C_SetSelectionState, Temp_byte_Variable) == 0x000002, "Member 'WBP_Modern_Settings_Step_C_SetSelectionState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Modern_Settings_Step_C_SetSelectionState, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_Modern_Settings_Step_C_SetSelectionState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_Settings_Step_C_SetSelectionState, Temp_bool_Variable_1) == 0x000004, "Member 'WBP_Modern_Settings_Step_C_SetSelectionState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_Settings_Step_C_SetSelectionState, Temp_byte_Variable_2) == 0x000005, "Member 'WBP_Modern_Settings_Step_C_SetSelectionState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Modern_Settings_Step_C_SetSelectionState, Temp_byte_Variable_3) == 0x000006, "Member 'WBP_Modern_Settings_Step_C_SetSelectionState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Modern_Settings_Step_C_SetSelectionState, K2Node_Select_Default) == 0x000007, "Member 'WBP_Modern_Settings_Step_C_SetSelectionState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Modern_Settings_Step_C_SetSelectionState, K2Node_Select_Default_1) == 0x000008, "Member 'WBP_Modern_Settings_Step_C_SetSelectionState::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_Modern_Settings_Step.WBP_Modern_Settings_Step_C.OnUnfocus
// 0x01D0 (0x01D0 - 0x0000)
struct WBP_Modern_Settings_Step_C_OnUnfocus final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0014(0x0014)()
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0030(0x00D0)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0100(0x00D0)()
};
static_assert(alignof(WBP_Modern_Settings_Step_C_OnUnfocus) == 0x000010, "Wrong alignment on WBP_Modern_Settings_Step_C_OnUnfocus");
static_assert(sizeof(WBP_Modern_Settings_Step_C_OnUnfocus) == 0x0001D0, "Wrong size on WBP_Modern_Settings_Step_C_OnUnfocus");
static_assert(offsetof(WBP_Modern_Settings_Step_C_OnUnfocus, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'WBP_Modern_Settings_Step_C_OnUnfocus::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_Modern_Settings_Step_C_OnUnfocus, K2Node_MakeStruct_SlateColor_1) == 0x000014, "Member 'WBP_Modern_Settings_Step_C_OnUnfocus::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_Settings_Step_C_OnUnfocus, K2Node_MakeStruct_SlateBrush) == 0x000030, "Member 'WBP_Modern_Settings_Step_C_OnUnfocus::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WBP_Modern_Settings_Step_C_OnUnfocus, K2Node_MakeStruct_SlateBrush_1) == 0x000100, "Member 'WBP_Modern_Settings_Step_C_OnUnfocus::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");

// Function WBP_Modern_Settings_Step.WBP_Modern_Settings_Step_C.OnFocus
// 0x01D0 (0x01D0 - 0x0000)
struct WBP_Modern_Settings_Step_C_OnFocus final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0014(0x0014)()
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0030(0x00D0)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0100(0x00D0)()
};
static_assert(alignof(WBP_Modern_Settings_Step_C_OnFocus) == 0x000010, "Wrong alignment on WBP_Modern_Settings_Step_C_OnFocus");
static_assert(sizeof(WBP_Modern_Settings_Step_C_OnFocus) == 0x0001D0, "Wrong size on WBP_Modern_Settings_Step_C_OnFocus");
static_assert(offsetof(WBP_Modern_Settings_Step_C_OnFocus, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'WBP_Modern_Settings_Step_C_OnFocus::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_Modern_Settings_Step_C_OnFocus, K2Node_MakeStruct_SlateColor_1) == 0x000014, "Member 'WBP_Modern_Settings_Step_C_OnFocus::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_Settings_Step_C_OnFocus, K2Node_MakeStruct_SlateBrush) == 0x000030, "Member 'WBP_Modern_Settings_Step_C_OnFocus::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WBP_Modern_Settings_Step_C_OnFocus, K2Node_MakeStruct_SlateBrush_1) == 0x000100, "Member 'WBP_Modern_Settings_Step_C_OnFocus::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");

}

