#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Graphic_DLSS_Reflex

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Altar_classes.hpp"
#include "StreamlineBlueprint_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Graphic_DLSS_Reflex.WBP_Graphic_DLSS_Reflex_C
// 0x0038 (0x0538 - 0x0500)
class UWBP_Graphic_DLSS_Reflex_C final : public UVDebugGraphicsSettingWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0500(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UComboBoxString*                        ComboItem;                                         // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             txt_label;                                         // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class FString>                         Str_Reflex_Modes;                                  // 0x0518(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 Original_Reflex_Mode;                              // 0x0528(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void BindRefreshDelegate();
	void Construct();
	void ExecuteUbergraph_WBP_Graphic_DLSS_Reflex(int32 EntryPoint);
	void Get_System_Reflex_Mode(int32* Refelex_Mode_Index, class FString* Reflex_Mode_Name);
	void OnRefresh();
	void Reflex_Mode_Change_Event(const class FString& SelectedItem, ESelectInfo SelectionType);
	void Refresh();
	void Refresh_Reflex_Mode();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Graphic_DLSS_Reflex_C">();
	}
	static class UWBP_Graphic_DLSS_Reflex_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Graphic_DLSS_Reflex_C>();
	}
};
static_assert(alignof(UWBP_Graphic_DLSS_Reflex_C) == 0x000008, "Wrong alignment on UWBP_Graphic_DLSS_Reflex_C");
static_assert(sizeof(UWBP_Graphic_DLSS_Reflex_C) == 0x000538, "Wrong size on UWBP_Graphic_DLSS_Reflex_C");
static_assert(offsetof(UWBP_Graphic_DLSS_Reflex_C, UberGraphFrame) == 0x000500, "Member 'UWBP_Graphic_DLSS_Reflex_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_DLSS_Reflex_C, ComboItem) == 0x000508, "Member 'UWBP_Graphic_DLSS_Reflex_C::ComboItem' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_DLSS_Reflex_C, txt_label) == 0x000510, "Member 'UWBP_Graphic_DLSS_Reflex_C::txt_label' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_DLSS_Reflex_C, Str_Reflex_Modes) == 0x000518, "Member 'UWBP_Graphic_DLSS_Reflex_C::Str_Reflex_Modes' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_DLSS_Reflex_C, Original_Reflex_Mode) == 0x000528, "Member 'UWBP_Graphic_DLSS_Reflex_C::Original_Reflex_Mode' has a wrong offset!");

}

