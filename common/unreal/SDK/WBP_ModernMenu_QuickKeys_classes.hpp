#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ModernMenu_QuickKeys

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonInput_structs.hpp"
#include "Altar_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ModernMenu_QuickKeys.WBP_ModernMenu_QuickKeys_C
// 0x0078 (0x0590 - 0x0518)
class UWBP_ModernMenu_QuickKeys_C final : public UVModernQuickKeysMenu
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0518(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVQuickKeysMenuViewModel*               VQuickKeysMenuViewModel;                           // 0x0520(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, DuplicateTransient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HoverKeyScaleUp;                                   // 0x0528(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeOut;                                           // 0x0530(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_AltarTextBlock_C*                  quickKeys_details_text;                            // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OriginalImageTile_C*               quickKeys_material;                                // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         QuickKeyID;                                        // 0x0548(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInHUD;                                           // 0x054C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54D[0x3];                                      // 0x054D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          HoverSound;                                        // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          OpenSound;                                         // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          CloseSound;                                        // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          AssignSound;                                       // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         HoveredKeyID;                                      // 0x0570(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_574[0x4];                                      // 0x0574(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnCloseAnimationEnd;                               // 0x0578(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         CurrentScaledKeyID;                                // 0x0588(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsVisibleOnScreen;                                // 0x058C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddMappingContext();
	void BndEvt__WBP_ModernMenu_QuickKeys_quickKeys_material_K2Node_ComponentBoundEvent_0_MouseEventDelegate__DelegateSignature(class UUserWidget* Target, const struct FGeometry& InGeometry, const struct FPointerEvent& InMouseEvent);
	void BndEvt__WBP_ModernMenu_QuickKeys_quickKeys_material_K2Node_ComponentBoundEvent_1_MouseEventDelegate__DelegateSignature(class UUserWidget* Target, const struct FGeometry& InGeometry, const struct FPointerEvent& InMouseEvent);
	void Construct();
	void Destruct();
	void ExecuteUbergraph_WBP_ModernMenu_QuickKeys(int32 EntryPoint);
	void Focus_Key_By_Quick_Key(const int32 NewId);
	void InpActEvt_IA_UI_Specific_QuickKeys_RightStick_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void OnVisibilityChangedEvent(ESlateVisibility InVisibility);
	void PlayCloseAnimation();
	void PlayOpenAnimation();
	void PlayScaleUpAnimation(int32 NewKeyID);
	void RefreshIcons();
	void RemoveMappingContext();
	void SendCloseHandler();
	void SendOpenHandler();
	void SetIcons(const TArray<class UTexture2D*>& IconsArray);
	void SetMousePositionInTheMiddle();
	void SetQuickKeyByIndex(int32 Index_0, class UTexture2D* Texture);
	void SetVisibilityByIndex(int32 Index_0, bool bVisibility);
	void Update_Key_Index(int32 Keys);
	void Update_Quick_Key_text(const class FText& Message);
	void UpdateFocusedKey(int32 NewId);
	void UpdateKeySelectorAngle(int32 NewIndex);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ModernMenu_QuickKeys_C">();
	}
	static class UWBP_ModernMenu_QuickKeys_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ModernMenu_QuickKeys_C>();
	}
};
static_assert(alignof(UWBP_ModernMenu_QuickKeys_C) == 0x000008, "Wrong alignment on UWBP_ModernMenu_QuickKeys_C");
static_assert(sizeof(UWBP_ModernMenu_QuickKeys_C) == 0x000590, "Wrong size on UWBP_ModernMenu_QuickKeys_C");
static_assert(offsetof(UWBP_ModernMenu_QuickKeys_C, UberGraphFrame) == 0x000518, "Member 'UWBP_ModernMenu_QuickKeys_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_QuickKeys_C, VQuickKeysMenuViewModel) == 0x000520, "Member 'UWBP_ModernMenu_QuickKeys_C::VQuickKeysMenuViewModel' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_QuickKeys_C, HoverKeyScaleUp) == 0x000528, "Member 'UWBP_ModernMenu_QuickKeys_C::HoverKeyScaleUp' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_QuickKeys_C, FadeOut) == 0x000530, "Member 'UWBP_ModernMenu_QuickKeys_C::FadeOut' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_QuickKeys_C, quickKeys_details_text) == 0x000538, "Member 'UWBP_ModernMenu_QuickKeys_C::quickKeys_details_text' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_QuickKeys_C, quickKeys_material) == 0x000540, "Member 'UWBP_ModernMenu_QuickKeys_C::quickKeys_material' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_QuickKeys_C, QuickKeyID) == 0x000548, "Member 'UWBP_ModernMenu_QuickKeys_C::QuickKeyID' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_QuickKeys_C, IsInHUD) == 0x00054C, "Member 'UWBP_ModernMenu_QuickKeys_C::IsInHUD' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_QuickKeys_C, HoverSound) == 0x000550, "Member 'UWBP_ModernMenu_QuickKeys_C::HoverSound' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_QuickKeys_C, OpenSound) == 0x000558, "Member 'UWBP_ModernMenu_QuickKeys_C::OpenSound' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_QuickKeys_C, CloseSound) == 0x000560, "Member 'UWBP_ModernMenu_QuickKeys_C::CloseSound' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_QuickKeys_C, AssignSound) == 0x000568, "Member 'UWBP_ModernMenu_QuickKeys_C::AssignSound' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_QuickKeys_C, HoveredKeyID) == 0x000570, "Member 'UWBP_ModernMenu_QuickKeys_C::HoveredKeyID' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_QuickKeys_C, OnCloseAnimationEnd) == 0x000578, "Member 'UWBP_ModernMenu_QuickKeys_C::OnCloseAnimationEnd' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_QuickKeys_C, CurrentScaledKeyID) == 0x000588, "Member 'UWBP_ModernMenu_QuickKeys_C::CurrentScaledKeyID' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_QuickKeys_C, bIsVisibleOnScreen) == 0x00058C, "Member 'UWBP_ModernMenu_QuickKeys_C::bIsVisibleOnScreen' has a wrong offset!");

}

