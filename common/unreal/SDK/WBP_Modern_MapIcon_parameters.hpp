#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Modern_MapIcon

#include "Basic.hpp"

#include "Altar_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Modern_MapIcon.WBP_Modern_MapIcon_C.ExecuteUbergraph_WBP_Modern_MapIcon
// 0x0008 (0x0008 - 0x0000)
struct WBP_Modern_MapIcon_C_ExecuteUbergraph_WBP_Modern_MapIcon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInRightInputMethod_IsInRightInputMethod; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInRightInputMethod_IsInRightInputMethod_1; // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInRightInputMethod_IsInRightInputMethod_2; // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapIcon_C_ExecuteUbergraph_WBP_Modern_MapIcon) == 0x000004, "Wrong alignment on WBP_Modern_MapIcon_C_ExecuteUbergraph_WBP_Modern_MapIcon");
static_assert(sizeof(WBP_Modern_MapIcon_C_ExecuteUbergraph_WBP_Modern_MapIcon) == 0x000008, "Wrong size on WBP_Modern_MapIcon_C_ExecuteUbergraph_WBP_Modern_MapIcon");
static_assert(offsetof(WBP_Modern_MapIcon_C_ExecuteUbergraph_WBP_Modern_MapIcon, EntryPoint) == 0x000000, "Member 'WBP_Modern_MapIcon_C_ExecuteUbergraph_WBP_Modern_MapIcon::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_ExecuteUbergraph_WBP_Modern_MapIcon, CallFunc_IsInRightInputMethod_IsInRightInputMethod) == 0x000004, "Member 'WBP_Modern_MapIcon_C_ExecuteUbergraph_WBP_Modern_MapIcon::CallFunc_IsInRightInputMethod_IsInRightInputMethod' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_ExecuteUbergraph_WBP_Modern_MapIcon, CallFunc_IsInRightInputMethod_IsInRightInputMethod_1) == 0x000005, "Member 'WBP_Modern_MapIcon_C_ExecuteUbergraph_WBP_Modern_MapIcon::CallFunc_IsInRightInputMethod_IsInRightInputMethod_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_ExecuteUbergraph_WBP_Modern_MapIcon, CallFunc_IsInRightInputMethod_IsInRightInputMethod_2) == 0x000006, "Member 'WBP_Modern_MapIcon_C_ExecuteUbergraph_WBP_Modern_MapIcon::CallFunc_IsInRightInputMethod_IsInRightInputMethod_2' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_ExecuteUbergraph_WBP_Modern_MapIcon, K2Node_Event_IsDesignTime) == 0x000007, "Member 'WBP_Modern_MapIcon_C_ExecuteUbergraph_WBP_Modern_MapIcon::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_Modern_MapIcon.WBP_Modern_MapIcon_C.GetKey
// 0x0008 (0x0008 - 0x0000)
struct WBP_Modern_MapIcon_C_GetKey final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapIcon_C_GetKey) == 0x000004, "Wrong alignment on WBP_Modern_MapIcon_C_GetKey");
static_assert(sizeof(WBP_Modern_MapIcon_C_GetKey) == 0x000008, "Wrong size on WBP_Modern_MapIcon_C_GetKey");
static_assert(offsetof(WBP_Modern_MapIcon_C_GetKey, Key) == 0x000000, "Member 'WBP_Modern_MapIcon_C_GetKey::Key' has a wrong offset!");

// Function WBP_Modern_MapIcon.WBP_Modern_MapIcon_C.GetName
// 0x0018 (0x0018 - 0x0000)
struct WBP_Modern_MapIcon_C_GetName final
{
public:
	class FText                                   Name_0;                                            // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(WBP_Modern_MapIcon_C_GetName) == 0x000008, "Wrong alignment on WBP_Modern_MapIcon_C_GetName");
static_assert(sizeof(WBP_Modern_MapIcon_C_GetName) == 0x000018, "Wrong size on WBP_Modern_MapIcon_C_GetName");
static_assert(offsetof(WBP_Modern_MapIcon_C_GetName, Name_0) == 0x000000, "Member 'WBP_Modern_MapIcon_C_GetName::Name_0' has a wrong offset!");

// Function WBP_Modern_MapIcon.WBP_Modern_MapIcon_C.IsInRightInputMethod
// 0x0020 (0x0020 - 0x0000)
struct WBP_Modern_MapIcon_C_IsInRightInputMethod final
{
public:
	bool                                          IsInRightInputMethod_0;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputMethodActive_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapIcon_C_IsInRightInputMethod) == 0x000008, "Wrong alignment on WBP_Modern_MapIcon_C_IsInRightInputMethod");
static_assert(sizeof(WBP_Modern_MapIcon_C_IsInRightInputMethod) == 0x000020, "Wrong size on WBP_Modern_MapIcon_C_IsInRightInputMethod");
static_assert(offsetof(WBP_Modern_MapIcon_C_IsInRightInputMethod, IsInRightInputMethod_0) == 0x000000, "Member 'WBP_Modern_MapIcon_C_IsInRightInputMethod::IsInRightInputMethod_0' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_IsInRightInputMethod, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WBP_Modern_MapIcon_C_IsInRightInputMethod::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_IsInRightInputMethod, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x000010, "Member 'WBP_Modern_MapIcon_C_IsInRightInputMethod::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_IsInRightInputMethod, CallFunc_IsInputMethodActive_ReturnValue) == 0x000018, "Member 'WBP_Modern_MapIcon_C_IsInRightInputMethod::CallFunc_IsInputMethodActive_ReturnValue' has a wrong offset!");

// Function WBP_Modern_MapIcon.WBP_Modern_MapIcon_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Modern_MapIcon_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapIcon_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Modern_MapIcon_C_PreConstruct");
static_assert(sizeof(WBP_Modern_MapIcon_C_PreConstruct) == 0x000001, "Wrong size on WBP_Modern_MapIcon_C_PreConstruct");
static_assert(offsetof(WBP_Modern_MapIcon_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Modern_MapIcon_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Modern_MapIcon.WBP_Modern_MapIcon_C.Set Icon Starting Size
// 0x0001 (0x0001 - 0x0000)
struct WBP_Modern_MapIcon_C_Set_Icon_Starting_Size final
{
public:
	bool                                          WorldMap;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapIcon_C_Set_Icon_Starting_Size) == 0x000001, "Wrong alignment on WBP_Modern_MapIcon_C_Set_Icon_Starting_Size");
static_assert(sizeof(WBP_Modern_MapIcon_C_Set_Icon_Starting_Size) == 0x000001, "Wrong size on WBP_Modern_MapIcon_C_Set_Icon_Starting_Size");
static_assert(offsetof(WBP_Modern_MapIcon_C_Set_Icon_Starting_Size, WorldMap) == 0x000000, "Member 'WBP_Modern_MapIcon_C_Set_Icon_Starting_Size::WorldMap' has a wrong offset!");

// Function WBP_Modern_MapIcon.WBP_Modern_MapIcon_C.SetProperties
// 0x0050 (0x0050 - 0x0000)
struct WBP_Modern_MapIcon_C_SetProperties final
{
public:
	struct FLegacyMapMenuIconProperties           Properties_0;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapIcon_C_SetProperties) == 0x000008, "Wrong alignment on WBP_Modern_MapIcon_C_SetProperties");
static_assert(sizeof(WBP_Modern_MapIcon_C_SetProperties) == 0x000050, "Wrong size on WBP_Modern_MapIcon_C_SetProperties");
static_assert(offsetof(WBP_Modern_MapIcon_C_SetProperties, Properties_0) == 0x000000, "Member 'WBP_Modern_MapIcon_C_SetProperties::Properties_0' has a wrong offset!");

// Function WBP_Modern_MapIcon.WBP_Modern_MapIcon_C.ShowPopup
// 0x0001 (0x0001 - 0x0000)
struct WBP_Modern_MapIcon_C_ShowPopup final
{
public:
	bool                                          ShowLeft;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapIcon_C_ShowPopup) == 0x000001, "Wrong alignment on WBP_Modern_MapIcon_C_ShowPopup");
static_assert(sizeof(WBP_Modern_MapIcon_C_ShowPopup) == 0x000001, "Wrong size on WBP_Modern_MapIcon_C_ShowPopup");
static_assert(offsetof(WBP_Modern_MapIcon_C_ShowPopup, ShowLeft) == 0x000000, "Member 'WBP_Modern_MapIcon_C_ShowPopup::ShowLeft' has a wrong offset!");

// Function WBP_Modern_MapIcon.WBP_Modern_MapIcon_C.UpdateIconBrush
// 0x1C50 (0x1C50 - 0x0000)
struct WBP_Modern_MapIcon_C_UpdateIconBrush final
{
public:
	struct FModern_AltarMapIconDesignTableRow     Local_IconDataRow;                                 // 0x0000(0x0DB0)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0DB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB1[0xF];                                      // 0x0DB1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FModern_AltarMapIconDesignTableRow     CallFunc_Map_Find_Value;                           // 0x0DC0(0x0DB0)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x1B70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B71[0xF];                                     // 0x1B71(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_Select_Default;                             // 0x1B80(0x00D0)()
};
static_assert(alignof(WBP_Modern_MapIcon_C_UpdateIconBrush) == 0x000010, "Wrong alignment on WBP_Modern_MapIcon_C_UpdateIconBrush");
static_assert(sizeof(WBP_Modern_MapIcon_C_UpdateIconBrush) == 0x001C50, "Wrong size on WBP_Modern_MapIcon_C_UpdateIconBrush");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateIconBrush, Local_IconDataRow) == 0x000000, "Member 'WBP_Modern_MapIcon_C_UpdateIconBrush::Local_IconDataRow' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateIconBrush, Temp_bool_Variable) == 0x000DB0, "Member 'WBP_Modern_MapIcon_C_UpdateIconBrush::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateIconBrush, CallFunc_Map_Find_Value) == 0x000DC0, "Member 'WBP_Modern_MapIcon_C_UpdateIconBrush::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateIconBrush, CallFunc_Map_Find_ReturnValue) == 0x001B70, "Member 'WBP_Modern_MapIcon_C_UpdateIconBrush::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateIconBrush, K2Node_Select_Default) == 0x001B80, "Member 'WBP_Modern_MapIcon_C_UpdateIconBrush::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Modern_MapIcon.WBP_Modern_MapIcon_C.UpdatePlayerRotation
// 0x0018 (0x0018 - 0x0000)
struct WBP_Modern_MapIcon_C_UpdatePlayerRotation final
{
public:
	double                                        CallFunc_RadiansToDegrees_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RadiansToDegrees_A_ImplicitCast;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapIcon_C_UpdatePlayerRotation) == 0x000008, "Wrong alignment on WBP_Modern_MapIcon_C_UpdatePlayerRotation");
static_assert(sizeof(WBP_Modern_MapIcon_C_UpdatePlayerRotation) == 0x000018, "Wrong size on WBP_Modern_MapIcon_C_UpdatePlayerRotation");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdatePlayerRotation, CallFunc_RadiansToDegrees_ReturnValue) == 0x000000, "Member 'WBP_Modern_MapIcon_C_UpdatePlayerRotation::CallFunc_RadiansToDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdatePlayerRotation, CallFunc_RadiansToDegrees_A_ImplicitCast) == 0x000008, "Member 'WBP_Modern_MapIcon_C_UpdatePlayerRotation::CallFunc_RadiansToDegrees_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdatePlayerRotation, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x000010, "Member 'WBP_Modern_MapIcon_C_UpdatePlayerRotation::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");

// Function WBP_Modern_MapIcon.WBP_Modern_MapIcon_C.UpdateQuestColor
// 0x0014 (0x0014 - 0x0000)
struct WBP_Modern_MapIcon_C_UpdateQuestColor final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapIcon_C_UpdateQuestColor) == 0x000004, "Wrong alignment on WBP_Modern_MapIcon_C_UpdateQuestColor");
static_assert(sizeof(WBP_Modern_MapIcon_C_UpdateQuestColor) == 0x000014, "Wrong size on WBP_Modern_MapIcon_C_UpdateQuestColor");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateQuestColor, Temp_bool_Variable) == 0x000000, "Member 'WBP_Modern_MapIcon_C_UpdateQuestColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateQuestColor, K2Node_Select_Default) == 0x000004, "Member 'WBP_Modern_MapIcon_C_UpdateQuestColor::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Modern_MapIcon.WBP_Modern_MapIcon_C.UpdateSwitcherIndex
// 0x004C (0x004C - 0x0000)
struct WBP_Modern_MapIcon_C_UpdateSwitcherIndex final
{
public:
	ELegacyMapMenuIcon                            Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_13;                              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_14;                              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_15;                              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_16;                              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapIcon_C_UpdateSwitcherIndex) == 0x000004, "Wrong alignment on WBP_Modern_MapIcon_C_UpdateSwitcherIndex");
static_assert(sizeof(WBP_Modern_MapIcon_C_UpdateSwitcherIndex) == 0x00004C, "Wrong size on WBP_Modern_MapIcon_C_UpdateSwitcherIndex");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherIndex, Temp_byte_Variable) == 0x000000, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherIndex::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherIndex, Temp_int_Variable) == 0x000004, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherIndex, Temp_int_Variable_1) == 0x000008, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherIndex::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherIndex, Temp_int_Variable_2) == 0x00000C, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherIndex::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherIndex, Temp_int_Variable_3) == 0x000010, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherIndex::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherIndex, Temp_int_Variable_4) == 0x000014, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherIndex::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherIndex, Temp_int_Variable_5) == 0x000018, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherIndex::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherIndex, Temp_int_Variable_6) == 0x00001C, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherIndex::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherIndex, Temp_int_Variable_7) == 0x000020, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherIndex::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherIndex, Temp_int_Variable_8) == 0x000024, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherIndex::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherIndex, Temp_int_Variable_9) == 0x000028, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherIndex::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherIndex, Temp_int_Variable_10) == 0x00002C, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherIndex::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherIndex, Temp_int_Variable_11) == 0x000030, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherIndex::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherIndex, Temp_int_Variable_12) == 0x000034, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherIndex::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherIndex, Temp_int_Variable_13) == 0x000038, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherIndex::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherIndex, Temp_int_Variable_14) == 0x00003C, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherIndex::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherIndex, Temp_int_Variable_15) == 0x000040, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherIndex::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherIndex, Temp_int_Variable_16) == 0x000044, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherIndex::Temp_int_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherIndex, K2Node_Select_Default) == 0x000048, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherIndex::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Modern_MapIcon.WBP_Modern_MapIcon_C.UpdateSwitcherVisibility
// 0x0009 (0x0009 - 0x0000)
struct WBP_Modern_MapIcon_C_UpdateSwitcherVisibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapIcon_C_UpdateSwitcherVisibility) == 0x000001, "Wrong alignment on WBP_Modern_MapIcon_C_UpdateSwitcherVisibility");
static_assert(sizeof(WBP_Modern_MapIcon_C_UpdateSwitcherVisibility) == 0x000009, "Wrong size on WBP_Modern_MapIcon_C_UpdateSwitcherVisibility");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherVisibility, Temp_bool_Variable) == 0x000000, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherVisibility, Temp_byte_Variable) == 0x000001, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherVisibility, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000004, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000005, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherVisibility, CallFunc_BooleanOR_ReturnValue) == 0x000006, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherVisibility, CallFunc_BooleanOR_ReturnValue_1) == 0x000007, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherVisibility::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapIcon_C_UpdateSwitcherVisibility, K2Node_Select_Default) == 0x000008, "Member 'WBP_Modern_MapIcon_C_UpdateSwitcherVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Modern_MapIcon.WBP_Modern_MapIcon_C.GetPopupText
// 0x0018 (0x0018 - 0x0000)
struct WBP_Modern_MapIcon_C_GetPopupText final
{
public:
	class FText                                   Popup_Text;                                        // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(WBP_Modern_MapIcon_C_GetPopupText) == 0x000008, "Wrong alignment on WBP_Modern_MapIcon_C_GetPopupText");
static_assert(sizeof(WBP_Modern_MapIcon_C_GetPopupText) == 0x000018, "Wrong size on WBP_Modern_MapIcon_C_GetPopupText");
static_assert(offsetof(WBP_Modern_MapIcon_C_GetPopupText, Popup_Text) == 0x000000, "Member 'WBP_Modern_MapIcon_C_GetPopupText::Popup_Text' has a wrong offset!");

// Function WBP_Modern_MapIcon.WBP_Modern_MapIcon_C.GetPosition
// 0x0010 (0x0010 - 0x0000)
struct WBP_Modern_MapIcon_C_GetPosition final
{
public:
	struct FVector2D                              NewParam;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapIcon_C_GetPosition) == 0x000008, "Wrong alignment on WBP_Modern_MapIcon_C_GetPosition");
static_assert(sizeof(WBP_Modern_MapIcon_C_GetPosition) == 0x000010, "Wrong size on WBP_Modern_MapIcon_C_GetPosition");
static_assert(offsetof(WBP_Modern_MapIcon_C_GetPosition, NewParam) == 0x000000, "Member 'WBP_Modern_MapIcon_C_GetPosition::NewParam' has a wrong offset!");

}

