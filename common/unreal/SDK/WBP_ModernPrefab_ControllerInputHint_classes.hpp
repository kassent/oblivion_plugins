#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ModernPrefab_ControllerInputHint

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CommonInput_structs.hpp"
#include "Altar_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ModernPrefab_ControllerInputHint.WBP_ModernPrefab_ControllerInputHint_C
// 0x0060 (0x0528 - 0x04C8)
class UWBP_ModernPrefab_ControllerInputHint_C final : public UVAltarWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_OriginalImageTile_C*               ControllerInput;                                   // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AltarTextBlock_C*                  InputKeyText;                                      // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               KeyboardOverlay;                                   // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              Size;                                              // 0x04F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Controller_Key;                                    // 0x0500(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UInputAction*                           InputAction;                                       // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisplayKeyboardInput;                             // 0x0520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint(int32 EntryPoint);
	void On_Input_Method_Changed(ECommonInputType NewInputType);
	void On_Toggle_Input_Visibility(bool bInIsVisible);
	void PreConstruct(bool IsDesignTime);
	void SetControllerInputBrush(const struct FKey& In_Key);
	void SetInputBrush(class UInputAction* NewInputAction);
	void Update_Controller_Key(const struct FKey& InNewKey);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ModernPrefab_ControllerInputHint_C">();
	}
	static class UWBP_ModernPrefab_ControllerInputHint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ModernPrefab_ControllerInputHint_C>();
	}
};
static_assert(alignof(UWBP_ModernPrefab_ControllerInputHint_C) == 0x000008, "Wrong alignment on UWBP_ModernPrefab_ControllerInputHint_C");
static_assert(sizeof(UWBP_ModernPrefab_ControllerInputHint_C) == 0x000528, "Wrong size on UWBP_ModernPrefab_ControllerInputHint_C");
static_assert(offsetof(UWBP_ModernPrefab_ControllerInputHint_C, UberGraphFrame) == 0x0004C8, "Member 'UWBP_ModernPrefab_ControllerInputHint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ModernPrefab_ControllerInputHint_C, ControllerInput) == 0x0004D0, "Member 'UWBP_ModernPrefab_ControllerInputHint_C::ControllerInput' has a wrong offset!");
static_assert(offsetof(UWBP_ModernPrefab_ControllerInputHint_C, InputKeyText) == 0x0004D8, "Member 'UWBP_ModernPrefab_ControllerInputHint_C::InputKeyText' has a wrong offset!");
static_assert(offsetof(UWBP_ModernPrefab_ControllerInputHint_C, KeyboardOverlay) == 0x0004E0, "Member 'UWBP_ModernPrefab_ControllerInputHint_C::KeyboardOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_ModernPrefab_ControllerInputHint_C, SizeBox) == 0x0004E8, "Member 'UWBP_ModernPrefab_ControllerInputHint_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_ModernPrefab_ControllerInputHint_C, Size) == 0x0004F0, "Member 'UWBP_ModernPrefab_ControllerInputHint_C::Size' has a wrong offset!");
static_assert(offsetof(UWBP_ModernPrefab_ControllerInputHint_C, Controller_Key) == 0x000500, "Member 'UWBP_ModernPrefab_ControllerInputHint_C::Controller_Key' has a wrong offset!");
static_assert(offsetof(UWBP_ModernPrefab_ControllerInputHint_C, InputAction) == 0x000518, "Member 'UWBP_ModernPrefab_ControllerInputHint_C::InputAction' has a wrong offset!");
static_assert(offsetof(UWBP_ModernPrefab_ControllerInputHint_C, bDisplayKeyboardInput) == 0x000520, "Member 'UWBP_ModernPrefab_ControllerInputHint_C::bDisplayKeyboardInput' has a wrong offset!");

}

