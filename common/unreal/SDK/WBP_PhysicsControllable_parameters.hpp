#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PhysicsControllable

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Altar_structs.hpp"
#include "UE5AltarPairing_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_PhysicsControllable.WBP_PhysicsControllable_C.DisplayBoolValue
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_PhysicsControllable_C_DisplayBoolValue final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             Text;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             LinkedText;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0018)()
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0040(0x0014)()
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0064(0x0014)()
	class FText                                   Temp_text_Variable_1;                              // 0x0078(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0098(0x0018)()
};
static_assert(alignof(WBP_PhysicsControllable_C_DisplayBoolValue) == 0x000008, "Wrong alignment on WBP_PhysicsControllable_C_DisplayBoolValue");
static_assert(sizeof(WBP_PhysicsControllable_C_DisplayBoolValue) == 0x0000B0, "Wrong size on WBP_PhysicsControllable_C_DisplayBoolValue");
static_assert(offsetof(WBP_PhysicsControllable_C_DisplayBoolValue, Value) == 0x000000, "Member 'WBP_PhysicsControllable_C_DisplayBoolValue::Value' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_DisplayBoolValue, Text) == 0x000008, "Member 'WBP_PhysicsControllable_C_DisplayBoolValue::Text' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_DisplayBoolValue, LinkedText) == 0x000010, "Member 'WBP_PhysicsControllable_C_DisplayBoolValue::LinkedText' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_DisplayBoolValue, Temp_text_Variable) == 0x000018, "Member 'WBP_PhysicsControllable_C_DisplayBoolValue::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_DisplayBoolValue, CallFunc_SelectColor_ReturnValue) == 0x000030, "Member 'WBP_PhysicsControllable_C_DisplayBoolValue::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_DisplayBoolValue, K2Node_MakeStruct_SlateColor) == 0x000040, "Member 'WBP_PhysicsControllable_C_DisplayBoolValue::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_DisplayBoolValue, CallFunc_SelectColor_ReturnValue_1) == 0x000054, "Member 'WBP_PhysicsControllable_C_DisplayBoolValue::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_DisplayBoolValue, K2Node_MakeStruct_SlateColor_1) == 0x000064, "Member 'WBP_PhysicsControllable_C_DisplayBoolValue::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_DisplayBoolValue, Temp_text_Variable_1) == 0x000078, "Member 'WBP_PhysicsControllable_C_DisplayBoolValue::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_DisplayBoolValue, Temp_bool_Variable) == 0x000090, "Member 'WBP_PhysicsControllable_C_DisplayBoolValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_DisplayBoolValue, K2Node_Select_Default) == 0x000098, "Member 'WBP_PhysicsControllable_C_DisplayBoolValue::K2Node_Select_Default' has a wrong offset!");

// Function WBP_PhysicsControllable.WBP_PhysicsControllable_C.DisplayEnumValue
// 0x0050 (0x0050 - 0x0000)
struct WBP_PhysicsControllable_C_DisplayEnumValue final
{
public:
	class FName                                   EnumeratorName;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             Text;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CharacterCount;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0018)()
};
static_assert(alignof(WBP_PhysicsControllable_C_DisplayEnumValue) == 0x000008, "Wrong alignment on WBP_PhysicsControllable_C_DisplayEnumValue");
static_assert(sizeof(WBP_PhysicsControllable_C_DisplayEnumValue) == 0x000050, "Wrong size on WBP_PhysicsControllable_C_DisplayEnumValue");
static_assert(offsetof(WBP_PhysicsControllable_C_DisplayEnumValue, EnumeratorName) == 0x000000, "Member 'WBP_PhysicsControllable_C_DisplayEnumValue::EnumeratorName' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_DisplayEnumValue, Text) == 0x000008, "Member 'WBP_PhysicsControllable_C_DisplayEnumValue::Text' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_DisplayEnumValue, CharacterCount) == 0x000010, "Member 'WBP_PhysicsControllable_C_DisplayEnumValue::CharacterCount' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_DisplayEnumValue, CallFunc_Conv_NameToString_ReturnValue) == 0x000018, "Member 'WBP_PhysicsControllable_C_DisplayEnumValue::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_DisplayEnumValue, CallFunc_RightChop_ReturnValue) == 0x000028, "Member 'WBP_PhysicsControllable_C_DisplayEnumValue::CallFunc_RightChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_DisplayEnumValue, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'WBP_PhysicsControllable_C_DisplayEnumValue::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_PhysicsControllable.WBP_PhysicsControllable_C.DoUpdateDisplayData
// 0x0100 (0x0100 - 0x0000)
struct WBP_PhysicsControllable_C_DoUpdateDisplayData final
{
public:
	struct FVPhysicsControllableDebugData         ControllableData;                                  // 0x0000(0x00D0)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVPrimitiveComponentDebugData*          CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateDisplaySettingsData_PontoonSizeScale_ImplicitCast; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateDisplaySettingsData_BuoyancyCoefficient_ImplicitCast; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PhysicsControllable_C_DoUpdateDisplayData) == 0x000010, "Wrong alignment on WBP_PhysicsControllable_C_DoUpdateDisplayData");
static_assert(sizeof(WBP_PhysicsControllable_C_DoUpdateDisplayData) == 0x000100, "Wrong size on WBP_PhysicsControllable_C_DoUpdateDisplayData");
static_assert(offsetof(WBP_PhysicsControllable_C_DoUpdateDisplayData, ControllableData) == 0x000000, "Member 'WBP_PhysicsControllable_C_DoUpdateDisplayData::ControllableData' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_DoUpdateDisplayData, Temp_int_Array_Index_Variable) == 0x0000D0, "Member 'WBP_PhysicsControllable_C_DoUpdateDisplayData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_DoUpdateDisplayData, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'WBP_PhysicsControllable_C_DoUpdateDisplayData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_DoUpdateDisplayData, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'WBP_PhysicsControllable_C_DoUpdateDisplayData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_DoUpdateDisplayData, Temp_int_Loop_Counter_Variable) == 0x0000E4, "Member 'WBP_PhysicsControllable_C_DoUpdateDisplayData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_DoUpdateDisplayData, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'WBP_PhysicsControllable_C_DoUpdateDisplayData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_DoUpdateDisplayData, CallFunc_Add_IntInt_ReturnValue) == 0x0000EC, "Member 'WBP_PhysicsControllable_C_DoUpdateDisplayData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_DoUpdateDisplayData, CallFunc_UpdateDisplaySettingsData_PontoonSizeScale_ImplicitCast) == 0x0000F0, "Member 'WBP_PhysicsControllable_C_DoUpdateDisplayData::CallFunc_UpdateDisplaySettingsData_PontoonSizeScale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_DoUpdateDisplayData, CallFunc_UpdateDisplaySettingsData_BuoyancyCoefficient_ImplicitCast) == 0x0000F8, "Member 'WBP_PhysicsControllable_C_DoUpdateDisplayData::CallFunc_UpdateDisplaySettingsData_BuoyancyCoefficient_ImplicitCast' has a wrong offset!");

// Function WBP_PhysicsControllable.WBP_PhysicsControllable_C.ExecuteUbergraph_WBP_PhysicsControllable
// 0x0120 (0x0120 - 0x0000)
struct WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVPhysicsControllableDebugData         K2Node_Event_ControllableDebugData;                // 0x0010(0x00D0)(ConstParm)
	int32                                         K2Node_Event_DataIndex;                            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UVControllableEntry*>            K2Node_Event_ControllableEntries;                  // 0x00E8(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetItemAt_ReturnValue;                    // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVControllableEntry*                    CallFunc_Array_Get_Item;                           // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable) == 0x000010, "Wrong alignment on WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable");
static_assert(sizeof(WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable) == 0x000120, "Wrong size on WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable");
static_assert(offsetof(WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable, EntryPoint) == 0x000000, "Member 'WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable, K2Node_Event_ControllableDebugData) == 0x000010, "Member 'WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable::K2Node_Event_ControllableDebugData' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable, K2Node_Event_DataIndex) == 0x0000E0, "Member 'WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable::K2Node_Event_DataIndex' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable, K2Node_Event_ControllableEntries) == 0x0000E8, "Member 'WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable::K2Node_Event_ControllableEntries' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable, CallFunc_Array_Length_ReturnValue) == 0x0000F8, "Member 'WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable, CallFunc_GetItemAt_ReturnValue) == 0x000100, "Member 'WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable::CallFunc_GetItemAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable, Temp_int_Loop_Counter_Variable) == 0x000108, "Member 'WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable, CallFunc_Less_IntInt_ReturnValue) == 0x00010C, "Member 'WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable, CallFunc_Add_IntInt_ReturnValue) == 0x000110, "Member 'WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable, Temp_int_Array_Index_Variable) == 0x000114, "Member 'WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable, CallFunc_Array_Get_Item) == 0x000118, "Member 'WBP_PhysicsControllable_C_ExecuteUbergraph_WBP_PhysicsControllable::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WBP_PhysicsControllable.WBP_PhysicsControllable_C.UpdateDisplayAuthorityData
// 0x0030 (0x0030 - 0x0000)
struct WBP_PhysicsControllable_C_UpdateDisplayAuthorityData final
{
public:
	EVPhysicsSettingsAuthority                    ControlSettingsAuthority;                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVPhysicsSettingsAuthority                    CollisionProfileAuthority;                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVPhysicsSettingsAuthority                    WeightsAuthority;                                  // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVPhysicsSettingsAuthority                    DampingValuesAuthority;                            // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVPhysicsSettingsAuthority                    NavigationSettingsAuthority;                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue_1;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue_2;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue_3;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue_4;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PhysicsControllable_C_UpdateDisplayAuthorityData) == 0x000004, "Wrong alignment on WBP_PhysicsControllable_C_UpdateDisplayAuthorityData");
static_assert(sizeof(WBP_PhysicsControllable_C_UpdateDisplayAuthorityData) == 0x000030, "Wrong size on WBP_PhysicsControllable_C_UpdateDisplayAuthorityData");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayAuthorityData, ControlSettingsAuthority) == 0x000000, "Member 'WBP_PhysicsControllable_C_UpdateDisplayAuthorityData::ControlSettingsAuthority' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayAuthorityData, CollisionProfileAuthority) == 0x000001, "Member 'WBP_PhysicsControllable_C_UpdateDisplayAuthorityData::CollisionProfileAuthority' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayAuthorityData, WeightsAuthority) == 0x000002, "Member 'WBP_PhysicsControllable_C_UpdateDisplayAuthorityData::WeightsAuthority' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayAuthorityData, DampingValuesAuthority) == 0x000003, "Member 'WBP_PhysicsControllable_C_UpdateDisplayAuthorityData::DampingValuesAuthority' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayAuthorityData, NavigationSettingsAuthority) == 0x000004, "Member 'WBP_PhysicsControllable_C_UpdateDisplayAuthorityData::NavigationSettingsAuthority' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayAuthorityData, CallFunc_GetEnumeratorName_ReturnValue) == 0x000008, "Member 'WBP_PhysicsControllable_C_UpdateDisplayAuthorityData::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayAuthorityData, CallFunc_GetEnumeratorName_ReturnValue_1) == 0x000010, "Member 'WBP_PhysicsControllable_C_UpdateDisplayAuthorityData::CallFunc_GetEnumeratorName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayAuthorityData, CallFunc_GetEnumeratorName_ReturnValue_2) == 0x000018, "Member 'WBP_PhysicsControllable_C_UpdateDisplayAuthorityData::CallFunc_GetEnumeratorName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayAuthorityData, CallFunc_GetEnumeratorName_ReturnValue_3) == 0x000020, "Member 'WBP_PhysicsControllable_C_UpdateDisplayAuthorityData::CallFunc_GetEnumeratorName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayAuthorityData, CallFunc_GetEnumeratorName_ReturnValue_4) == 0x000028, "Member 'WBP_PhysicsControllable_C_UpdateDisplayAuthorityData::CallFunc_GetEnumeratorName_ReturnValue_4' has a wrong offset!");

// Function WBP_PhysicsControllable.WBP_PhysicsControllable_C.UpdateDisplayedData
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_PhysicsControllable_C_UpdateDisplayedData final
{
public:
	struct FVPhysicsControllableDebugData         ControllableDebugData;                             // 0x0000(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         DataIndex;                                         // 0x00D0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PhysicsControllable_C_UpdateDisplayedData) == 0x000010, "Wrong alignment on WBP_PhysicsControllable_C_UpdateDisplayedData");
static_assert(sizeof(WBP_PhysicsControllable_C_UpdateDisplayedData) == 0x0000E0, "Wrong size on WBP_PhysicsControllable_C_UpdateDisplayedData");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayedData, ControllableDebugData) == 0x000000, "Member 'WBP_PhysicsControllable_C_UpdateDisplayedData::ControllableDebugData' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayedData, DataIndex) == 0x0000D0, "Member 'WBP_PhysicsControllable_C_UpdateDisplayedData::DataIndex' has a wrong offset!");

// Function WBP_PhysicsControllable.WBP_PhysicsControllable_C.UpdateDisplayIdentityData
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_PhysicsControllable_C_UpdateDisplayIdentityData final
{
public:
	class FName                                   Label;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Class_0;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReferenceID;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InstanceId;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0058(0x0018)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0070(0x0018)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0088(0x0018)()
};
static_assert(alignof(WBP_PhysicsControllable_C_UpdateDisplayIdentityData) == 0x000008, "Wrong alignment on WBP_PhysicsControllable_C_UpdateDisplayIdentityData");
static_assert(sizeof(WBP_PhysicsControllable_C_UpdateDisplayIdentityData) == 0x0000A0, "Wrong size on WBP_PhysicsControllable_C_UpdateDisplayIdentityData");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayIdentityData, Label) == 0x000000, "Member 'WBP_PhysicsControllable_C_UpdateDisplayIdentityData::Label' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayIdentityData, Class_0) == 0x000008, "Member 'WBP_PhysicsControllable_C_UpdateDisplayIdentityData::Class_0' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayIdentityData, ReferenceID) == 0x000010, "Member 'WBP_PhysicsControllable_C_UpdateDisplayIdentityData::ReferenceID' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayIdentityData, InstanceId) == 0x000018, "Member 'WBP_PhysicsControllable_C_UpdateDisplayIdentityData::InstanceId' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayIdentityData, CallFunc_Conv_NameToString_ReturnValue) == 0x000020, "Member 'WBP_PhysicsControllable_C_UpdateDisplayIdentityData::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayIdentityData, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000030, "Member 'WBP_PhysicsControllable_C_UpdateDisplayIdentityData::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayIdentityData, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'WBP_PhysicsControllable_C_UpdateDisplayIdentityData::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayIdentityData, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000058, "Member 'WBP_PhysicsControllable_C_UpdateDisplayIdentityData::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayIdentityData, CallFunc_Conv_NameToText_ReturnValue) == 0x000070, "Member 'WBP_PhysicsControllable_C_UpdateDisplayIdentityData::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayIdentityData, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000088, "Member 'WBP_PhysicsControllable_C_UpdateDisplayIdentityData::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");

// Function WBP_PhysicsControllable.WBP_PhysicsControllable_C.UpdateDisplayLocationData
// 0x0130 (0x0130 - 0x0000)
struct WBP_PhysicsControllable_C_UpdateDisplayLocationData final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentMapName_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B8(0x0018)()
	double                                        CallFunc_BreakVector_X;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x00E8(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0100(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_2;          // 0x0118(0x0018)()
};
static_assert(alignof(WBP_PhysicsControllable_C_UpdateDisplayLocationData) == 0x000010, "Wrong alignment on WBP_PhysicsControllable_C_UpdateDisplayLocationData");
static_assert(sizeof(WBP_PhysicsControllable_C_UpdateDisplayLocationData) == 0x000130, "Wrong size on WBP_PhysicsControllable_C_UpdateDisplayLocationData");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayLocationData, Transform) == 0x000000, "Member 'WBP_PhysicsControllable_C_UpdateDisplayLocationData::Transform' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayLocationData, CallFunc_GetCurrentMapName_ReturnValue) == 0x000060, "Member 'WBP_PhysicsControllable_C_UpdateDisplayLocationData::CallFunc_GetCurrentMapName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayLocationData, CallFunc_BreakTransform_Location) == 0x000070, "Member 'WBP_PhysicsControllable_C_UpdateDisplayLocationData::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayLocationData, CallFunc_BreakTransform_Rotation) == 0x000088, "Member 'WBP_PhysicsControllable_C_UpdateDisplayLocationData::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayLocationData, CallFunc_BreakTransform_Scale) == 0x0000A0, "Member 'WBP_PhysicsControllable_C_UpdateDisplayLocationData::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayLocationData, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B8, "Member 'WBP_PhysicsControllable_C_UpdateDisplayLocationData::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayLocationData, CallFunc_BreakVector_X) == 0x0000D0, "Member 'WBP_PhysicsControllable_C_UpdateDisplayLocationData::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayLocationData, CallFunc_BreakVector_Y) == 0x0000D8, "Member 'WBP_PhysicsControllable_C_UpdateDisplayLocationData::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayLocationData, CallFunc_BreakVector_Z) == 0x0000E0, "Member 'WBP_PhysicsControllable_C_UpdateDisplayLocationData::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayLocationData, CallFunc_Conv_DoubleToText_ReturnValue) == 0x0000E8, "Member 'WBP_PhysicsControllable_C_UpdateDisplayLocationData::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayLocationData, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000100, "Member 'WBP_PhysicsControllable_C_UpdateDisplayLocationData::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayLocationData, CallFunc_Conv_DoubleToText_ReturnValue_2) == 0x000118, "Member 'WBP_PhysicsControllable_C_UpdateDisplayLocationData::CallFunc_Conv_DoubleToText_ReturnValue_2' has a wrong offset!");

// Function WBP_PhysicsControllable.WBP_PhysicsControllable_C.UpdateDisplaySettingsData
// 0x0070 (0x0070 - 0x0000)
struct WBP_PhysicsControllable_C_UpdateDisplaySettingsData final
{
public:
	bool                                          IsGrabbable;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTelekinesisTargetable;                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAnchored;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRestoringAttachmentAfterSimulation;              // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVPhysicsSimulationBehaviour                  SimulationBehaviour;                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVPhysicsLoadingBehaviour                     LoadingBehaviour;                                  // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoesRepositionOnLoad;                              // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoesReattachOnLoad;                                // 0x0007(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoesGeneratePontoonsAtRuntime;                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PontoonSizeScale;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BuoyancyCoefficient;                               // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoesPlayCollisionSounds;                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVDefaultSurfaceType                          DefaultSurfaceType;                                // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0030(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0048(0x0018)()
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue_1;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue_2;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PhysicsControllable_C_UpdateDisplaySettingsData) == 0x000008, "Wrong alignment on WBP_PhysicsControllable_C_UpdateDisplaySettingsData");
static_assert(sizeof(WBP_PhysicsControllable_C_UpdateDisplaySettingsData) == 0x000070, "Wrong size on WBP_PhysicsControllable_C_UpdateDisplaySettingsData");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplaySettingsData, IsGrabbable) == 0x000000, "Member 'WBP_PhysicsControllable_C_UpdateDisplaySettingsData::IsGrabbable' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplaySettingsData, IsTelekinesisTargetable) == 0x000001, "Member 'WBP_PhysicsControllable_C_UpdateDisplaySettingsData::IsTelekinesisTargetable' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplaySettingsData, IsAnchored) == 0x000002, "Member 'WBP_PhysicsControllable_C_UpdateDisplaySettingsData::IsAnchored' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplaySettingsData, IsRestoringAttachmentAfterSimulation) == 0x000003, "Member 'WBP_PhysicsControllable_C_UpdateDisplaySettingsData::IsRestoringAttachmentAfterSimulation' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplaySettingsData, SimulationBehaviour) == 0x000004, "Member 'WBP_PhysicsControllable_C_UpdateDisplaySettingsData::SimulationBehaviour' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplaySettingsData, LoadingBehaviour) == 0x000005, "Member 'WBP_PhysicsControllable_C_UpdateDisplaySettingsData::LoadingBehaviour' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplaySettingsData, DoesRepositionOnLoad) == 0x000006, "Member 'WBP_PhysicsControllable_C_UpdateDisplaySettingsData::DoesRepositionOnLoad' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplaySettingsData, DoesReattachOnLoad) == 0x000007, "Member 'WBP_PhysicsControllable_C_UpdateDisplaySettingsData::DoesReattachOnLoad' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplaySettingsData, DoesGeneratePontoonsAtRuntime) == 0x000008, "Member 'WBP_PhysicsControllable_C_UpdateDisplaySettingsData::DoesGeneratePontoonsAtRuntime' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplaySettingsData, PontoonSizeScale) == 0x000010, "Member 'WBP_PhysicsControllable_C_UpdateDisplaySettingsData::PontoonSizeScale' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplaySettingsData, BuoyancyCoefficient) == 0x000018, "Member 'WBP_PhysicsControllable_C_UpdateDisplaySettingsData::BuoyancyCoefficient' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplaySettingsData, DoesPlayCollisionSounds) == 0x000020, "Member 'WBP_PhysicsControllable_C_UpdateDisplaySettingsData::DoesPlayCollisionSounds' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplaySettingsData, DefaultSurfaceType) == 0x000021, "Member 'WBP_PhysicsControllable_C_UpdateDisplaySettingsData::DefaultSurfaceType' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplaySettingsData, CallFunc_GetEnumeratorName_ReturnValue) == 0x000024, "Member 'WBP_PhysicsControllable_C_UpdateDisplaySettingsData::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplaySettingsData, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000030, "Member 'WBP_PhysicsControllable_C_UpdateDisplaySettingsData::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplaySettingsData, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000048, "Member 'WBP_PhysicsControllable_C_UpdateDisplaySettingsData::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplaySettingsData, CallFunc_GetEnumeratorName_ReturnValue_1) == 0x000060, "Member 'WBP_PhysicsControllable_C_UpdateDisplaySettingsData::CallFunc_GetEnumeratorName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplaySettingsData, CallFunc_GetEnumeratorName_ReturnValue_2) == 0x000068, "Member 'WBP_PhysicsControllable_C_UpdateDisplaySettingsData::CallFunc_GetEnumeratorName_ReturnValue_2' has a wrong offset!");

// Function WBP_PhysicsControllable.WBP_PhysicsControllable_C.UpdateDisplayStatusData
// 0x0010 (0x0010 - 0x0000)
struct WBP_PhysicsControllable_C_UpdateDisplayStatusData final
{
public:
	bool                                          IsPaired;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnabled;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSimulating;                                      // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVConstrainingMode                            ConstrainingMode;                                  // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSleeping;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUsingBuoyancy;                                   // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGrabbed;                                         // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PhysicsControllable_C_UpdateDisplayStatusData) == 0x000004, "Wrong alignment on WBP_PhysicsControllable_C_UpdateDisplayStatusData");
static_assert(sizeof(WBP_PhysicsControllable_C_UpdateDisplayStatusData) == 0x000010, "Wrong size on WBP_PhysicsControllable_C_UpdateDisplayStatusData");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayStatusData, IsPaired) == 0x000000, "Member 'WBP_PhysicsControllable_C_UpdateDisplayStatusData::IsPaired' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayStatusData, IsEnabled) == 0x000001, "Member 'WBP_PhysicsControllable_C_UpdateDisplayStatusData::IsEnabled' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayStatusData, IsSimulating) == 0x000002, "Member 'WBP_PhysicsControllable_C_UpdateDisplayStatusData::IsSimulating' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayStatusData, ConstrainingMode) == 0x000003, "Member 'WBP_PhysicsControllable_C_UpdateDisplayStatusData::ConstrainingMode' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayStatusData, IsSleeping) == 0x000004, "Member 'WBP_PhysicsControllable_C_UpdateDisplayStatusData::IsSleeping' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayStatusData, IsUsingBuoyancy) == 0x000005, "Member 'WBP_PhysicsControllable_C_UpdateDisplayStatusData::IsUsingBuoyancy' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayStatusData, IsGrabbed) == 0x000006, "Member 'WBP_PhysicsControllable_C_UpdateDisplayStatusData::IsGrabbed' has a wrong offset!");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateDisplayStatusData, CallFunc_GetEnumeratorName_ReturnValue) == 0x000008, "Member 'WBP_PhysicsControllable_C_UpdateDisplayStatusData::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");

// Function WBP_PhysicsControllable.WBP_PhysicsControllable_C.UpdateEntries
// 0x0010 (0x0010 - 0x0000)
struct WBP_PhysicsControllable_C_UpdateEntries final
{
public:
	TArray<class UVControllableEntry*>            ControllableEntries;                               // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_PhysicsControllable_C_UpdateEntries) == 0x000008, "Wrong alignment on WBP_PhysicsControllable_C_UpdateEntries");
static_assert(sizeof(WBP_PhysicsControllable_C_UpdateEntries) == 0x000010, "Wrong size on WBP_PhysicsControllable_C_UpdateEntries");
static_assert(offsetof(WBP_PhysicsControllable_C_UpdateEntries, ControllableEntries) == 0x000000, "Member 'WBP_PhysicsControllable_C_UpdateEntries::ControllableEntries' has a wrong offset!");

}

