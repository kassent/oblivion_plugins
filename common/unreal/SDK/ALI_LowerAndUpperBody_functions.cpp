#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ALI_LowerAndUpperBody

#include "Basic.hpp"

#include "ALI_LowerAndUpperBody_classes.hpp"
#include "ALI_LowerAndUpperBody_parameters.hpp"


namespace SDK
{

// Function ALI_LowerAndUpperBody.ALI_LowerAndUpperBody_C.LowerAndUpperBodyLayer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPoseLink&                 LowerBody                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// const struct FPoseLink&                 UpperBody                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       LowerAndUpperBodyLayer_0                               (Parm, OutParm, NoDestructor)

void IALI_LowerAndUpperBody_C::LowerAndUpperBodyLayer(const struct FPoseLink& LowerBody, const struct FPoseLink& UpperBody, struct FPoseLink* LowerAndUpperBodyLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ALI_LowerAndUpperBody_C", "LowerAndUpperBodyLayer");

	Params::ALI_LowerAndUpperBody_C_LowerAndUpperBodyLayer Parms{};

	Parms.LowerBody = std::move(LowerBody);
	Parms.UpperBody = std::move(UpperBody);

	AsUObject()->ProcessEvent(Func, &Parms);

	if (LowerAndUpperBodyLayer_0 != nullptr)
		*LowerAndUpperBodyLayer_0 = std::move(Parms.LowerAndUpperBodyLayer_0);
}

}

