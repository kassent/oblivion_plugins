#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AST_CharacterActionDodge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Altar_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function AST_CharacterActionDodge.AST_CharacterActionDodge_C.ComputeDodgeDirection
// 0x0070 (0x0070 - 0x0000)
struct AST_CharacterActionDodge_C_ComputeDodgeDirection final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetPI_ReturnValue;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNearlyZero2D_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Atan2_ReturnValue;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Round64_ReturnValue;                      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Percent_Int64Int64_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AST_CharacterActionDodge_C_ComputeDodgeDirection) == 0x000008, "Wrong alignment on AST_CharacterActionDodge_C_ComputeDodgeDirection");
static_assert(sizeof(AST_CharacterActionDodge_C_ComputeDodgeDirection) == 0x000070, "Wrong size on AST_CharacterActionDodge_C_ComputeDodgeDirection");
static_assert(offsetof(AST_CharacterActionDodge_C_ComputeDodgeDirection, ReturnValue) == 0x000000, "Member 'AST_CharacterActionDodge_C_ComputeDodgeDirection::ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ComputeDodgeDirection, CallFunc_GetPI_ReturnValue) == 0x000008, "Member 'AST_CharacterActionDodge_C_ComputeDodgeDirection::CallFunc_GetPI_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ComputeDodgeDirection, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'AST_CharacterActionDodge_C_ComputeDodgeDirection::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ComputeDodgeDirection, CallFunc_IsNearlyZero2D_ReturnValue) == 0x000018, "Member 'AST_CharacterActionDodge_C_ComputeDodgeDirection::CallFunc_IsNearlyZero2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ComputeDodgeDirection, CallFunc_BreakVector2D_X) == 0x000020, "Member 'AST_CharacterActionDodge_C_ComputeDodgeDirection::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ComputeDodgeDirection, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'AST_CharacterActionDodge_C_ComputeDodgeDirection::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ComputeDodgeDirection, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'AST_CharacterActionDodge_C_ComputeDodgeDirection::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ComputeDodgeDirection, CallFunc_Atan2_ReturnValue) == 0x000038, "Member 'AST_CharacterActionDodge_C_ComputeDodgeDirection::CallFunc_Atan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ComputeDodgeDirection, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000040, "Member 'AST_CharacterActionDodge_C_ComputeDodgeDirection::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ComputeDodgeDirection, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'AST_CharacterActionDodge_C_ComputeDodgeDirection::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ComputeDodgeDirection, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'AST_CharacterActionDodge_C_ComputeDodgeDirection::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ComputeDodgeDirection, CallFunc_Round64_ReturnValue) == 0x000058, "Member 'AST_CharacterActionDodge_C_ComputeDodgeDirection::CallFunc_Round64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ComputeDodgeDirection, CallFunc_Percent_Int64Int64_ReturnValue) == 0x000060, "Member 'AST_CharacterActionDodge_C_ComputeDodgeDirection::CallFunc_Percent_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ComputeDodgeDirection, CallFunc_Conv_Int64ToInt_ReturnValue) == 0x000068, "Member 'AST_CharacterActionDodge_C_ComputeDodgeDirection::CallFunc_Conv_Int64ToInt_ReturnValue' has a wrong offset!");

// Function AST_CharacterActionDodge.AST_CharacterActionDodge_C.ExecuteUbergraph_AST_CharacterActionDodge
// 0x0070 (0x0070 - 0x0000)
struct AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& EventTag, const class UAnimNotifyActionEventInfo* EventSource)> K2Node_CreateDelegate_OutputDelegate; // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag;                       // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	const class UAnimNotifyActionEventInfo*       K2Node_CustomEvent_EventSource;                    // 0x0020(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyGameplayTag_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue;      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDefaultBlendOutTime_ReturnValue;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVOblivionPlayerCharacter*              K2Node_DynamicCast_AsVOblivion_Player_Character;   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue_1;    // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDefaultBlendOutTime_ReturnValue_1;     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge) == 0x000008, "Wrong alignment on AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge");
static_assert(sizeof(AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge) == 0x000070, "Wrong size on AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge");
static_assert(offsetof(AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge, EntryPoint) == 0x000000, "Member 'AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge::EntryPoint' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge, K2Node_Event_DeltaTime) == 0x000014, "Member 'AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge, K2Node_CustomEvent_EventTag) == 0x000018, "Member 'AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge, K2Node_CustomEvent_EventSource) == 0x000020, "Member 'AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge::K2Node_CustomEvent_EventSource' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge, CallFunc_HasAnyGameplayTag_ReturnValue) == 0x000028, "Member 'AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge::CallFunc_HasAnyGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge, CallFunc_GetAnimInstance_ReturnValue) == 0x000030, "Member 'AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge, CallFunc_GetCurrentActiveMontage_ReturnValue) == 0x000038, "Member 'AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge::CallFunc_GetCurrentActiveMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge, CallFunc_GetDefaultBlendOutTime_ReturnValue) == 0x000040, "Member 'AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge::CallFunc_GetDefaultBlendOutTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge, K2Node_DynamicCast_AsVOblivion_Player_Character) == 0x000048, "Member 'AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge::K2Node_DynamicCast_AsVOblivion_Player_Character' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000058, "Member 'AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge, CallFunc_GetCurrentActiveMontage_ReturnValue_1) == 0x000060, "Member 'AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge::CallFunc_GetCurrentActiveMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge, CallFunc_GetDefaultBlendOutTime_ReturnValue_1) == 0x000068, "Member 'AST_CharacterActionDodge_C_ExecuteUbergraph_AST_CharacterActionDodge::CallFunc_GetDefaultBlendOutTime_ReturnValue_1' has a wrong offset!");

// Function AST_CharacterActionDodge.AST_CharacterActionDodge_C.GetAnimTagsOverride
// 0x0010 (0x0010 - 0x0000)
struct AST_CharacterActionDodge_C_GetAnimTagsOverride final
{
public:
	struct FGameplayTag                           OutGameplayTag;                                    // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ComputeDodgeDirection_ReturnValue;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AST_CharacterActionDodge_C_GetAnimTagsOverride) == 0x000004, "Wrong alignment on AST_CharacterActionDodge_C_GetAnimTagsOverride");
static_assert(sizeof(AST_CharacterActionDodge_C_GetAnimTagsOverride) == 0x000010, "Wrong size on AST_CharacterActionDodge_C_GetAnimTagsOverride");
static_assert(offsetof(AST_CharacterActionDodge_C_GetAnimTagsOverride, OutGameplayTag) == 0x000000, "Member 'AST_CharacterActionDodge_C_GetAnimTagsOverride::OutGameplayTag' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_GetAnimTagsOverride, CallFunc_ComputeDodgeDirection_ReturnValue) == 0x000008, "Member 'AST_CharacterActionDodge_C_GetAnimTagsOverride::CallFunc_ComputeDodgeDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_GetAnimTagsOverride, K2Node_SwitchInteger_CmpSuccess) == 0x00000C, "Member 'AST_CharacterActionDodge_C_GetAnimTagsOverride::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function AST_CharacterActionDodge.AST_CharacterActionDodge_C.GetDodgeType
// 0x0003 (0x0003 - 0x0000)
struct AST_CharacterActionDodge_C_GetDodgeType final
{
public:
	EVActionType                                  DodgeType;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVMoveDirection                               CallFunc_GetMovementDirection_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AST_CharacterActionDodge_C_GetDodgeType) == 0x000001, "Wrong alignment on AST_CharacterActionDodge_C_GetDodgeType");
static_assert(sizeof(AST_CharacterActionDodge_C_GetDodgeType) == 0x000003, "Wrong size on AST_CharacterActionDodge_C_GetDodgeType");
static_assert(offsetof(AST_CharacterActionDodge_C_GetDodgeType, DodgeType) == 0x000000, "Member 'AST_CharacterActionDodge_C_GetDodgeType::DodgeType' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_GetDodgeType, CallFunc_GetMovementDirection_ReturnValue) == 0x000001, "Member 'AST_CharacterActionDodge_C_GetDodgeType::CallFunc_GetMovementDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_GetDodgeType, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'AST_CharacterActionDodge_C_GetDodgeType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function AST_CharacterActionDodge.AST_CharacterActionDodge_C.On Controlled Pawn Animated Action Event
// 0x0100 (0x0100 - 0x0000)
struct AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event final
{
public:
	struct FAnimNotifyEvent                       AnimNotifyEvent;                                   // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayTag                           EventTag;                                          // 0x00B8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UBP_ActionNotifyState_TagContainer_C* K2Node_DynamicCast_AsBP_Action_Notify_State_Tag_Container; // 0x00D0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x00E0(0x0010)(ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x00F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGameplayTag_ReturnValue;            // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event) == 0x000008, "Wrong alignment on AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event");
static_assert(sizeof(AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event) == 0x000100, "Wrong size on AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event");
static_assert(offsetof(AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event, AnimNotifyEvent) == 0x000000, "Member 'AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event::AnimNotifyEvent' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event, EventTag) == 0x0000B8, "Member 'AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event::EventTag' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event, Temp_int_Loop_Counter_Variable) == 0x0000C0, "Member 'AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x0000C4, "Member 'AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event, CallFunc_Add_IntInt_ReturnValue) == 0x0000C8, "Member 'AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event, Temp_int_Array_Index_Variable) == 0x0000CC, "Member 'AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event, K2Node_DynamicCast_AsBP_Action_Notify_State_Tag_Container) == 0x0000D0, "Member 'AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event::K2Node_DynamicCast_AsBP_Action_Notify_State_Tag_Container' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x0000E0, "Member 'AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event, CallFunc_Array_Length_ReturnValue) == 0x0000F8, "Member 'AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event, CallFunc_Less_IntInt_ReturnValue) == 0x0000FC, "Member 'AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event, CallFunc_RemoveGameplayTag_ReturnValue) == 0x0000FD, "Member 'AST_CharacterActionDodge_C_On_Controlled_Pawn_Animated_Action_Event::CallFunc_RemoveGameplayTag_ReturnValue' has a wrong offset!");

// Function AST_CharacterActionDodge.AST_CharacterActionDodge_C.OnAnimatedActionEvent
// 0x0010 (0x0010 - 0x0000)
struct AST_CharacterActionDodge_C_OnAnimatedActionEvent final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	const class UAnimNotifyActionEventInfo*       EventSource;                                       // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AST_CharacterActionDodge_C_OnAnimatedActionEvent) == 0x000008, "Wrong alignment on AST_CharacterActionDodge_C_OnAnimatedActionEvent");
static_assert(sizeof(AST_CharacterActionDodge_C_OnAnimatedActionEvent) == 0x000010, "Wrong size on AST_CharacterActionDodge_C_OnAnimatedActionEvent");
static_assert(offsetof(AST_CharacterActionDodge_C_OnAnimatedActionEvent, EventTag) == 0x000000, "Member 'AST_CharacterActionDodge_C_OnAnimatedActionEvent::EventTag' has a wrong offset!");
static_assert(offsetof(AST_CharacterActionDodge_C_OnAnimatedActionEvent, EventSource) == 0x000008, "Member 'AST_CharacterActionDodge_C_OnAnimatedActionEvent::EventSource' has a wrong offset!");

// Function AST_CharacterActionDodge.AST_CharacterActionDodge_C.OnStateUpdate
// 0x0004 (0x0004 - 0x0000)
struct AST_CharacterActionDodge_C_OnStateUpdate final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AST_CharacterActionDodge_C_OnStateUpdate) == 0x000004, "Wrong alignment on AST_CharacterActionDodge_C_OnStateUpdate");
static_assert(sizeof(AST_CharacterActionDodge_C_OnStateUpdate) == 0x000004, "Wrong size on AST_CharacterActionDodge_C_OnStateUpdate");
static_assert(offsetof(AST_CharacterActionDodge_C_OnStateUpdate, DeltaTime) == 0x000000, "Member 'AST_CharacterActionDodge_C_OnStateUpdate::DeltaTime' has a wrong offset!");

}

