#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_VFXFunctionLibrary

#include "Basic.hpp"

#include "ENiagara_FadingMode_structs.hpp"
#include "ENiagara_CharacterSockets_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BPFL_VFXFunctionLibrary.BPFL_VFXFunctionLibrary_C.Activate Actor Component
// 0x0018 (0x0018 - 0x0000)
struct BPFL_VFXFunctionLibrary_C_Activate_Actor_Component final
{
public:
	class UActorComponent*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Reset;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_VFXFunctionLibrary_C_Activate_Actor_Component) == 0x000008, "Wrong alignment on BPFL_VFXFunctionLibrary_C_Activate_Actor_Component");
static_assert(sizeof(BPFL_VFXFunctionLibrary_C_Activate_Actor_Component) == 0x000018, "Wrong size on BPFL_VFXFunctionLibrary_C_Activate_Actor_Component");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Activate_Actor_Component, Target) == 0x000000, "Member 'BPFL_VFXFunctionLibrary_C_Activate_Actor_Component::Target' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Activate_Actor_Component, Reset) == 0x000008, "Member 'BPFL_VFXFunctionLibrary_C_Activate_Actor_Component::Reset' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Activate_Actor_Component, Condition) == 0x000009, "Member 'BPFL_VFXFunctionLibrary_C_Activate_Actor_Component::Condition' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Activate_Actor_Component, __WorldContext) == 0x000010, "Member 'BPFL_VFXFunctionLibrary_C_Activate_Actor_Component::__WorldContext' has a wrong offset!");

// Function BPFL_VFXFunctionLibrary.BPFL_VFXFunctionLibrary_C.Activate Niagara System
// 0x0018 (0x0018 - 0x0000)
struct BPFL_VFXFunctionLibrary_C_Activate_Niagara_System final
{
public:
	class UNiagaraComponent*                      System;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_VFXFunctionLibrary_C_Activate_Niagara_System) == 0x000008, "Wrong alignment on BPFL_VFXFunctionLibrary_C_Activate_Niagara_System");
static_assert(sizeof(BPFL_VFXFunctionLibrary_C_Activate_Niagara_System) == 0x000018, "Wrong size on BPFL_VFXFunctionLibrary_C_Activate_Niagara_System");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Activate_Niagara_System, System) == 0x000000, "Member 'BPFL_VFXFunctionLibrary_C_Activate_Niagara_System::System' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Activate_Niagara_System, Condition) == 0x000008, "Member 'BPFL_VFXFunctionLibrary_C_Activate_Niagara_System::Condition' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Activate_Niagara_System, __WorldContext) == 0x000010, "Member 'BPFL_VFXFunctionLibrary_C_Activate_Niagara_System::__WorldContext' has a wrong offset!");

// Function BPFL_VFXFunctionLibrary.BPFL_VFXFunctionLibrary_C.Activate Niagara System Array
// 0x0050 (0x0050 - 0x0000)
struct BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array final
{
public:
	TArray<class UNiagaraComponent*>              System_Array;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<bool>                                  Condition;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_1;                         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array) == 0x000008, "Wrong alignment on BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array");
static_assert(sizeof(BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array) == 0x000050, "Wrong size on BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array, System_Array) == 0x000000, "Member 'BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array::System_Array' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array, Condition) == 0x000010, "Member 'BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array::Condition' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array, __WorldContext) == 0x000020, "Member 'BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array, CallFunc_Array_Get_Item) == 0x000038, "Member 'BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'BPFL_VFXFunctionLibrary_C_Activate_Niagara_System_Array::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function BPFL_VFXFunctionLibrary.BPFL_VFXFunctionLibrary_C.Deactivate Actor Component
// 0x0018 (0x0018 - 0x0000)
struct BPFL_VFXFunctionLibrary_C_Deactivate_Actor_Component final
{
public:
	class UActorComponent*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_VFXFunctionLibrary_C_Deactivate_Actor_Component) == 0x000008, "Wrong alignment on BPFL_VFXFunctionLibrary_C_Deactivate_Actor_Component");
static_assert(sizeof(BPFL_VFXFunctionLibrary_C_Deactivate_Actor_Component) == 0x000018, "Wrong size on BPFL_VFXFunctionLibrary_C_Deactivate_Actor_Component");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Deactivate_Actor_Component, Target) == 0x000000, "Member 'BPFL_VFXFunctionLibrary_C_Deactivate_Actor_Component::Target' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Deactivate_Actor_Component, Condition) == 0x000008, "Member 'BPFL_VFXFunctionLibrary_C_Deactivate_Actor_Component::Condition' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Deactivate_Actor_Component, __WorldContext) == 0x000010, "Member 'BPFL_VFXFunctionLibrary_C_Deactivate_Actor_Component::__WorldContext' has a wrong offset!");

// Function BPFL_VFXFunctionLibrary.BPFL_VFXFunctionLibrary_C.Debug_NiagaraBoxLocation
// 0x0050 (0x0050 - 0x0000)
struct BPFL_VFXFunctionLibrary_C_Debug_NiagaraBoxLocation final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      Debug_System;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Parent_BoxLocation;                                // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Parent_BoxOffset;                                  // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraBoxLocation) == 0x000008, "Wrong alignment on BPFL_VFXFunctionLibrary_C_Debug_NiagaraBoxLocation");
static_assert(sizeof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraBoxLocation) == 0x000050, "Wrong size on BPFL_VFXFunctionLibrary_C_Debug_NiagaraBoxLocation");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraBoxLocation, Enable) == 0x000000, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraBoxLocation::Enable' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraBoxLocation, Debug_System) == 0x000008, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraBoxLocation::Debug_System' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraBoxLocation, Parent_BoxLocation) == 0x000010, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraBoxLocation::Parent_BoxLocation' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraBoxLocation, Parent_BoxOffset) == 0x000028, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraBoxLocation::Parent_BoxOffset' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraBoxLocation, __WorldContext) == 0x000040, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraBoxLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraBoxLocation, CallFunc_IsEditor_ReturnValue) == 0x000048, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraBoxLocation::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraBoxLocation, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraBoxLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BPFL_VFXFunctionLibrary.BPFL_VFXFunctionLibrary_C.Debug_NiagaraCylinderLocation
// 0x0068 (0x0068 - 0x0000)
struct BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      Debug_System;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Parent_Cylinder_Radius;                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Parent_Cylinder_Height;                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Parent_Cylinder_Scale;                             // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Parent_Cylinder_Offset;                            // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetVariableFloat_InValue_ImplicitCast;    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVariableFloat_InValue_ImplicitCast_1;  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation) == 0x000008, "Wrong alignment on BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation");
static_assert(sizeof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation) == 0x000068, "Wrong size on BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation, Enable) == 0x000000, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation::Enable' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation, Debug_System) == 0x000008, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation::Debug_System' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation, Parent_Cylinder_Radius) == 0x000010, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation::Parent_Cylinder_Radius' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation, Parent_Cylinder_Height) == 0x000018, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation::Parent_Cylinder_Height' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation, Parent_Cylinder_Scale) == 0x000020, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation::Parent_Cylinder_Scale' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation, Parent_Cylinder_Offset) == 0x000038, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation::Parent_Cylinder_Offset' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation, __WorldContext) == 0x000050, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation, CallFunc_IsEditor_ReturnValue) == 0x000058, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation, CallFunc_SetVariableFloat_InValue_ImplicitCast) == 0x00005C, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation::CallFunc_SetVariableFloat_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation, CallFunc_SetVariableFloat_InValue_ImplicitCast_1) == 0x000060, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraCylinderLocation::CallFunc_SetVariableFloat_InValue_ImplicitCast_1' has a wrong offset!");

// Function BPFL_VFXFunctionLibrary.BPFL_VFXFunctionLibrary_C.Debug_NiagaraSphereLocation
// 0x0058 (0x0058 - 0x0000)
struct BPFL_VFXFunctionLibrary_C_Debug_NiagaraSphereLocation final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      Debug_System;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Parent_Sphere_Radius;                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Parent_Sphere_Scale;                               // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Parent_Sphere_Offset;                              // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetVariableFloat_InValue_ImplicitCast;    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraSphereLocation) == 0x000008, "Wrong alignment on BPFL_VFXFunctionLibrary_C_Debug_NiagaraSphereLocation");
static_assert(sizeof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraSphereLocation) == 0x000058, "Wrong size on BPFL_VFXFunctionLibrary_C_Debug_NiagaraSphereLocation");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraSphereLocation, Enable) == 0x000000, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraSphereLocation::Enable' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraSphereLocation, Debug_System) == 0x000008, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraSphereLocation::Debug_System' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraSphereLocation, Parent_Sphere_Radius) == 0x000010, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraSphereLocation::Parent_Sphere_Radius' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraSphereLocation, Parent_Sphere_Scale) == 0x000018, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraSphereLocation::Parent_Sphere_Scale' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraSphereLocation, Parent_Sphere_Offset) == 0x000030, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraSphereLocation::Parent_Sphere_Offset' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraSphereLocation, __WorldContext) == 0x000048, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraSphereLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraSphereLocation, CallFunc_IsEditor_ReturnValue) == 0x000050, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraSphereLocation::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraSphereLocation, CallFunc_BooleanAND_ReturnValue) == 0x000051, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraSphereLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Debug_NiagaraSphereLocation, CallFunc_SetVariableFloat_InValue_ImplicitCast) == 0x000054, "Member 'BPFL_VFXFunctionLibrary_C_Debug_NiagaraSphereLocation::CallFunc_SetVariableFloat_InValue_ImplicitCast' has a wrong offset!");

// Function BPFL_VFXFunctionLibrary.BPFL_VFXFunctionLibrary_C.Get Actor Component Location Data
// 0x0188 (0x0188 - 0x0000)
struct BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Component_Class;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Player;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Root_Location;                                     // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MidPoint_Location;                                 // 0x0038(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Height;                                            // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Width;                                             // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Depth;                                             // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Actor_Root_Location;                               // 0x0068(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Actor_MidPoint_Location;                           // 0x0080(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Actor_Depth;                                       // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Actor_Width;                                       // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Actor_Height;                                      // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Player_Actor;                                   // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Target_Actor;                                      // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Player_Actor_Is_Player;                // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AVOblivionPlayerCharacter*              CallFunc_Is_Player_Actor_AsVOblivion_Player_Character; // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data) == 0x000008, "Wrong alignment on BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data");
static_assert(sizeof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data) == 0x000188, "Wrong size on BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, Target) == 0x000000, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::Target' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, Component_Class) == 0x000008, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::Component_Class' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, __WorldContext) == 0x000010, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, Is_Player) == 0x000018, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::Is_Player' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, Root_Location) == 0x000020, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::Root_Location' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, MidPoint_Location) == 0x000038, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::MidPoint_Location' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, Height) == 0x000050, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::Height' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, Width) == 0x000058, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::Width' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, Depth) == 0x000060, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::Depth' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, Actor_Root_Location) == 0x000068, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::Actor_Root_Location' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, Actor_MidPoint_Location) == 0x000080, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::Actor_MidPoint_Location' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, Actor_Depth) == 0x000098, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::Actor_Depth' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, Actor_Width) == 0x0000A0, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::Actor_Width' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, Actor_Height) == 0x0000A8, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::Actor_Height' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, Is_Player_Actor) == 0x0000B0, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::Is_Player_Actor' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, Target_Actor) == 0x0000B8, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::Target_Actor' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0000C0, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, CallFunc_Is_Player_Actor_Is_Player) == 0x0000C1, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::CallFunc_Is_Player_Actor_Is_Player' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, CallFunc_Is_Player_Actor_AsVOblivion_Player_Character) == 0x0000C8, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::CallFunc_Is_Player_Actor_AsVOblivion_Player_Character' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000D0, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, CallFunc_GetComponentByClass_ReturnValue) == 0x0000E8, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, CallFunc_GetComponentBounds_Origin) == 0x0000F0, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, CallFunc_GetComponentBounds_BoxExtent) == 0x000108, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, CallFunc_GetComponentBounds_SphereRadius) == 0x000120, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, CallFunc_BreakVector_X) == 0x000128, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, CallFunc_BreakVector_Y) == 0x000130, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, CallFunc_BreakVector_Z) == 0x000138, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000140, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, CallFunc_MakeVector_ReturnValue) == 0x000148, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000160, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000178, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000180, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Component_Location_Data::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function BPFL_VFXFunctionLibrary.BPFL_VFXFunctionLibrary_C.Get Actor Skeletal Component Location Data
// 0x0170 (0x0170 - 0x0000)
struct BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Player;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Root_Location;                                     // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MidPoint_Location;                                 // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Height;                                            // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Width;                                             // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Depth;                                             // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Actor_Root_Location;                               // 0x0060(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Actor_MidPoint_Location;                           // 0x0078(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Actor_Depth;                                       // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Actor_Width;                                       // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Actor_Height;                                      // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Player_Actor;                                   // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Player_Actor_Is_Player;                // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AVOblivionPlayerCharacter*              CallFunc_Is_Player_Actor_AsVOblivion_Player_Character; // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data) == 0x000008, "Wrong alignment on BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data");
static_assert(sizeof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data) == 0x000170, "Wrong size on BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, Target) == 0x000000, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::Target' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, __WorldContext) == 0x000008, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, Is_Player) == 0x000010, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::Is_Player' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, Root_Location) == 0x000018, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::Root_Location' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, MidPoint_Location) == 0x000030, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::MidPoint_Location' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, Height) == 0x000048, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::Height' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, Width) == 0x000050, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::Width' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, Depth) == 0x000058, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::Depth' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, Actor_Root_Location) == 0x000060, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::Actor_Root_Location' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, Actor_MidPoint_Location) == 0x000078, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::Actor_MidPoint_Location' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, Actor_Depth) == 0x000090, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::Actor_Depth' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, Actor_Width) == 0x000098, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::Actor_Width' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, Actor_Height) == 0x0000A0, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::Actor_Height' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, Is_Player_Actor) == 0x0000A8, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::Is_Player_Actor' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, CallFunc_Is_Player_Actor_Is_Player) == 0x0000A9, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::CallFunc_Is_Player_Actor_Is_Player' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, CallFunc_Is_Player_Actor_AsVOblivion_Player_Character) == 0x0000B0, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::CallFunc_Is_Player_Actor_AsVOblivion_Player_Character' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B8, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, CallFunc_GetComponentByClass_ReturnValue) == 0x0000D0, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, CallFunc_GetComponentBounds_Origin) == 0x0000D8, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, CallFunc_GetComponentBounds_BoxExtent) == 0x0000F0, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, CallFunc_GetComponentBounds_SphereRadius) == 0x000108, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, CallFunc_BreakVector_X) == 0x000110, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, CallFunc_BreakVector_Y) == 0x000118, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, CallFunc_BreakVector_Z) == 0x000120, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, CallFunc_MakeVector_ReturnValue) == 0x000128, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000140, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000148, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000160, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000168, "Member 'BPFL_VFXFunctionLibrary_C_Get_Actor_Skeletal_Component_Location_Data::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function BPFL_VFXFunctionLibrary.BPFL_VFXFunctionLibrary_C.Get Character VFX Socket Location
// 0x0138 (0x0138 - 0x0000)
struct BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ENiagara_CharacterSockets                     Socket_Selection;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_2;                              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_3;                              // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENiagara_CharacterSockets                     Temp_byte_Variable;                                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_4;                              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_1;            // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_2;            // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_3;            // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_2;            // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_3;            // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_2;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_3;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_4;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location) == 0x000008, "Wrong alignment on BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location");
static_assert(sizeof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location) == 0x000138, "Wrong size on BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, Target) == 0x000000, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::Target' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, Socket_Selection) == 0x000008, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::Socket_Selection' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, __WorldContext) == 0x000010, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, Location) == 0x000018, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::Location' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, Temp_bool_Variable) == 0x000030, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, CallFunc_MakeLiteralByte_ReturnValue) == 0x000031, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, CallFunc_IsValid_ReturnValue) == 0x000032, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000033, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, Temp_name_Variable) == 0x000040, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000048, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, Temp_bool_Variable_1) == 0x000060, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, Temp_name_Variable_1) == 0x000064, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, Temp_bool_Variable_2) == 0x00006C, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, Temp_name_Variable_2) == 0x000070, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, Temp_bool_Variable_3) == 0x000078, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, Temp_name_Variable_3) == 0x00007C, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, Temp_byte_Variable) == 0x000084, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, Temp_name_Variable_4) == 0x000088, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, Temp_name_Variable_5) == 0x000090, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, Temp_name_Variable_6) == 0x000098, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, Temp_name_Variable_7) == 0x0000A0, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, Temp_name_Variable_8) == 0x0000A8, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, Temp_name_Variable_9) == 0x0000B0, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, CallFunc_MakeLiteralName_ReturnValue) == 0x0000B8, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, CallFunc_MakeLiteralName_ReturnValue_1) == 0x0000C0, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, CallFunc_DoesSocketExist_ReturnValue) == 0x0000C8, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, CallFunc_DoesSocketExist_ReturnValue_1) == 0x0000C9, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::CallFunc_DoesSocketExist_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, K2Node_Select_Default) == 0x0000CC, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, K2Node_Select_Default_1) == 0x0000D4, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, CallFunc_MakeLiteralName_ReturnValue_2) == 0x0000DC, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::CallFunc_MakeLiteralName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, CallFunc_MakeLiteralName_ReturnValue_3) == 0x0000E4, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::CallFunc_MakeLiteralName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, CallFunc_DoesSocketExist_ReturnValue_2) == 0x0000EC, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::CallFunc_DoesSocketExist_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, CallFunc_DoesSocketExist_ReturnValue_3) == 0x0000ED, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::CallFunc_DoesSocketExist_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, K2Node_Select_Default_2) == 0x0000F0, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, K2Node_Select_Default_3) == 0x0000F8, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, K2Node_Select_Default_4) == 0x000100, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, CallFunc_GetSocketLocation_ReturnValue) == 0x000108, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location, CallFunc_SelectVector_ReturnValue) == 0x000120, "Member 'BPFL_VFXFunctionLibrary_C_Get_Character_VFX_Socket_Location::CallFunc_SelectVector_ReturnValue' has a wrong offset!");

// Function BPFL_VFXFunctionLibrary.BPFL_VFXFunctionLibrary_C.Get Player VFX Socket Location
// 0x0148 (0x0148 - 0x0000)
struct BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location final
{
public:
	class AVOblivionPlayerCharacter*              Player_Character;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ENiagara_CharacterSockets                     Socket_Selection;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_FPV;                                            // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_2;                              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_3;                              // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENiagara_CharacterSockets                     Temp_byte_Variable;                                // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_Select_Default;                             // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_1;            // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_2;            // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_2;            // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_1;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_3;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_2;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_3;            // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_3;                           // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_4;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_5;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location) == 0x000008, "Wrong alignment on BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location");
static_assert(sizeof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location) == 0x000148, "Wrong size on BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, Player_Character) == 0x000000, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::Player_Character' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, Socket_Selection) == 0x000008, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::Socket_Selection' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, Is_FPV) == 0x000009, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::Is_FPV' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, __WorldContext) == 0x000010, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, Location) == 0x000018, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::Location' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, Temp_name_Variable) == 0x000030, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, CallFunc_MakeLiteralByte_ReturnValue) == 0x000038, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000039, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000040, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000048, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, Temp_bool_Variable) == 0x000060, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, Temp_name_Variable_1) == 0x000064, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, Temp_bool_Variable_1) == 0x00006C, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, Temp_name_Variable_2) == 0x000070, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, Temp_bool_Variable_2) == 0x000078, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, Temp_name_Variable_3) == 0x00007C, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, Temp_bool_Variable_3) == 0x000084, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, Temp_byte_Variable) == 0x000085, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, K2Node_Select_Default) == 0x000088, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, Temp_name_Variable_4) == 0x000090, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, Temp_name_Variable_5) == 0x000098, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, Temp_name_Variable_6) == 0x0000A0, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, Temp_name_Variable_7) == 0x0000A8, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, Temp_name_Variable_8) == 0x0000B0, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, Temp_name_Variable_9) == 0x0000B8, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, CallFunc_MakeLiteralName_ReturnValue) == 0x0000C0, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, CallFunc_MakeLiteralName_ReturnValue_1) == 0x0000C8, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, CallFunc_DoesSocketExist_ReturnValue) == 0x0000D0, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, CallFunc_DoesSocketExist_ReturnValue_1) == 0x0000D1, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::CallFunc_DoesSocketExist_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, CallFunc_MakeLiteralName_ReturnValue_2) == 0x0000D4, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::CallFunc_MakeLiteralName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, CallFunc_DoesSocketExist_ReturnValue_2) == 0x0000DC, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::CallFunc_DoesSocketExist_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, K2Node_Select_Default_1) == 0x0000E0, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, CallFunc_MakeLiteralName_ReturnValue_3) == 0x0000E8, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::CallFunc_MakeLiteralName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, K2Node_Select_Default_2) == 0x0000F0, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, CallFunc_DoesSocketExist_ReturnValue_3) == 0x0000F8, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::CallFunc_DoesSocketExist_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, K2Node_Select_Default_3) == 0x0000FC, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, Temp_bool_Variable_4) == 0x000104, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, K2Node_Select_Default_4) == 0x000108, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, K2Node_Select_Default_5) == 0x000110, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, CallFunc_GetSocketLocation_ReturnValue) == 0x000118, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location, CallFunc_SelectVector_ReturnValue) == 0x000130, "Member 'BPFL_VFXFunctionLibrary_C_Get_Player_VFX_Socket_Location::CallFunc_SelectVector_ReturnValue' has a wrong offset!");

// Function BPFL_VFXFunctionLibrary.BPFL_VFXFunctionLibrary_C.Is Inbetween
// 0x0028 (0x0028 - 0x0000)
struct BPFL_VFXFunctionLibrary_C_Is_Inbetween final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Min;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max;                                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_VFXFunctionLibrary_C_Is_Inbetween) == 0x000008, "Wrong alignment on BPFL_VFXFunctionLibrary_C_Is_Inbetween");
static_assert(sizeof(BPFL_VFXFunctionLibrary_C_Is_Inbetween) == 0x000028, "Wrong size on BPFL_VFXFunctionLibrary_C_Is_Inbetween");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Is_Inbetween, Value) == 0x000000, "Member 'BPFL_VFXFunctionLibrary_C_Is_Inbetween::Value' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Is_Inbetween, Min) == 0x000008, "Member 'BPFL_VFXFunctionLibrary_C_Is_Inbetween::Min' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Is_Inbetween, Max) == 0x000010, "Member 'BPFL_VFXFunctionLibrary_C_Is_Inbetween::Max' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Is_Inbetween, __WorldContext) == 0x000018, "Member 'BPFL_VFXFunctionLibrary_C_Is_Inbetween::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Is_Inbetween, NewParam) == 0x000020, "Member 'BPFL_VFXFunctionLibrary_C_Is_Inbetween::NewParam' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Is_Inbetween, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000021, "Member 'BPFL_VFXFunctionLibrary_C_Is_Inbetween::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Is_Inbetween, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000022, "Member 'BPFL_VFXFunctionLibrary_C_Is_Inbetween::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Is_Inbetween, CallFunc_BooleanAND_ReturnValue) == 0x000023, "Member 'BPFL_VFXFunctionLibrary_C_Is_Inbetween::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BPFL_VFXFunctionLibrary.BPFL_VFXFunctionLibrary_C.Is Inbetween or Equal
// 0x0028 (0x0028 - 0x0000)
struct BPFL_VFXFunctionLibrary_C_Is_Inbetween_or_Equal final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Min;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max;                                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_VFXFunctionLibrary_C_Is_Inbetween_or_Equal) == 0x000008, "Wrong alignment on BPFL_VFXFunctionLibrary_C_Is_Inbetween_or_Equal");
static_assert(sizeof(BPFL_VFXFunctionLibrary_C_Is_Inbetween_or_Equal) == 0x000028, "Wrong size on BPFL_VFXFunctionLibrary_C_Is_Inbetween_or_Equal");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Is_Inbetween_or_Equal, Value) == 0x000000, "Member 'BPFL_VFXFunctionLibrary_C_Is_Inbetween_or_Equal::Value' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Is_Inbetween_or_Equal, Min) == 0x000008, "Member 'BPFL_VFXFunctionLibrary_C_Is_Inbetween_or_Equal::Min' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Is_Inbetween_or_Equal, Max) == 0x000010, "Member 'BPFL_VFXFunctionLibrary_C_Is_Inbetween_or_Equal::Max' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Is_Inbetween_or_Equal, __WorldContext) == 0x000018, "Member 'BPFL_VFXFunctionLibrary_C_Is_Inbetween_or_Equal::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Is_Inbetween_or_Equal, NewParam) == 0x000020, "Member 'BPFL_VFXFunctionLibrary_C_Is_Inbetween_or_Equal::NewParam' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Is_Inbetween_or_Equal, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000021, "Member 'BPFL_VFXFunctionLibrary_C_Is_Inbetween_or_Equal::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Is_Inbetween_or_Equal, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000022, "Member 'BPFL_VFXFunctionLibrary_C_Is_Inbetween_or_Equal::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Is_Inbetween_or_Equal, CallFunc_BooleanAND_ReturnValue) == 0x000023, "Member 'BPFL_VFXFunctionLibrary_C_Is_Inbetween_or_Equal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BPFL_VFXFunctionLibrary.BPFL_VFXFunctionLibrary_C.Is Player Actor
// 0x0030 (0x0030 - 0x0000)
struct BPFL_VFXFunctionLibrary_C_Is_Player_Actor final
{
public:
	class AActor*                                 Target_Actor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Player;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AVOblivionPlayerCharacter*              AsVOblivion_Player_Character;                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AVOblivionPlayerCharacter*              K2Node_DynamicCast_AsVOblivion_Player_Character;   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_VFXFunctionLibrary_C_Is_Player_Actor) == 0x000008, "Wrong alignment on BPFL_VFXFunctionLibrary_C_Is_Player_Actor");
static_assert(sizeof(BPFL_VFXFunctionLibrary_C_Is_Player_Actor) == 0x000030, "Wrong size on BPFL_VFXFunctionLibrary_C_Is_Player_Actor");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Is_Player_Actor, Target_Actor) == 0x000000, "Member 'BPFL_VFXFunctionLibrary_C_Is_Player_Actor::Target_Actor' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Is_Player_Actor, __WorldContext) == 0x000008, "Member 'BPFL_VFXFunctionLibrary_C_Is_Player_Actor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Is_Player_Actor, Is_Player) == 0x000010, "Member 'BPFL_VFXFunctionLibrary_C_Is_Player_Actor::Is_Player' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Is_Player_Actor, AsVOblivion_Player_Character) == 0x000018, "Member 'BPFL_VFXFunctionLibrary_C_Is_Player_Actor::AsVOblivion_Player_Character' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Is_Player_Actor, K2Node_DynamicCast_AsVOblivion_Player_Character) == 0x000020, "Member 'BPFL_VFXFunctionLibrary_C_Is_Player_Actor::K2Node_DynamicCast_AsVOblivion_Player_Character' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Is_Player_Actor, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPFL_VFXFunctionLibrary_C_Is_Player_Actor::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BPFL_VFXFunctionLibrary.BPFL_VFXFunctionLibrary_C.Point Light Fading
// 0x00C0 (0x00C0 - 0x0000)
struct BPFL_VFXFunctionLibrary_C_Point_Light_Fading final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPointLightComponent*                   Point_Light_Component;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Owner_Age;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Maximum_Intensity;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fading_Duration;                                   // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Delay;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Fade_Out;                                       // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Owner_Death_Age;                                   // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fading_is_Finished;                                // 0x0049(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_1; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading) == 0x000008, "Wrong alignment on BPFL_VFXFunctionLibrary_C_Point_Light_Fading");
static_assert(sizeof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading) == 0x0000C0, "Wrong size on BPFL_VFXFunctionLibrary_C_Point_Light_Fading");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, Enabled) == 0x000000, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::Enabled' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, Point_Light_Component) == 0x000008, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::Point_Light_Component' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, Owner_Age) == 0x000010, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::Owner_Age' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, Maximum_Intensity) == 0x000018, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::Maximum_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, Fading_Duration) == 0x000020, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::Fading_Duration' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, Delay) == 0x000028, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::Delay' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, Is_Fade_Out) == 0x000030, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::Is_Fade_Out' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, Owner_Death_Age) == 0x000038, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::Owner_Death_Age' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, __WorldContext) == 0x000040, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, NewParam) == 0x000048, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::NewParam' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, Fading_is_Finished) == 0x000049, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::Fading_is_Finished' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, CallFunc_Not_PreBool_ReturnValue) == 0x00004A, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000050, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000058, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, CallFunc_FMax_ReturnValue) == 0x000060, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000068, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000069, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, CallFunc_FClamp_ReturnValue) == 0x000070, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000080, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000088, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, CallFunc_FMax_ReturnValue_1) == 0x000098, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000A1, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, CallFunc_BooleanAND_ReturnValue) == 0x0000A2, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0000A3, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, CallFunc_FClamp_ReturnValue_1) == 0x0000A8, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x0000B8, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Point_Light_Fading, CallFunc_SetIntensity_NewIntensity_ImplicitCast_1) == 0x0000BC, "Member 'BPFL_VFXFunctionLibrary_C_Point_Light_Fading::CallFunc_SetIntensity_NewIntensity_ImplicitCast_1' has a wrong offset!");

// Function BPFL_VFXFunctionLibrary.BPFL_VFXFunctionLibrary_C.Post Process Fading
// 0x00B8 (0x00B8 - 0x0000)
struct BPFL_VFXFunctionLibrary_C_Post_Process_Fading final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  PostProcess_Component;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Owner_Age;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Maximum_Blend_Weight;                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fading_Duration;                                   // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Delay;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Fade_Out;                                       // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Owner_Death_Age;                                   // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Fading_Finished;                                   // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fading_is_Finished;                                // 0x0049(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_BlendWeight_ImplicitCast;       // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_BlendWeight_ImplicitCast_1;     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading) == 0x000008, "Wrong alignment on BPFL_VFXFunctionLibrary_C_Post_Process_Fading");
static_assert(sizeof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading) == 0x0000B8, "Wrong size on BPFL_VFXFunctionLibrary_C_Post_Process_Fading");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, Enabled) == 0x000000, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::Enabled' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, PostProcess_Component) == 0x000008, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::PostProcess_Component' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, Owner_Age) == 0x000010, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::Owner_Age' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, Maximum_Blend_Weight) == 0x000018, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::Maximum_Blend_Weight' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, Fading_Duration) == 0x000020, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::Fading_Duration' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, Delay) == 0x000028, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::Delay' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, Is_Fade_Out) == 0x000030, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::Is_Fade_Out' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, Owner_Death_Age) == 0x000038, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::Owner_Death_Age' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, __WorldContext) == 0x000040, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, Fading_Finished) == 0x000048, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::Fading_Finished' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, Fading_is_Finished) == 0x000049, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::Fading_is_Finished' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, CallFunc_Not_PreBool_ReturnValue) == 0x00004A, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000050, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000058, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000060, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000061, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, CallFunc_FClamp_ReturnValue) == 0x000068, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000078, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000091, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, CallFunc_FClamp_ReturnValue_1) == 0x000098, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000A8, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, CallFunc_BooleanAND_ReturnValue) == 0x0000A9, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, K2Node_VariableSet_BlendWeight_ImplicitCast) == 0x0000AC, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::K2Node_VariableSet_BlendWeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Post_Process_Fading, K2Node_VariableSet_BlendWeight_ImplicitCast_1) == 0x0000B0, "Member 'BPFL_VFXFunctionLibrary_C_Post_Process_Fading::K2Node_VariableSet_BlendWeight_ImplicitCast_1' has a wrong offset!");

// Function BPFL_VFXFunctionLibrary.BPFL_VFXFunctionLibrary_C.Preset Point Light Parameters
// 0x0070 (0x0070 - 0x0000)
struct BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters final
{
public:
	class UPointLightComponent*                   Point_Light_Component;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Attenuation_Radius;                                // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Light_Color;                                       // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cast_Shadow;                                       // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Indirect_Lighting_Intensity;                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Volumetric_Scattering_Intensity;                   // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Source_Radius;                                     // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Specular_Scale;                                    // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIndirectLightingIntensity_NewIntensity_ImplicitCast; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSourceRadius_bNewValue_ImplicitCast;   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSpecularScale_NewValue_ImplicitCast;   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters) == 0x000008, "Wrong alignment on BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters");
static_assert(sizeof(BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters) == 0x000070, "Wrong size on BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters, Point_Light_Component) == 0x000000, "Member 'BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters::Point_Light_Component' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters, Enable) == 0x000008, "Member 'BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters::Enable' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters, Attenuation_Radius) == 0x000010, "Member 'BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters::Attenuation_Radius' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters, Light_Color) == 0x000018, "Member 'BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters::Light_Color' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters, Cast_Shadow) == 0x000028, "Member 'BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters::Cast_Shadow' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters, Indirect_Lighting_Intensity) == 0x000030, "Member 'BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters::Indirect_Lighting_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters, Volumetric_Scattering_Intensity) == 0x000038, "Member 'BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters::Volumetric_Scattering_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters, Source_Radius) == 0x000040, "Member 'BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters::Source_Radius' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters, Specular_Scale) == 0x000048, "Member 'BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters::Specular_Scale' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters, __WorldContext) == 0x000050, "Member 'BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters, CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast) == 0x000058, "Member 'BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters::CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters, CallFunc_SetIndirectLightingIntensity_NewIntensity_ImplicitCast) == 0x00005C, "Member 'BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters::CallFunc_SetIndirectLightingIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters, CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast) == 0x000060, "Member 'BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters::CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters, CallFunc_SetSourceRadius_bNewValue_ImplicitCast) == 0x000064, "Member 'BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters::CallFunc_SetSourceRadius_bNewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters, CallFunc_SetSpecularScale_NewValue_ImplicitCast) == 0x000068, "Member 'BPFL_VFXFunctionLibrary_C_Preset_Point_Light_Parameters::CallFunc_SetSpecularScale_NewValue_ImplicitCast' has a wrong offset!");

// Function BPFL_VFXFunctionLibrary.BPFL_VFXFunctionLibrary_C.Preset PostProcess Parameters
// 0x0720 (0x0720 - 0x0000)
struct BPFL_VFXFunctionLibrary_C_Preset_PostProcess_Parameters final
{
public:
	class UPostProcessComponent*                  PostProcess_Component;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   Settings;                                          // 0x0010(0x06F0)(BlueprintVisible, BlueprintReadOnly, Parm)
	double                                        Priority;                                          // 0x0700(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enabled;                                           // 0x0708(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_709[0x7];                                      // 0x0709(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0710(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Priority_ImplicitCast;          // 0x0718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_VFXFunctionLibrary_C_Preset_PostProcess_Parameters) == 0x000010, "Wrong alignment on BPFL_VFXFunctionLibrary_C_Preset_PostProcess_Parameters");
static_assert(sizeof(BPFL_VFXFunctionLibrary_C_Preset_PostProcess_Parameters) == 0x000720, "Wrong size on BPFL_VFXFunctionLibrary_C_Preset_PostProcess_Parameters");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Preset_PostProcess_Parameters, PostProcess_Component) == 0x000000, "Member 'BPFL_VFXFunctionLibrary_C_Preset_PostProcess_Parameters::PostProcess_Component' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Preset_PostProcess_Parameters, Settings) == 0x000010, "Member 'BPFL_VFXFunctionLibrary_C_Preset_PostProcess_Parameters::Settings' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Preset_PostProcess_Parameters, Priority) == 0x000700, "Member 'BPFL_VFXFunctionLibrary_C_Preset_PostProcess_Parameters::Priority' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Preset_PostProcess_Parameters, Enabled) == 0x000708, "Member 'BPFL_VFXFunctionLibrary_C_Preset_PostProcess_Parameters::Enabled' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Preset_PostProcess_Parameters, __WorldContext) == 0x000710, "Member 'BPFL_VFXFunctionLibrary_C_Preset_PostProcess_Parameters::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Preset_PostProcess_Parameters, K2Node_VariableSet_Priority_ImplicitCast) == 0x000718, "Member 'BPFL_VFXFunctionLibrary_C_Preset_PostProcess_Parameters::K2Node_VariableSet_Priority_ImplicitCast' has a wrong offset!");

// Function BPFL_VFXFunctionLibrary.BPFL_VFXFunctionLibrary_C.Setup Backup System
// 0x0030 (0x0030 - 0x0000)
struct BPFL_VFXFunctionLibrary_C_Setup_Backup_System final
{
public:
	class UNiagaraSystem*                         Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Backup;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Output;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_VFXFunctionLibrary_C_Setup_Backup_System) == 0x000008, "Wrong alignment on BPFL_VFXFunctionLibrary_C_Setup_Backup_System");
static_assert(sizeof(BPFL_VFXFunctionLibrary_C_Setup_Backup_System) == 0x000030, "Wrong size on BPFL_VFXFunctionLibrary_C_Setup_Backup_System");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Setup_Backup_System, Target) == 0x000000, "Member 'BPFL_VFXFunctionLibrary_C_Setup_Backup_System::Target' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Setup_Backup_System, Backup) == 0x000008, "Member 'BPFL_VFXFunctionLibrary_C_Setup_Backup_System::Backup' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Setup_Backup_System, __WorldContext) == 0x000010, "Member 'BPFL_VFXFunctionLibrary_C_Setup_Backup_System::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Setup_Backup_System, Output) == 0x000018, "Member 'BPFL_VFXFunctionLibrary_C_Setup_Backup_System::Output' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Setup_Backup_System, Temp_bool_Variable) == 0x000020, "Member 'BPFL_VFXFunctionLibrary_C_Setup_Backup_System::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Setup_Backup_System, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BPFL_VFXFunctionLibrary_C_Setup_Backup_System::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Setup_Backup_System, K2Node_Select_Default) == 0x000028, "Member 'BPFL_VFXFunctionLibrary_C_Setup_Backup_System::K2Node_Select_Default' has a wrong offset!");

// Function BPFL_VFXFunctionLibrary.BPFL_VFXFunctionLibrary_C.Time of Day Fading
// 0x0120 (0x0120 - 0x0000)
struct BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading final
{
public:
	double                                        Time_Of_Day;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Start;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        End;                                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fading_Duration;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENiagara_FadingMode                           Fading_Mode;                                       // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Custom_Curve;                                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Alpha_Result;                                      // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Smooth_Ramp;                                       // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Night_Based;                                    // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Temp_object_Variable;                              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Temp_object_Variable_1;                            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Temp_object_Variable_2;                            // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Temp_object_Variable_3;                            // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_ReturnValue;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENiagara_FadingMode                           Temp_byte_Variable;                                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            K2Node_Select_Default_1;                           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_ReturnValue_1;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_2;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_3;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_Alpha_Result_ImplicitCast;   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading) == 0x000008, "Wrong alignment on BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading");
static_assert(sizeof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading) == 0x000120, "Wrong size on BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, Time_Of_Day) == 0x000000, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::Time_Of_Day' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, Start) == 0x000008, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::Start' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, End) == 0x000010, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::End' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, Fading_Duration) == 0x000018, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::Fading_Duration' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, Fading_Mode) == 0x000020, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::Fading_Mode' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, Custom_Curve) == 0x000028, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::Custom_Curve' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, __WorldContext) == 0x000030, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, Alpha_Result) == 0x000038, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::Alpha_Result' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, Smooth_Ramp) == 0x000040, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::Smooth_Ramp' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, Is_Night_Based) == 0x000048, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::Is_Night_Based' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, Temp_object_Variable) == 0x000050, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000058, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, Temp_object_Variable_1) == 0x000060, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, Temp_bool_Variable) == 0x000068, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, Temp_bool_Variable_1) == 0x000069, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, Temp_real_Variable) == 0x000070, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, Temp_bool_Variable_2) == 0x000078, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, Temp_real_Variable_1) == 0x000080, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, Temp_object_Variable_2) == 0x000088, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, Temp_object_Variable_3) == 0x000090, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000098, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, CallFunc_MapRangeUnclamped_ReturnValue) == 0x0000A8, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, CallFunc_FClamp_ReturnValue) == 0x0000B0, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, K2Node_Select_Default) == 0x0000B8, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, Temp_byte_Variable) == 0x0000C8, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0000C9, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, K2Node_Select_Default_1) == 0x0000D0, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, CallFunc_MapRangeUnclamped_ReturnValue_1) == 0x0000D8, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::CallFunc_MapRangeUnclamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, CallFunc_FClamp_ReturnValue_1) == 0x0000E0, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, K2Node_Select_Default_2) == 0x0000E8, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000F0, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, K2Node_Select_Default_3) == 0x000100, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, CallFunc_GetFloatValue_ReturnValue) == 0x000108, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, K2Node_FunctionResult_Alpha_Result_ImplicitCast) == 0x000110, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::K2Node_FunctionResult_Alpha_Result_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000118, "Member 'BPFL_VFXFunctionLibrary_C_Time_of_Day_Fading::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");

// Function BPFL_VFXFunctionLibrary.BPFL_VFXFunctionLibrary_C.Update Point Light Animation
// 0x00A8 (0x00A8 - 0x0000)
struct BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPointLightComponent*                   Point_Light_Component;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Component_Normalized_Age;                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Maximum_Intensity;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Lifetime;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Delay;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fade_In_Duration;                                  // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fade_Out_Duration;                                 // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation) == 0x000008, "Wrong alignment on BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation");
static_assert(sizeof(BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation) == 0x0000A8, "Wrong size on BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation, Enabled) == 0x000000, "Member 'BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation::Enabled' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation, Point_Light_Component) == 0x000008, "Member 'BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation::Point_Light_Component' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation, Component_Normalized_Age) == 0x000010, "Member 'BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation::Component_Normalized_Age' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation, Maximum_Intensity) == 0x000018, "Member 'BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation::Maximum_Intensity' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation, Lifetime) == 0x000020, "Member 'BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation::Lifetime' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation, Delay) == 0x000028, "Member 'BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation::Delay' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation, Fade_In_Duration) == 0x000030, "Member 'BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation::Fade_In_Duration' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation, Fade_Out_Duration) == 0x000038, "Member 'BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation::Fade_Out_Duration' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation, __WorldContext) == 0x000040, "Member 'BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000050, "Member 'BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000068, "Member 'BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000070, "Member 'BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000078, "Member 'BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation, CallFunc_FClamp_ReturnValue) == 0x000080, "Member 'BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation, CallFunc_FClamp_ReturnValue_1) == 0x000088, "Member 'BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000090, "Member 'BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x0000A0, "Member 'BPFL_VFXFunctionLibrary_C_Update_Point_Light_Animation::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");

// Function BPFL_VFXFunctionLibrary.BPFL_VFXFunctionLibrary_C.Update PostProcess Animation
// 0x00A8 (0x00A8 - 0x0000)
struct BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  PostProcess_Component;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Component_Normalized_Age;                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Maximum_Blend_Weight;                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Lifetime;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Delay;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fade_In_Duration;                                  // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fade_Out_Duration;                                 // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_BlendWeight_ImplicitCast;       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation) == 0x000008, "Wrong alignment on BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation");
static_assert(sizeof(BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation) == 0x0000A8, "Wrong size on BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation, Enabled) == 0x000000, "Member 'BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation::Enabled' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation, PostProcess_Component) == 0x000008, "Member 'BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation::PostProcess_Component' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation, Component_Normalized_Age) == 0x000010, "Member 'BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation::Component_Normalized_Age' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation, Maximum_Blend_Weight) == 0x000018, "Member 'BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation::Maximum_Blend_Weight' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation, Lifetime) == 0x000020, "Member 'BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation::Lifetime' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation, Delay) == 0x000028, "Member 'BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation::Delay' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation, Fade_In_Duration) == 0x000030, "Member 'BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation::Fade_In_Duration' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation, Fade_Out_Duration) == 0x000038, "Member 'BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation::Fade_Out_Duration' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation, __WorldContext) == 0x000040, "Member 'BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000058, "Member 'BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000060, "Member 'BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000068, "Member 'BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation, CallFunc_FClamp_ReturnValue) == 0x000078, "Member 'BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000080, "Member 'BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation, CallFunc_FClamp_ReturnValue_1) == 0x000088, "Member 'BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000090, "Member 'BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation, K2Node_VariableSet_BlendWeight_ImplicitCast) == 0x0000A0, "Member 'BPFL_VFXFunctionLibrary_C_Update_PostProcess_Animation::K2Node_VariableSet_BlendWeight_ImplicitCast' has a wrong offset!");

}

