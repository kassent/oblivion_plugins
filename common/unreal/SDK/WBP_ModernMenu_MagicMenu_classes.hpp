#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ModernMenu_MagicMenu

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "Altar_structs.hpp"
#include "Altar_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ModernMenu_MagicMenu.WBP_ModernMenu_MagicMenu_C
// 0x0268 (0x0758 - 0x04F0)
class UWBP_ModernMenu_MagicMenu_C final : public UVLegacyMagicMenu
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVFooterViewModel*                      VFooterViewModel;                                  // 0x04F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, DuplicateTransient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UVHUDMainViewModel*                     VHUDMainViewModel;                                 // 0x0500(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, DuplicateTransient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UVMagicMenuViewModel*                   VMagicMenuViewModel;                               // 0x0508(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, DuplicateTransient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       QuickKeysFadeInOut;                                // 0x0510(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MagicListFadeInOut;                                // 0x0518(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MagicSlideRight;                                   // 0x0520(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MagicSlideLeft;                                    // 0x0528(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SE_SlideOut;                                       // 0x0530(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeInOut;                                         // 0x0538(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_OriginalImageTile_C*               Deco_Heavy;                                        // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OriginalImageTile_C*               Deco_Light;                                        // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModernHud_Fatigue_C*               FatigueBar;                                        // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Filters_spacer;                                    // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModernHud_Health_C*                HealthBar;                                         // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_List_EmptyLabel_C*                 List_EmptyLabel;                                   // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AltarRichTextBlock_C*              Magic_Active_SpellEffec_HeavyDetails_Text;         // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AltarRichTextBlock_C*              Magic_Active_SpellEffec_LightDetails_Text;         // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModernMenu_MagicDetails_C*         magic_details;                                     // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModernMenu_Magic_Filters_C*        Magic_Filters;                                     // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModernMenu_QuickKeys_C*            Magic_QuickKeys;                                   // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModernMenu_MagicListView_C*        Magic_Spell_List;                                  // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AltarTextBlock_C*                  Magic_SpellEffectivenes_Value;                     // 0x05A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AltarTextBlock_C*                  Magic_TabName;                                     // 0x05A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModernHud_Magicka_C*               MagickaBar;                                        // 0x05B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModernMenu_MagicTabs_C*            MagicTabs;                                         // 0x05B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               NoEffect_Notification_Overlay;                     // 0x05C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        RightPanel_Switcher;                               // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Shadow;                                            // 0x05D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               SpellEffectiveness_Details;                        // 0x05D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ELegacyMagicMenuSortType                      DefaultSortType;                                   // 0x05E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E1[0x7];                                      // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Filter_Column_Size;                                // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFilterFocused;                                   // 0x05F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F1[0x7];                                      // 0x05F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ELegacyMagicMenuPage, class FText>       PageTitle;                                         // 0x05F8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UVLegacyMagicMenuItem*                  CurrentHoveredItem;                                // 0x0648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          HasSwitchTab;                                      // 0x0650(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_651[0x7];                                      // 0x0651(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CurrentMagicka;                                    // 0x0658(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxMagicka;                                        // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<ELegacyMagicMenuPage, class FName>       PageToFilterBackgroundMap;                         // 0x0668(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsQuickwheelOpen;                                  // 0x06B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSpellEffectivenessShow;                          // 0x06B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BA[0x6];                                      // 0x06BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LeftScrollSpeed;                                   // 0x06C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          SwitchSubtabSound;                                 // 0x06C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          HoverSound;                                        // 0x06D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          SelectSpellSound;                                  // 0x06D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          SwitchSortSound;                                   // 0x06E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          SwitchAttributeSound;                              // 0x06E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FText                                   EquipInputHint;                                    // 0x06F0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   AssignInputHint;                                   // 0x0708(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   ShowShortcutsInputHint;                            // 0x0720(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   HideShortcutsInputHint;                            // 0x0738(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bEquippedFound;                                    // 0x0750(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRequestFocusEquipped;                             // 0x0751(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRequestFocusActiveTab;                            // 0x0752(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsQuickWheelClosing;                              // 0x0753(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WBP_ModernMenu_MagicMenu_Filters_K2Node_ComponentBoundEvent_0_OnSortTypeUpdated__DelegateSignature(ELegacyMagicMenuSortType SortType);
	void BndEvt__WBP_ModernMenu_MagicMenu_Filters_K2Node_ComponentBoundEvent_1_OnIsReversedUpdated__DelegateSignature(bool bIsReversed);
	void BndEvt__WBP_ModernMenu_MagicMenu_Magic_QuickKeys_K2Node_ComponentBoundEvent_3_OnCloseAnimationEnd__DelegateSignature();
	void BndEvt__WBP_ModernMenu_MagicMenu_Magic_Spell_List_K2Node_ComponentBoundEvent_7_OnItemHovered__DelegateSignature(class UObject* HoveredItem);
	void BndEvt__WBP_ModernMenu_MagicMenu_Magic_Spell_List_K2Node_ComponentBoundEvent_8_OnItemClicked__DelegateSignature(class UObject* SelectedItem);
	void BndEvt__WBP_ModernMenu_MagicMenu_MagicTabs_K2Node_ComponentBoundEvent_10_OnTargetTabClicked__DelegateSignature();
	void BndEvt__WBP_ModernMenu_MagicMenu_MagicTabs_K2Node_ComponentBoundEvent_11_OnTouchTabClicked__DelegateSignature();
	void BndEvt__WBP_ModernMenu_MagicMenu_MagicTabs_K2Node_ComponentBoundEvent_12_OnSelfTabClicked__DelegateSignature();
	void BndEvt__WBP_ModernMenu_MagicMenu_MagicTabs_K2Node_ComponentBoundEvent_13_OnAllTabClicked__DelegateSignature();
	void BndEvt__WBP_ModernMenu_MagicMenu_MagicTabs_K2Node_ComponentBoundEvent_9_OnActiveTabClicked__DelegateSignature();
	void BP_OnActivated();
	void BP_OnDeactivated();
	void ExecuteUbergraph_WBP_ModernMenu_MagicMenu(int32 EntryPoint);
	void FadeInOutMenu(bool bIsVisible, bool bFromLeft, bool bInstant);
	void Focus_Equipped_Spell();
	void Get_Enabled_Filter_Enums_For_Given_Page(ELegacyMagicMenuPage Page, TArray<ELegacyMagicMenuSortType>* EnabledFilterEnums);
	void GetNextPageEnum(bool Next, ELegacyMagicMenuPage* New_Page);
	void HideQuickwheel();
	void InpActEvt_IA_Specific_MagicMenu_AssignToWheel_K2Node_EnhancedInputActionEvent_12(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Specific_MagicMenu_NavigateAddedEffects_K2Node_EnhancedInputActionEvent_10(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Specific_MagicMenu_ToggleSorting_K2Node_EnhancedInputActionEvent_13(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Specific_MagicMenu_ToggleSpellEffectivenessDetails_K2Node_EnhancedInputActionEvent_11(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Common_NextTab_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Common_PreviousTab_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_QuickKeys_Keyboard_1_K2Node_EnhancedInputActionEvent_9(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_QuickKeys_Keyboard_2_K2Node_EnhancedInputActionEvent_8(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_QuickKeys_Keyboard_3_K2Node_EnhancedInputActionEvent_7(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_QuickKeys_Keyboard_4_K2Node_EnhancedInputActionEvent_6(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_QuickKeys_Keyboard_5_K2Node_EnhancedInputActionEvent_5(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_QuickKeys_Keyboard_6_K2Node_EnhancedInputActionEvent_4(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_QuickKeys_Keyboard_7_K2Node_EnhancedInputActionEvent_3(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_QuickKeys_Keyboard_8_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void Make_Brush(class UTexture2D* In_Texture, struct FSlateBrush* Out_Brush);
	void MenuFadeInOut(bool In_Is_Visible, bool InFromLeft, bool InInstant);
	void OnFocus();
	void OnPressedQuickKey(int32 KeyID);
	void SetInputForFooter(class UWBP_Modern_Menu_Player_Footer_C* Local_FooterRef);
	void SetPageTitle(ELegacyMagicMenuPage Page);
	void SetSelectedTab(ELegacyMagicMenuPage Page);
	void Switch_Quick_Keys(bool DoOpen, bool bInstant);
	void This_Is_For_Plugin_Compliance(bool NewParam);
	void ToggleSpellEffectivenessExplanation(bool ShowExplanation);
	void Update_Current_Magicka_Value(double New_Value);
	void Update_Fatigue_Bar_Value(double NewParam);
	void Update_Health_Bar_Value(double NewParam);
	void Update_Infos(class UVLegacyMagicMenuItem* CurrentHoveredItem_0);
	void Update_Magicka_Bar_Value(double NewParam);
	void Update_Max_Magicka_Value(double New_Value);
	void UpdateCurrentPage(ELegacyMagicMenuPage New_Page);
	void UpdateCurrentPageInventory(const TArray<struct FLegacyMagicMenuItemProperties>& NewList);
	void UpdateFilterFocus(bool InIsFilterFocused);
	void UpdateFiltersToDisplay(ELegacyMagicMenuPage Page);
	void UpdateInventory(const TArray<struct FLegacyMagicMenuItemProperties>& Items);
	void UpdateMagicItems(const TArray<struct FLegacyMagicMenuItemProperties>& NewMagicItems);
	void UpdateSpellEffectiveness(double New_Effectiveness);
	void UpdateSpellEffectivenessExplanation(const struct FModernSpellEffectivenessProperties& New_Properties);
	void UpdateSpellEffectivenessValue(double New_Effectiveness);

	class UWidget* BP_GetDesiredFocusTarget() const;
	class UVLegacyMagicPopupMenu* GetMagicPopup() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ModernMenu_MagicMenu_C">();
	}
	static class UWBP_ModernMenu_MagicMenu_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ModernMenu_MagicMenu_C>();
	}
};
static_assert(alignof(UWBP_ModernMenu_MagicMenu_C) == 0x000008, "Wrong alignment on UWBP_ModernMenu_MagicMenu_C");
static_assert(sizeof(UWBP_ModernMenu_MagicMenu_C) == 0x000758, "Wrong size on UWBP_ModernMenu_MagicMenu_C");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, UberGraphFrame) == 0x0004F0, "Member 'UWBP_ModernMenu_MagicMenu_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, VFooterViewModel) == 0x0004F8, "Member 'UWBP_ModernMenu_MagicMenu_C::VFooterViewModel' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, VHUDMainViewModel) == 0x000500, "Member 'UWBP_ModernMenu_MagicMenu_C::VHUDMainViewModel' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, VMagicMenuViewModel) == 0x000508, "Member 'UWBP_ModernMenu_MagicMenu_C::VMagicMenuViewModel' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, QuickKeysFadeInOut) == 0x000510, "Member 'UWBP_ModernMenu_MagicMenu_C::QuickKeysFadeInOut' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, MagicListFadeInOut) == 0x000518, "Member 'UWBP_ModernMenu_MagicMenu_C::MagicListFadeInOut' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, MagicSlideRight) == 0x000520, "Member 'UWBP_ModernMenu_MagicMenu_C::MagicSlideRight' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, MagicSlideLeft) == 0x000528, "Member 'UWBP_ModernMenu_MagicMenu_C::MagicSlideLeft' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, SE_SlideOut) == 0x000530, "Member 'UWBP_ModernMenu_MagicMenu_C::SE_SlideOut' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, FadeInOut) == 0x000538, "Member 'UWBP_ModernMenu_MagicMenu_C::FadeInOut' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, Deco_Heavy) == 0x000540, "Member 'UWBP_ModernMenu_MagicMenu_C::Deco_Heavy' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, Deco_Light) == 0x000548, "Member 'UWBP_ModernMenu_MagicMenu_C::Deco_Light' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, FatigueBar) == 0x000550, "Member 'UWBP_ModernMenu_MagicMenu_C::FatigueBar' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, Filters_spacer) == 0x000558, "Member 'UWBP_ModernMenu_MagicMenu_C::Filters_spacer' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, HealthBar) == 0x000560, "Member 'UWBP_ModernMenu_MagicMenu_C::HealthBar' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, List_EmptyLabel) == 0x000568, "Member 'UWBP_ModernMenu_MagicMenu_C::List_EmptyLabel' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, Magic_Active_SpellEffec_HeavyDetails_Text) == 0x000570, "Member 'UWBP_ModernMenu_MagicMenu_C::Magic_Active_SpellEffec_HeavyDetails_Text' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, Magic_Active_SpellEffec_LightDetails_Text) == 0x000578, "Member 'UWBP_ModernMenu_MagicMenu_C::Magic_Active_SpellEffec_LightDetails_Text' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, magic_details) == 0x000580, "Member 'UWBP_ModernMenu_MagicMenu_C::magic_details' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, Magic_Filters) == 0x000588, "Member 'UWBP_ModernMenu_MagicMenu_C::Magic_Filters' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, Magic_QuickKeys) == 0x000590, "Member 'UWBP_ModernMenu_MagicMenu_C::Magic_QuickKeys' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, Magic_Spell_List) == 0x000598, "Member 'UWBP_ModernMenu_MagicMenu_C::Magic_Spell_List' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, Magic_SpellEffectivenes_Value) == 0x0005A0, "Member 'UWBP_ModernMenu_MagicMenu_C::Magic_SpellEffectivenes_Value' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, Magic_TabName) == 0x0005A8, "Member 'UWBP_ModernMenu_MagicMenu_C::Magic_TabName' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, MagickaBar) == 0x0005B0, "Member 'UWBP_ModernMenu_MagicMenu_C::MagickaBar' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, MagicTabs) == 0x0005B8, "Member 'UWBP_ModernMenu_MagicMenu_C::MagicTabs' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, NoEffect_Notification_Overlay) == 0x0005C0, "Member 'UWBP_ModernMenu_MagicMenu_C::NoEffect_Notification_Overlay' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, RightPanel_Switcher) == 0x0005C8, "Member 'UWBP_ModernMenu_MagicMenu_C::RightPanel_Switcher' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, Shadow) == 0x0005D0, "Member 'UWBP_ModernMenu_MagicMenu_C::Shadow' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, SpellEffectiveness_Details) == 0x0005D8, "Member 'UWBP_ModernMenu_MagicMenu_C::SpellEffectiveness_Details' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, DefaultSortType) == 0x0005E0, "Member 'UWBP_ModernMenu_MagicMenu_C::DefaultSortType' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, Filter_Column_Size) == 0x0005E8, "Member 'UWBP_ModernMenu_MagicMenu_C::Filter_Column_Size' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, IsFilterFocused) == 0x0005F0, "Member 'UWBP_ModernMenu_MagicMenu_C::IsFilterFocused' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, PageTitle) == 0x0005F8, "Member 'UWBP_ModernMenu_MagicMenu_C::PageTitle' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, CurrentHoveredItem) == 0x000648, "Member 'UWBP_ModernMenu_MagicMenu_C::CurrentHoveredItem' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, HasSwitchTab) == 0x000650, "Member 'UWBP_ModernMenu_MagicMenu_C::HasSwitchTab' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, CurrentMagicka) == 0x000658, "Member 'UWBP_ModernMenu_MagicMenu_C::CurrentMagicka' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, MaxMagicka) == 0x000660, "Member 'UWBP_ModernMenu_MagicMenu_C::MaxMagicka' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, PageToFilterBackgroundMap) == 0x000668, "Member 'UWBP_ModernMenu_MagicMenu_C::PageToFilterBackgroundMap' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, IsQuickwheelOpen) == 0x0006B8, "Member 'UWBP_ModernMenu_MagicMenu_C::IsQuickwheelOpen' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, IsSpellEffectivenessShow) == 0x0006B9, "Member 'UWBP_ModernMenu_MagicMenu_C::IsSpellEffectivenessShow' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, LeftScrollSpeed) == 0x0006C0, "Member 'UWBP_ModernMenu_MagicMenu_C::LeftScrollSpeed' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, SwitchSubtabSound) == 0x0006C8, "Member 'UWBP_ModernMenu_MagicMenu_C::SwitchSubtabSound' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, HoverSound) == 0x0006D0, "Member 'UWBP_ModernMenu_MagicMenu_C::HoverSound' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, SelectSpellSound) == 0x0006D8, "Member 'UWBP_ModernMenu_MagicMenu_C::SelectSpellSound' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, SwitchSortSound) == 0x0006E0, "Member 'UWBP_ModernMenu_MagicMenu_C::SwitchSortSound' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, SwitchAttributeSound) == 0x0006E8, "Member 'UWBP_ModernMenu_MagicMenu_C::SwitchAttributeSound' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, EquipInputHint) == 0x0006F0, "Member 'UWBP_ModernMenu_MagicMenu_C::EquipInputHint' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, AssignInputHint) == 0x000708, "Member 'UWBP_ModernMenu_MagicMenu_C::AssignInputHint' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, ShowShortcutsInputHint) == 0x000720, "Member 'UWBP_ModernMenu_MagicMenu_C::ShowShortcutsInputHint' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, HideShortcutsInputHint) == 0x000738, "Member 'UWBP_ModernMenu_MagicMenu_C::HideShortcutsInputHint' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, bEquippedFound) == 0x000750, "Member 'UWBP_ModernMenu_MagicMenu_C::bEquippedFound' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, bRequestFocusEquipped) == 0x000751, "Member 'UWBP_ModernMenu_MagicMenu_C::bRequestFocusEquipped' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, bRequestFocusActiveTab) == 0x000752, "Member 'UWBP_ModernMenu_MagicMenu_C::bRequestFocusActiveTab' has a wrong offset!");
static_assert(offsetof(UWBP_ModernMenu_MagicMenu_C, bIsQuickWheelClosing) == 0x000753, "Member 'UWBP_ModernMenu_MagicMenu_C::bIsQuickWheelClosing' has a wrong offset!");

}

