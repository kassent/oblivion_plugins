#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AltarPlayerController

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AltarPlayerController.BP_AltarPlayerController_C.ExecuteUbergraph_BP_AltarPlayerController
// 0x0160 (0x0160 - 0x0000)
struct BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_QuickCommandsMenu_View_C*          K2Node_DynamicCast_AsWBP_Quick_Commands_Menu_View; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_CustomEvent_UserWidget;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_AssetNameDebugWidget_C*            CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_AltarPlayerCameraManager_C*         K2Node_DynamicCast_AsBP_Altar_Player_Camera_Manager; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ObivionDebug_C*                    CallFunc_Create_ReturnValue_1;                     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_InputVectorAxisEvent_AxisValue;             // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UUserWidget* UserWidget)> K2Node_CreateDelegate_OutputDelegate;             // 0x0074(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ImageCalibration_C*                CallFunc_Create_ReturnValue_2;                     // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAltarGameModeBase*                     K2Node_DynamicCast_AsAltar_Game_Mode_Base;         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PairedPawnLocomotionDebugInfo_C*   CallFunc_Create_ReturnValue_3;                     // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_UnpossessedPawn;                      // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_PossessedPawn;                        // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AVOblivionPlayerCharacter*              K2Node_DynamicCast_AsVOblivion_Player_Character;   // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable;                              // 0x00D0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x00E8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0108(0x0018)(HasGetValueTypeHash)
	class UAsyncAction_CreateWidgetAsync*         CallFunc_CreateWidgetAsync_ReturnValue;            // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetBuildConfiguration_ReturnValue;        // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0140(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController) == 0x000008, "Wrong alignment on BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController");
static_assert(sizeof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController) == 0x000160, "Wrong size on BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, EntryPoint) == 0x000000, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, Temp_object_Variable) == 0x000008, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, K2Node_DynamicCast_AsWBP_Quick_Commands_Menu_View) == 0x000010, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::K2Node_DynamicCast_AsWBP_Quick_Commands_Menu_View' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, K2Node_CustomEvent_UserWidget) == 0x000020, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::K2Node_CustomEvent_UserWidget' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, CallFunc_Create_ReturnValue) == 0x000028, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, K2Node_DynamicCast_AsBP_Altar_Player_Camera_Manager) == 0x000030, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::K2Node_DynamicCast_AsBP_Altar_Player_Camera_Manager' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, CallFunc_Create_ReturnValue_1) == 0x000040, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, K2Node_InputVectorAxisEvent_AxisValue) == 0x000050, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::K2Node_InputVectorAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, CallFunc_VSize_ReturnValue) == 0x000068, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, K2Node_CreateDelegate_OutputDelegate) == 0x000074, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, K2Node_Event_EndPlayReason) == 0x000084, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, CallFunc_Create_ReturnValue_2) == 0x000088, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, CallFunc_GetGameMode_ReturnValue) == 0x000090, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, K2Node_DynamicCast_AsAltar_Game_Mode_Base) == 0x000098, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::K2Node_DynamicCast_AsAltar_Game_Mode_Base' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, CallFunc_Create_ReturnValue_3) == 0x0000A8, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::CallFunc_Create_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, K2Node_Event_UnpossessedPawn) == 0x0000B0, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::K2Node_Event_UnpossessedPawn' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, K2Node_Event_PossessedPawn) == 0x0000B8, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::K2Node_Event_PossessedPawn' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, K2Node_DynamicCast_AsVOblivion_Player_Character) == 0x0000C0, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::K2Node_DynamicCast_AsVOblivion_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, K2Node_DynamicCast_bSuccess_3) == 0x0000C8, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, Temp_struct_Variable) == 0x0000D0, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, K2Node_InputKeyEvent_Key_1) == 0x0000E8, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, CallFunc_IsValid_ReturnValue_1) == 0x000100, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, K2Node_InputKeyEvent_Key_2) == 0x000108, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, CallFunc_CreateWidgetAsync_ReturnValue) == 0x000120, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::CallFunc_CreateWidgetAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, CallFunc_IsValid_ReturnValue_2) == 0x000128, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, CallFunc_IsValid_ReturnValue_3) == 0x000129, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, CallFunc_GetBuildConfiguration_ReturnValue) == 0x000130, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::CallFunc_GetBuildConfiguration_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, K2Node_InputKeyEvent_Key) == 0x000140, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController, K2Node_SwitchString_CmpSuccess) == 0x000158, "Member 'BP_AltarPlayerController_C_ExecuteUbergraph_BP_AltarPlayerController::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

// Function BP_AltarPlayerController.BP_AltarPlayerController_C.InpActEvt_AnyKey_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_AltarPlayerController_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_AltarPlayerController_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on BP_AltarPlayerController_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_1");
static_assert(sizeof(BP_AltarPlayerController_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on BP_AltarPlayerController_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_1");
static_assert(offsetof(BP_AltarPlayerController_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'BP_AltarPlayerController_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function BP_AltarPlayerController.BP_AltarPlayerController_C.InpActEvt_AnyKey_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_AltarPlayerController_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_AltarPlayerController_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on BP_AltarPlayerController_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_2");
static_assert(sizeof(BP_AltarPlayerController_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on BP_AltarPlayerController_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_2");
static_assert(offsetof(BP_AltarPlayerController_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'BP_AltarPlayerController_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function BP_AltarPlayerController.BP_AltarPlayerController_C.InpActEvt_F6_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_AltarPlayerController_C_InpActEvt_F6_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_AltarPlayerController_C_InpActEvt_F6_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BP_AltarPlayerController_C_InpActEvt_F6_K2Node_InputKeyEvent_0");
static_assert(sizeof(BP_AltarPlayerController_C_InpActEvt_F6_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BP_AltarPlayerController_C_InpActEvt_F6_K2Node_InputKeyEvent_0");
static_assert(offsetof(BP_AltarPlayerController_C_InpActEvt_F6_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BP_AltarPlayerController_C_InpActEvt_F6_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BP_AltarPlayerController.BP_AltarPlayerController_C.InpAxisKeyEvt_Mouse2D_K2Node_InputVectorAxisEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_AltarPlayerController_C_InpAxisKeyEvt_Mouse2D_K2Node_InputVectorAxisEvent_0 final
{
public:
	struct FVector                                AxisValue;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AltarPlayerController_C_InpAxisKeyEvt_Mouse2D_K2Node_InputVectorAxisEvent_0) == 0x000008, "Wrong alignment on BP_AltarPlayerController_C_InpAxisKeyEvt_Mouse2D_K2Node_InputVectorAxisEvent_0");
static_assert(sizeof(BP_AltarPlayerController_C_InpAxisKeyEvt_Mouse2D_K2Node_InputVectorAxisEvent_0) == 0x000018, "Wrong size on BP_AltarPlayerController_C_InpAxisKeyEvt_Mouse2D_K2Node_InputVectorAxisEvent_0");
static_assert(offsetof(BP_AltarPlayerController_C_InpAxisKeyEvt_Mouse2D_K2Node_InputVectorAxisEvent_0, AxisValue) == 0x000000, "Member 'BP_AltarPlayerController_C_InpAxisKeyEvt_Mouse2D_K2Node_InputVectorAxisEvent_0::AxisValue' has a wrong offset!");

// Function BP_AltarPlayerController.BP_AltarPlayerController_C.OnComplete_24B1EBB04C3500572DC0A09E6294DAE4
// 0x0008 (0x0008 - 0x0000)
struct BP_AltarPlayerController_C_OnComplete_24B1EBB04C3500572DC0A09E6294DAE4 final
{
public:
	class UUserWidget*                            UserWidget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AltarPlayerController_C_OnComplete_24B1EBB04C3500572DC0A09E6294DAE4) == 0x000008, "Wrong alignment on BP_AltarPlayerController_C_OnComplete_24B1EBB04C3500572DC0A09E6294DAE4");
static_assert(sizeof(BP_AltarPlayerController_C_OnComplete_24B1EBB04C3500572DC0A09E6294DAE4) == 0x000008, "Wrong size on BP_AltarPlayerController_C_OnComplete_24B1EBB04C3500572DC0A09E6294DAE4");
static_assert(offsetof(BP_AltarPlayerController_C_OnComplete_24B1EBB04C3500572DC0A09E6294DAE4, UserWidget) == 0x000000, "Member 'BP_AltarPlayerController_C_OnComplete_24B1EBB04C3500572DC0A09E6294DAE4::UserWidget' has a wrong offset!");

// Function BP_AltarPlayerController.BP_AltarPlayerController_C.QCM
// 0x0018 (0x0018 - 0x0000)
struct BP_AltarPlayerController_C_QCM final
{
public:
	class FString                                 CallFunc_GetBuildConfiguration_ReturnValue;        // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AltarPlayerController_C_QCM) == 0x000008, "Wrong alignment on BP_AltarPlayerController_C_QCM");
static_assert(sizeof(BP_AltarPlayerController_C_QCM) == 0x000018, "Wrong size on BP_AltarPlayerController_C_QCM");
static_assert(offsetof(BP_AltarPlayerController_C_QCM, CallFunc_GetBuildConfiguration_ReturnValue) == 0x000000, "Member 'BP_AltarPlayerController_C_QCM::CallFunc_GetBuildConfiguration_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AltarPlayerController_C_QCM, K2Node_SwitchString_CmpSuccess) == 0x000010, "Member 'BP_AltarPlayerController_C_QCM::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

// Function BP_AltarPlayerController.BP_AltarPlayerController_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_AltarPlayerController_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AltarPlayerController_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_AltarPlayerController_C_ReceiveEndPlay");
static_assert(sizeof(BP_AltarPlayerController_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_AltarPlayerController_C_ReceiveEndPlay");
static_assert(offsetof(BP_AltarPlayerController_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_AltarPlayerController_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_AltarPlayerController.BP_AltarPlayerController_C.ReceivePossess
// 0x0008 (0x0008 - 0x0000)
struct BP_AltarPlayerController_C_ReceivePossess final
{
public:
	class APawn*                                  PossessedPawn;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AltarPlayerController_C_ReceivePossess) == 0x000008, "Wrong alignment on BP_AltarPlayerController_C_ReceivePossess");
static_assert(sizeof(BP_AltarPlayerController_C_ReceivePossess) == 0x000008, "Wrong size on BP_AltarPlayerController_C_ReceivePossess");
static_assert(offsetof(BP_AltarPlayerController_C_ReceivePossess, PossessedPawn) == 0x000000, "Member 'BP_AltarPlayerController_C_ReceivePossess::PossessedPawn' has a wrong offset!");

// Function BP_AltarPlayerController.BP_AltarPlayerController_C.ReceiveUnPossess
// 0x0008 (0x0008 - 0x0000)
struct BP_AltarPlayerController_C_ReceiveUnPossess final
{
public:
	class APawn*                                  UnpossessedPawn;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AltarPlayerController_C_ReceiveUnPossess) == 0x000008, "Wrong alignment on BP_AltarPlayerController_C_ReceiveUnPossess");
static_assert(sizeof(BP_AltarPlayerController_C_ReceiveUnPossess) == 0x000008, "Wrong size on BP_AltarPlayerController_C_ReceiveUnPossess");
static_assert(offsetof(BP_AltarPlayerController_C_ReceiveUnPossess, UnpossessedPawn) == 0x000000, "Member 'BP_AltarPlayerController_C_ReceiveUnPossess::UnpossessedPawn' has a wrong offset!");

}

