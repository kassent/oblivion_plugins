#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AST_CameraBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "VActorStateMachine_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "Altar_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass AST_CameraBase.AST_CameraBase_C
// 0x02F8 (0x0380 - 0x0088)
class UAST_CameraBase_C : public UVState
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0088(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FVCameraSettings                       CameraSettings;                                    // 0x0090(0x0240)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        OverridedTransitionDuration;                       // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            OverridedTransitionCurve;                          // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, double>             AllOverridedTransitionDurations;                   // 0x02E0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<struct FGameplayTag, class UCurveFloat*> AllOverridedTransitionCurves;                      // 0x0330(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void SetOverrideTransitionDurations(const TMap<struct FGameplayTag, double>& Override_Duration);
	void SetOverrideTransitionCurves(const TMap<struct FGameplayTag, class UCurveFloat*>& Override_Curve);
	void SetCameraSettings(const struct FVCameraSettings& NewParam);
	void OnEntered();
	void ExecuteUbergraph_AST_CameraBase(int32 EntryPoint);
	void ApplyOverrideTransitionParameters();
	void ApplyCameraSettings();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AST_CameraBase_C">();
	}
	static class UAST_CameraBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAST_CameraBase_C>();
	}
};
static_assert(alignof(UAST_CameraBase_C) == 0x000008, "Wrong alignment on UAST_CameraBase_C");
static_assert(sizeof(UAST_CameraBase_C) == 0x000380, "Wrong size on UAST_CameraBase_C");
static_assert(offsetof(UAST_CameraBase_C, UberGraphFrame) == 0x000088, "Member 'UAST_CameraBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAST_CameraBase_C, CameraSettings) == 0x000090, "Member 'UAST_CameraBase_C::CameraSettings' has a wrong offset!");
static_assert(offsetof(UAST_CameraBase_C, OverridedTransitionDuration) == 0x0002D0, "Member 'UAST_CameraBase_C::OverridedTransitionDuration' has a wrong offset!");
static_assert(offsetof(UAST_CameraBase_C, OverridedTransitionCurve) == 0x0002D8, "Member 'UAST_CameraBase_C::OverridedTransitionCurve' has a wrong offset!");
static_assert(offsetof(UAST_CameraBase_C, AllOverridedTransitionDurations) == 0x0002E0, "Member 'UAST_CameraBase_C::AllOverridedTransitionDurations' has a wrong offset!");
static_assert(offsetof(UAST_CameraBase_C, AllOverridedTransitionCurves) == 0x000330, "Member 'UAST_CameraBase_C::AllOverridedTransitionCurves' has a wrong offset!");

}

