#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_StatusEffect

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "BPS_InvisibilityCompData_structs.hpp"
#include "BPS_InvisibilityPrimitiveData_structs.hpp"
#include "Altar_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_StatusEffect.BPC_StatusEffect_C
// 0x0200 (0x02A0 - 0x00A0)
class UBPC_StatusEffect_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTESEffectShader*                       form;                                              // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   VFX_Colors;                                        // 0x00B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          ApplyMaterialSwitch;                               // 0x00C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     OverlayMaterialInterface;                          // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AVPairedPawn*                           PawnOwner;                                         // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Overlay_MinimumLifeTimeReached;                    // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Overlay_MinimumLifeTimeTimer;                      // 0x00E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Overlay_MinimumLifeTime;                           // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           Mesh_Ignore_List;                                  // 0x00F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          OverlayFade_in_T__Fade_Out_F_;                     // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        OverlayFadeStartTime;                              // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OverlayFadeCurrentTime;                            // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           OverlayFadeTimer;                                  // 0x0118(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        OverlayFadeDuration;                               // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Status_Effect_Value;                               // 0x0128(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      Overlay_Material;                                  // 0x0130(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash)
	bool                                          OverlayIsFading;                                   // 0x0158(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MaterialSwitchIsFading;                            // 0x0159(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MaterialSwitchFade_in_T__Fade_Out_F_;              // 0x015A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15B[0x5];                                      // 0x015B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaterialSwitchFadeStartTime;                       // 0x0160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaterialSwitchFadeCurrentTime;                     // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           MaterialSwitchFadeTimer;                           // 0x0170(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        MaterialSwitchFadeDuration;                        // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Overlay_EffectIsStarting;                          // 0x0180(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       OverlayMIDs;                                       // 0x0188(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          MaterialSwitch_EffectIsStarting;                   // 0x0198(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBPS_InvisibilityCompData>      ComponentInvisibilityData;                         // 0x01A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class FString, int32>                    ComponentIDAndPrimitiveIndex;                      // 0x01B0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsPlayerCharacter;                                 // 0x0200(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, int32>                    MeshData;                                          // 0x0208(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FBPS_InvisibilityPrimitiveData> PrimitiveData;                                     // 0x0258(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          RecentlyInitialized;                               // 0x0268(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWeapon;                                          // 0x0269(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MS_RefreshingSameEffect;                           // 0x026A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideTails;                                         // 0x026B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkinnedMeshComponent*                  BodyComponent;                                     // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsArgonian;                                        // 0x0278(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsKhajiit;                                         // 0x0279(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMale;                                            // 0x027A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipFade;                                          // 0x027B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OE_RefreshingSameEffect;                           // 0x027C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           WaitForMinimalLifetimeEndBeforeStop;               // 0x0280(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          CallsEndedWithStart;                               // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        BloodSplatterComponent;                            // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGhost;                                           // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Apply_All_MID_Data();
	void Apply_Status_Effect_on_Component(class UMeshComponent* MeshComponent);
	void ClearActorsData();
	void Collect_Actor_Static_and_Skeletal_Components(class AActor* Actor, TArray<class UStaticMeshComponent*>& Static_Components, TArray<class USkinnedMeshComponent*>& Skinned_Components, bool CollectStaticMeshComponents, bool CollectSkinnedMeshComponents);
	void Create_Invisibility_Data_For_Component(class UMeshComponent* MeshComponent);
	void Create_Overlay_MIDs();
	void DisableBloodSplatterComponent(bool Disable);
	void ExecuteUbergraph_BPC_StatusEffect(int32 EntryPoint);
	void FinishedMinimumLifetime();
	void Get_All_Mesh_Components(bool GetFromOwner, bool GetShields, bool GetAttachedWeapons, bool GetAllOtherAttachedActors, bool GetStaticMeshComponents, bool GetSkinnedMeshComponents, bool GetInventoryPlayer, class AActor* ActorIn, TArray<class UStaticMeshComponent*>* Static_Mesh_Component, TArray<class USkinnedMeshComponent*>* Skinned_Mesh_Component);
	void GetMeshName(class UMeshComponent* MeshComponent, class FString* Mesh);
	void ShowTailMaterialSections(bool IsKhajiitPawn, bool Show);
	void Is_Hair_Mesh_Component__(class UMeshComponent* Mesh_Component, bool* IsHair);
	void MaterialSwitchFadeFinished();
	void MaterialSwitchFadeWithTimer(bool FadeIn_T__FadeOut_F_);
	void OnLoaded_0F829B3C4814EFC13BB1F98CAE3E9F8D(class UObject* Loaded);
	void OnLoaded_FC635208464DDB60D10E04B0F5915E33(class UObject* Loaded);
	void OnStatusEffectEnd();
	void OnStatusEffectStart(class UTESEffectShader* form_0, const TArray<struct FLinearColor>& VFXColors, const TArray<class UStaticMeshComponent*>& MeshIgnoreList, float StatusEffectValue);
	void Overlay_ReachedMinimumLifeTime();
	void OverlayFadeFinished();
	void OverlayFadeWithTimer(bool FadeIn_T__FadeOut_F_);
	void PartialDitherFade();
	void Pawn_OnTextureEffectStart(class UTESEffectShader* form_0, const TArray<struct FLinearColor>& VFXColors, const TArray<class UStaticMeshComponent*>& MeshIgnoreList, float StatusEffectValue);
	void Pawn_OnTextureEffectStop();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Remove_Material_Switch(const struct FBPS_InvisibilityCompData& CompData, class UPrimitiveComponent* Primitive);
	void Remove_Status_Effect_on_Component(class UMeshComponent* MeshComponent);
	void RemoveStatusEffect();
	void RestoreOriginalMaterials();
	void Set_Fade_Value_On_All_Material_Switch_MIDs(float Value);
	void Set_Fade_Value_on_All_Overlay_MIDs(double Value);
	void SetDitherScaleOnAllComponents(float NewDitherScale);
	void Update_Color_Values_Of_MID(TArray<EVBodyTextureEffectColors>& Color_Usages, TArray<struct FLinearColor>& VFX_Colors_0, class UMaterialInstanceDynamic* Mid);
	void UpdateFPComponent(class AActor* FPComponent);
	void VStatusEffectTarget_OnTextureEffectStart(class UTESEffectShader* form_0, const TArray<struct FLinearColor>& VFXColors, const TArray<class UStaticMeshComponent*>& MeshIgnoreList, float StatusEffectValue);
	void VStatusEffectTarget_OnTextureEffectStop();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_StatusEffect_C">();
	}
	static class UBPC_StatusEffect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_StatusEffect_C>();
	}
};
static_assert(alignof(UBPC_StatusEffect_C) == 0x000008, "Wrong alignment on UBPC_StatusEffect_C");
static_assert(sizeof(UBPC_StatusEffect_C) == 0x0002A0, "Wrong size on UBPC_StatusEffect_C");
static_assert(offsetof(UBPC_StatusEffect_C, UberGraphFrame) == 0x0000A0, "Member 'UBPC_StatusEffect_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, form) == 0x0000A8, "Member 'UBPC_StatusEffect_C::form' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, VFX_Colors) == 0x0000B0, "Member 'UBPC_StatusEffect_C::VFX_Colors' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, ApplyMaterialSwitch) == 0x0000C0, "Member 'UBPC_StatusEffect_C::ApplyMaterialSwitch' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, OverlayMaterialInterface) == 0x0000C8, "Member 'UBPC_StatusEffect_C::OverlayMaterialInterface' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, PawnOwner) == 0x0000D0, "Member 'UBPC_StatusEffect_C::PawnOwner' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, Overlay_MinimumLifeTimeReached) == 0x0000D8, "Member 'UBPC_StatusEffect_C::Overlay_MinimumLifeTimeReached' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, Overlay_MinimumLifeTimeTimer) == 0x0000E0, "Member 'UBPC_StatusEffect_C::Overlay_MinimumLifeTimeTimer' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, Overlay_MinimumLifeTime) == 0x0000E8, "Member 'UBPC_StatusEffect_C::Overlay_MinimumLifeTime' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, Mesh_Ignore_List) == 0x0000F0, "Member 'UBPC_StatusEffect_C::Mesh_Ignore_List' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, OverlayFade_in_T__Fade_Out_F_) == 0x000100, "Member 'UBPC_StatusEffect_C::OverlayFade_in_T__Fade_Out_F_' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, OverlayFadeStartTime) == 0x000108, "Member 'UBPC_StatusEffect_C::OverlayFadeStartTime' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, OverlayFadeCurrentTime) == 0x000110, "Member 'UBPC_StatusEffect_C::OverlayFadeCurrentTime' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, OverlayFadeTimer) == 0x000118, "Member 'UBPC_StatusEffect_C::OverlayFadeTimer' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, OverlayFadeDuration) == 0x000120, "Member 'UBPC_StatusEffect_C::OverlayFadeDuration' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, Status_Effect_Value) == 0x000128, "Member 'UBPC_StatusEffect_C::Status_Effect_Value' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, Overlay_Material) == 0x000130, "Member 'UBPC_StatusEffect_C::Overlay_Material' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, OverlayIsFading) == 0x000158, "Member 'UBPC_StatusEffect_C::OverlayIsFading' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, MaterialSwitchIsFading) == 0x000159, "Member 'UBPC_StatusEffect_C::MaterialSwitchIsFading' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, MaterialSwitchFade_in_T__Fade_Out_F_) == 0x00015A, "Member 'UBPC_StatusEffect_C::MaterialSwitchFade_in_T__Fade_Out_F_' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, MaterialSwitchFadeStartTime) == 0x000160, "Member 'UBPC_StatusEffect_C::MaterialSwitchFadeStartTime' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, MaterialSwitchFadeCurrentTime) == 0x000168, "Member 'UBPC_StatusEffect_C::MaterialSwitchFadeCurrentTime' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, MaterialSwitchFadeTimer) == 0x000170, "Member 'UBPC_StatusEffect_C::MaterialSwitchFadeTimer' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, MaterialSwitchFadeDuration) == 0x000178, "Member 'UBPC_StatusEffect_C::MaterialSwitchFadeDuration' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, Overlay_EffectIsStarting) == 0x000180, "Member 'UBPC_StatusEffect_C::Overlay_EffectIsStarting' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, OverlayMIDs) == 0x000188, "Member 'UBPC_StatusEffect_C::OverlayMIDs' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, MaterialSwitch_EffectIsStarting) == 0x000198, "Member 'UBPC_StatusEffect_C::MaterialSwitch_EffectIsStarting' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, ComponentInvisibilityData) == 0x0001A0, "Member 'UBPC_StatusEffect_C::ComponentInvisibilityData' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, ComponentIDAndPrimitiveIndex) == 0x0001B0, "Member 'UBPC_StatusEffect_C::ComponentIDAndPrimitiveIndex' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, IsPlayerCharacter) == 0x000200, "Member 'UBPC_StatusEffect_C::IsPlayerCharacter' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, MeshData) == 0x000208, "Member 'UBPC_StatusEffect_C::MeshData' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, PrimitiveData) == 0x000258, "Member 'UBPC_StatusEffect_C::PrimitiveData' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, RecentlyInitialized) == 0x000268, "Member 'UBPC_StatusEffect_C::RecentlyInitialized' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, IsWeapon) == 0x000269, "Member 'UBPC_StatusEffect_C::IsWeapon' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, MS_RefreshingSameEffect) == 0x00026A, "Member 'UBPC_StatusEffect_C::MS_RefreshingSameEffect' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, HideTails) == 0x00026B, "Member 'UBPC_StatusEffect_C::HideTails' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, BodyComponent) == 0x000270, "Member 'UBPC_StatusEffect_C::BodyComponent' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, IsArgonian) == 0x000278, "Member 'UBPC_StatusEffect_C::IsArgonian' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, IsKhajiit) == 0x000279, "Member 'UBPC_StatusEffect_C::IsKhajiit' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, IsMale) == 0x00027A, "Member 'UBPC_StatusEffect_C::IsMale' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, SkipFade) == 0x00027B, "Member 'UBPC_StatusEffect_C::SkipFade' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, OE_RefreshingSameEffect) == 0x00027C, "Member 'UBPC_StatusEffect_C::OE_RefreshingSameEffect' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, WaitForMinimalLifetimeEndBeforeStop) == 0x000280, "Member 'UBPC_StatusEffect_C::WaitForMinimalLifetimeEndBeforeStop' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, CallsEndedWithStart) == 0x000288, "Member 'UBPC_StatusEffect_C::CallsEndedWithStart' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, BloodSplatterComponent) == 0x000290, "Member 'UBPC_StatusEffect_C::BloodSplatterComponent' has a wrong offset!");
static_assert(offsetof(UBPC_StatusEffect_C, IsGhost) == 0x000298, "Member 'UBPC_StatusEffect_C::IsGhost' has a wrong offset!");

}

