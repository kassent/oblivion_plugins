#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TABP_EnhancedLocomotionInAir

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "TABP_EnhancedLocomotionInAir_structs.hpp"
#include "Altar_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass TABP_EnhancedLocomotionInAir.TABP_EnhancedLocomotionInAir_C
// 0x0BD0 (0x1090 - 0x04C0)
class UTABP_EnhancedLocomotionInAir_C final : public UVEnhancedInAirCharacterAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct TABP_EnhancedLocomotionInAir::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables; // 0x04C8(0x0002)(HasGetValueTypeHash)
	uint8                                         Pad_4CA[0x6];                                      // 0x04CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x04D0(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x04D8(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x04E0(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x0500(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x0528(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x0550(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x0578(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x05A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x05C8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x05F0(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x0618(0x0020)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0638(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0700(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0728(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0770(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x07B8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x0800(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0820(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0848(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0870(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0898(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x08C0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x08E8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0930(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0950(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0998(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x09B8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0A00(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0A20(0x0028)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x0A48(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0B10(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0B30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0B58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0B80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0BA8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0BD0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0C18(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0C38(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0C80(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0CA0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0CC8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0D10(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0D30(0x0028)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0D58(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0E20(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0E40(0x00C8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0F08(0x00B8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0FC0(0x0080)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1040(0x0020)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x1060(0x0010)()
	bool                                          K2Node_PropertyAccess_23;                          // 0x1070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_22;                          // 0x1071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_21;                          // 0x1072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_20;                          // 0x1073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_19;                          // 0x1074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1075[0x3];                                     // 0x1075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_PropertyAccess_18;                          // 0x1078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_15;                          // 0x107C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_14;                          // 0x107D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_13;                          // 0x107E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_12;                          // 0x107F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_9;                           // 0x1080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_7;                           // 0x1081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_5;                           // 0x1082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_3;                           // 0x1083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_2;                           // 0x1084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_1;                           // 0x1085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void ExecuteUbergraph_TABP_EnhancedLocomotionInAir(int32 EntryPoint);
	void LocomotionInAirLayer(const struct FPoseLink& LocomotionPose, struct FPoseLink* LocomotionInAirLayer_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TABP_EnhancedLocomotionInAir_C">();
	}
	static class UTABP_EnhancedLocomotionInAir_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTABP_EnhancedLocomotionInAir_C>();
	}
};
static_assert(alignof(UTABP_EnhancedLocomotionInAir_C) == 0x000010, "Wrong alignment on UTABP_EnhancedLocomotionInAir_C");
static_assert(sizeof(UTABP_EnhancedLocomotionInAir_C) == 0x001090, "Wrong size on UTABP_EnhancedLocomotionInAir_C");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, UberGraphFrame) == 0x0004C0, "Member 'UTABP_EnhancedLocomotionInAir_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, __AnimBlueprintMutables) == 0x0004C8, "Member 'UTABP_EnhancedLocomotionInAir_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimBlueprintExtension_PropertyAccess) == 0x0004D0, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimBlueprintExtension_Base) == 0x0004D8, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_Root_1) == 0x0004E0, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_TransitionResult_17) == 0x000500, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_TransitionResult_16) == 0x000528, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_TransitionResult_15) == 0x000550, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_TransitionResult_14) == 0x000578, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_TransitionResult_13) == 0x0005A0, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_TransitionResult_12) == 0x0005C8, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_UseCachedPose_1) == 0x0005F0, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_StateResult_9) == 0x000618, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_ApplyAdditive) == 0x000638, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_UseCachedPose) == 0x000700, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_SequencePlayer_7) == 0x000728, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_SequencePlayer_6) == 0x000770, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_BlendListByBool) == 0x0007B8, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_StateResult_8) == 0x000800, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_TransitionResult_11) == 0x000820, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_TransitionResult_10) == 0x000848, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_TransitionResult_9) == 0x000870, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_TransitionResult_8) == 0x000898, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_TransitionResult_7) == 0x0008C0, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_SequencePlayer_5) == 0x0008E8, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_StateResult_7) == 0x000930, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_SequencePlayer_4) == 0x000950, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_StateResult_6) == 0x000998, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_SequencePlayer_3) == 0x0009B8, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_StateResult_5) == 0x000A00, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_TransitionResult_6) == 0x000A20, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_StateMachine_2) == 0x000A48, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_StateResult_4) == 0x000B10, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_TransitionResult_5) == 0x000B30, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_TransitionResult_4) == 0x000B58, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_TransitionResult_3) == 0x000B80, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_TransitionResult_2) == 0x000BA8, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_SequencePlayer_2) == 0x000BD0, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_StateResult_3) == 0x000C18, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_SequencePlayer_1) == 0x000C38, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_StateResult_2) == 0x000C80, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_TransitionResult_1) == 0x000CA0, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_SequencePlayer) == 0x000CC8, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_StateResult_1) == 0x000D10, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_TransitionResult) == 0x000D30, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_StateMachine_1) == 0x000D58, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_StateResult) == 0x000E20, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_StateMachine) == 0x000E40, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_LinkedInputPose) == 0x000F08, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_SaveCachedPose) == 0x000FC0, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_Root) == 0x001040, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, AnimGraphNode_LocalRefPose) == 0x001060, "Member 'UTABP_EnhancedLocomotionInAir_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, K2Node_PropertyAccess_23) == 0x001070, "Member 'UTABP_EnhancedLocomotionInAir_C::K2Node_PropertyAccess_23' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, K2Node_PropertyAccess_22) == 0x001071, "Member 'UTABP_EnhancedLocomotionInAir_C::K2Node_PropertyAccess_22' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, K2Node_PropertyAccess_21) == 0x001072, "Member 'UTABP_EnhancedLocomotionInAir_C::K2Node_PropertyAccess_21' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, K2Node_PropertyAccess_20) == 0x001073, "Member 'UTABP_EnhancedLocomotionInAir_C::K2Node_PropertyAccess_20' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, K2Node_PropertyAccess_19) == 0x001074, "Member 'UTABP_EnhancedLocomotionInAir_C::K2Node_PropertyAccess_19' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, K2Node_PropertyAccess_18) == 0x001078, "Member 'UTABP_EnhancedLocomotionInAir_C::K2Node_PropertyAccess_18' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, K2Node_PropertyAccess_15) == 0x00107C, "Member 'UTABP_EnhancedLocomotionInAir_C::K2Node_PropertyAccess_15' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, K2Node_PropertyAccess_14) == 0x00107D, "Member 'UTABP_EnhancedLocomotionInAir_C::K2Node_PropertyAccess_14' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, K2Node_PropertyAccess_13) == 0x00107E, "Member 'UTABP_EnhancedLocomotionInAir_C::K2Node_PropertyAccess_13' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, K2Node_PropertyAccess_12) == 0x00107F, "Member 'UTABP_EnhancedLocomotionInAir_C::K2Node_PropertyAccess_12' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, K2Node_PropertyAccess_9) == 0x001080, "Member 'UTABP_EnhancedLocomotionInAir_C::K2Node_PropertyAccess_9' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, K2Node_PropertyAccess_7) == 0x001081, "Member 'UTABP_EnhancedLocomotionInAir_C::K2Node_PropertyAccess_7' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, K2Node_PropertyAccess_5) == 0x001082, "Member 'UTABP_EnhancedLocomotionInAir_C::K2Node_PropertyAccess_5' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, K2Node_PropertyAccess_3) == 0x001083, "Member 'UTABP_EnhancedLocomotionInAir_C::K2Node_PropertyAccess_3' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, K2Node_PropertyAccess_2) == 0x001084, "Member 'UTABP_EnhancedLocomotionInAir_C::K2Node_PropertyAccess_2' has a wrong offset!");
static_assert(offsetof(UTABP_EnhancedLocomotionInAir_C, K2Node_PropertyAccess_1) == 0x001085, "Member 'UTABP_EnhancedLocomotionInAir_C::K2Node_PropertyAccess_1' has a wrong offset!");

}

