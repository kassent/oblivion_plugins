#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Graphics_DLSS_SR

#include "Basic.hpp"

#include "DLSSBlueprint_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_Graphics_DLSS_SR.WBP_Graphics_DLSS_SR_C.ExecuteUbergraph_WBP_Graphics_DLSS_SR
// 0x0160 (0x0160 - 0x0000)
struct WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDLSSModeInformation_bIsSupported;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDLSSModeInformation_OptimalScreenPercentage; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDLSSModeInformation_MinScreenPercentage; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_MaxScreenPercentage; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_OptimalSharpness;  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDLSSModeInformation_bIsSupported_1;    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDLSSModeInformation_OptimalScreenPercentage_1; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage_1; // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDLSSModeInformation_MinScreenPercentage_1; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_MaxScreenPercentage_1; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_OptimalSharpness_1; // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& SelectedItem, ESelectInfo SelectionType)> K2Node_CreateDelegate_OutputDelegate_1; // 0x00D4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_SelectedItem;                   // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_CustomEvent_SelectionType;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_GraphicsPanel_C*                   K2Node_DynamicCast_AsWBP_Graphics_Panel;           // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UWBP_GraphicsPanel_C*                   K2Node_DynamicCast_AsWBP_Graphics_Panel_1;         // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast_1;             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR) == 0x000008, "Wrong alignment on WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR");
static_assert(sizeof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR) == 0x000160, "Wrong size on WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, EntryPoint) == 0x000000, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_GetViewportSize_ReturnValue) == 0x000008, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_GetDLSSModeInformation_bIsSupported) == 0x000028, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_GetDLSSModeInformation_bIsSupported' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_GetDLSSModeInformation_OptimalScreenPercentage) == 0x00002C, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_GetDLSSModeInformation_OptimalScreenPercentage' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage) == 0x000030, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_GetDLSSModeInformation_MinScreenPercentage) == 0x000034, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_GetDLSSModeInformation_MinScreenPercentage' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_GetDLSSModeInformation_MaxScreenPercentage) == 0x000038, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_GetDLSSModeInformation_MaxScreenPercentage' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_GetDLSSModeInformation_OptimalSharpness) == 0x00003C, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_GetDLSSModeInformation_OptimalSharpness' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_BooleanAND_ReturnValue) == 0x000041, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000042, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_Not_PreBool_ReturnValue) == 0x000043, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_BooleanOR_ReturnValue) == 0x000044, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_BooleanOR_ReturnValue_1) == 0x000045, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_SelectFloat_ReturnValue) == 0x000048, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_BooleanOR_ReturnValue_2) == 0x000050, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000058, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000078, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_GetDLSSModeInformation_bIsSupported_1) == 0x000079, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_GetDLSSModeInformation_bIsSupported_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_GetDLSSModeInformation_OptimalScreenPercentage_1) == 0x00007C, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_GetDLSSModeInformation_OptimalScreenPercentage_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage_1) == 0x000080, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_GetDLSSModeInformation_MinScreenPercentage_1) == 0x000084, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_GetDLSSModeInformation_MinScreenPercentage_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_GetDLSSModeInformation_MaxScreenPercentage_1) == 0x000088, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_GetDLSSModeInformation_MaxScreenPercentage_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_GetDLSSModeInformation_OptimalSharpness_1) == 0x00008C, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_GetDLSSModeInformation_OptimalSharpness_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_BooleanOR_ReturnValue_3) == 0x000090, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_Not_PreBool_ReturnValue_1) == 0x000091, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_SelectFloat_ReturnValue_1) == 0x000098, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_BooleanOR_ReturnValue_4) == 0x0000A0, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x0000A8, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_BooleanOR_ReturnValue_5) == 0x0000B8, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C0, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000D0, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000D4, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, K2Node_Event_IsDesignTime) == 0x0000E4, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, K2Node_CustomEvent_SelectedItem) == 0x0000E8, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::K2Node_CustomEvent_SelectedItem' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, K2Node_CustomEvent_SelectionType) == 0x0000F8, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::K2Node_CustomEvent_SelectionType' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_Array_Find_ReturnValue) == 0x0000FC, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_Conv_IntToByte_ReturnValue) == 0x000100, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_GetValidValue_ReturnValue) == 0x000101, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, K2Node_DynamicCast_AsWBP_Graphics_Panel) == 0x000108, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::K2Node_DynamicCast_AsWBP_Graphics_Panel' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000118, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000128, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, K2Node_DynamicCast_AsWBP_Graphics_Panel_1) == 0x000138, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::K2Node_DynamicCast_AsWBP_Graphics_Panel_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, K2Node_DynamicCast_bSuccess_1) == 0x000140, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_SelectFloat_B_ImplicitCast) == 0x000148, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000150, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR, CallFunc_SelectFloat_B_ImplicitCast_1) == 0x000158, "Member 'WBP_Graphics_DLSS_SR_C_ExecuteUbergraph_WBP_Graphics_DLSS_SR::CallFunc_SelectFloat_B_ImplicitCast_1' has a wrong offset!");

// Function WBP_Graphics_DLSS_SR.WBP_Graphics_DLSS_SR_C.OnSelectionChanged_Event_DLSSMode
// 0x0018 (0x0018 - 0x0000)
struct WBP_Graphics_DLSS_SR_C_OnSelectionChanged_Event_DLSSMode final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Graphics_DLSS_SR_C_OnSelectionChanged_Event_DLSSMode) == 0x000008, "Wrong alignment on WBP_Graphics_DLSS_SR_C_OnSelectionChanged_Event_DLSSMode");
static_assert(sizeof(WBP_Graphics_DLSS_SR_C_OnSelectionChanged_Event_DLSSMode) == 0x000018, "Wrong size on WBP_Graphics_DLSS_SR_C_OnSelectionChanged_Event_DLSSMode");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_OnSelectionChanged_Event_DLSSMode, SelectedItem) == 0x000000, "Member 'WBP_Graphics_DLSS_SR_C_OnSelectionChanged_Event_DLSSMode::SelectedItem' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_OnSelectionChanged_Event_DLSSMode, SelectionType) == 0x000010, "Member 'WBP_Graphics_DLSS_SR_C_OnSelectionChanged_Event_DLSSMode::SelectionType' has a wrong offset!");

// Function WBP_Graphics_DLSS_SR.WBP_Graphics_DLSS_SR_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Graphics_DLSS_SR_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Graphics_DLSS_SR_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Graphics_DLSS_SR_C_PreConstruct");
static_assert(sizeof(WBP_Graphics_DLSS_SR_C_PreConstruct) == 0x000001, "Wrong size on WBP_Graphics_DLSS_SR_C_PreConstruct");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Graphics_DLSS_SR_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Graphics_DLSS_SR.WBP_Graphics_DLSS_SR_C.Refresh
// 0x0098 (0x0098 - 0x0000)
struct WBP_Graphics_DLSS_SR_C_Refresh final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDLSSSupported_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EUDLSSMode>                            CallFunc_GetSupportedDLSSModes_ReturnValue;        // 0x0050(0x0010)(ReferenceParm)
	EUDLSSMode                                    CallFunc_Array_Get_Item;                           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLabel_ReturnValue;                     // 0x0080(0x0018)(ConstParm)
};
static_assert(alignof(WBP_Graphics_DLSS_SR_C_Refresh) == 0x000008, "Wrong alignment on WBP_Graphics_DLSS_SR_C_Refresh");
static_assert(sizeof(WBP_Graphics_DLSS_SR_C_Refresh) == 0x000098, "Wrong size on WBP_Graphics_DLSS_SR_C_Refresh");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_Refresh, Temp_int_Variable) == 0x000000, "Member 'WBP_Graphics_DLSS_SR_C_Refresh::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_Refresh, Temp_int_Variable_1) == 0x000004, "Member 'WBP_Graphics_DLSS_SR_C_Refresh::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_Refresh, CallFunc_Conv_IntToByte_ReturnValue) == 0x000008, "Member 'WBP_Graphics_DLSS_SR_C_Refresh::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_Refresh, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_Graphics_DLSS_SR_C_Refresh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_Refresh, CallFunc_GetValidValue_ReturnValue) == 0x000010, "Member 'WBP_Graphics_DLSS_SR_C_Refresh::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_Refresh, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000011, "Member 'WBP_Graphics_DLSS_SR_C_Refresh::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_Refresh, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000018, "Member 'WBP_Graphics_DLSS_SR_C_Refresh::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_Refresh, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000028, "Member 'WBP_Graphics_DLSS_SR_C_Refresh::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_Refresh, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00002C, "Member 'WBP_Graphics_DLSS_SR_C_Refresh::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_Refresh, Temp_int_Array_Index_Variable) == 0x000030, "Member 'WBP_Graphics_DLSS_SR_C_Refresh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_Refresh, CallFunc_IsDLSSSupported_ReturnValue) == 0x000034, "Member 'WBP_Graphics_DLSS_SR_C_Refresh::CallFunc_IsDLSSSupported_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_Refresh, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'WBP_Graphics_DLSS_SR_C_Refresh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_Refresh, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'WBP_Graphics_DLSS_SR_C_Refresh::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_Refresh, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'WBP_Graphics_DLSS_SR_C_Refresh::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_Refresh, CallFunc_MakeLiteralInt_ReturnValue) == 0x000044, "Member 'WBP_Graphics_DLSS_SR_C_Refresh::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_Refresh, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'WBP_Graphics_DLSS_SR_C_Refresh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_Refresh, CallFunc_GetSupportedDLSSModes_ReturnValue) == 0x000050, "Member 'WBP_Graphics_DLSS_SR_C_Refresh::CallFunc_GetSupportedDLSSModes_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_Refresh, CallFunc_Array_Get_Item) == 0x000060, "Member 'WBP_Graphics_DLSS_SR_C_Refresh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_Refresh, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'WBP_Graphics_DLSS_SR_C_Refresh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_Refresh, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000068, "Member 'WBP_Graphics_DLSS_SR_C_Refresh::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_Refresh, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'WBP_Graphics_DLSS_SR_C_Refresh::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_Refresh, CallFunc_GetLabel_ReturnValue) == 0x000080, "Member 'WBP_Graphics_DLSS_SR_C_Refresh::CallFunc_GetLabel_ReturnValue' has a wrong offset!");

// Function WBP_Graphics_DLSS_SR.WBP_Graphics_DLSS_SR_C.RefreshDLSSModeOptions
// 0x0040 (0x0040 - 0x0000)
struct WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions final
{
public:
	float                                         CallFunc_GetConsoleVariableFloatValue_ReturnValue; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_2;     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_3;     // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_4;     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_1;  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_2;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_3;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_4;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions) == 0x000008, "Wrong alignment on WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions");
static_assert(sizeof(WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions) == 0x000040, "Wrong size on WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions, CallFunc_GetConsoleVariableFloatValue_ReturnValue) == 0x000000, "Member 'WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions::CallFunc_GetConsoleVariableFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x000005, "Member 'WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions, CallFunc_NearlyEqual_FloatFloat_ReturnValue_2) == 0x000006, "Member 'WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions::CallFunc_NearlyEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions, CallFunc_NearlyEqual_FloatFloat_ReturnValue_3) == 0x000007, "Member 'WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions::CallFunc_NearlyEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions, CallFunc_NearlyEqual_FloatFloat_ReturnValue_4) == 0x000008, "Member 'WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions::CallFunc_NearlyEqual_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x00000C, "Member 'WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x000018, "Member 'WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_1) == 0x000020, "Member 'WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_2) == 0x000028, "Member 'WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_3) == 0x000030, "Member 'WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_4) == 0x000038, "Member 'WBP_Graphics_DLSS_SR_C_RefreshDLSSModeOptions::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_4' has a wrong offset!");

}

