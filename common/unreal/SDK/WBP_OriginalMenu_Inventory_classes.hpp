#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_OriginalMenu_Inventory

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CommonInput_structs.hpp"
#include "Altar_structs.hpp"
#include "Altar_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_OriginalMenu_Inventory.WBP_OriginalMenu_Inventory_C
// 0x0178 (0x0670 - 0x04F8)
class UWBP_OriginalMenu_Inventory_C final : public UVInventoryMenu
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVQuickKeysMenuViewModel*               VQuickKeysMenuViewModel;                           // 0x0500(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, DuplicateTransient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UVInventoryMenuViewModel*               VInventoryMenuViewModel;                           // 0x0508(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, DuplicateTransient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UVItemDetailsViewModel*                 VItemDetailsViewModel;                             // 0x0510(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, DuplicateTransient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UVFooterViewModel*                      VFooterViewModel;                                  // 0x0518(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, DuplicateTransient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UVItemEffectsViewModel*                 VItemEffectsViewModel;                             // 0x0520(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, DuplicateTransient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       QuickKeysFadeInOut;                                // 0x0528(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeInOutDetails;                                  // 0x0530(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       InventorySlideRight;                               // 0x0538(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       InventorySlideLeft;                                // 0x0540(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       InventoryFadeInOut;                                // 0x0548(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_OriginalMenu_InventoryItemDetails_C* inv_item_details;                                // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OriginalMenu_InventoryMainPart_C*  inv_main_part;                                     // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModernMenu_QuickKeys_C*            inv_quickKeys;                                     // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          ShouldDisplayPlayer;                               // 0x0568(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_569[0x7];                                      // 0x0569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTESForm*                               CurrentFormID;                                     // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UVOriginalInventoryMenuItem*            CurrentHoveredItem;                                // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ObjectHoveredActor;                                // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTESForm*                               ObjectHoveredFormID;                               // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ActualCameraPosition;                              // 0x0590(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(bool ShouldDisplayPlayerPreview)> ShouldDisplayPlayerPreview;      // 0x05A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsInPreviewMode;                                   // 0x05B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B9[0x7];                                      // 0x05B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RotationSensitivity;                               // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           HideShowDetailsInputAction;                        // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsQuickKeysWheelVisible;                           // 0x05D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ShowWheelInputKey;                                 // 0x05D8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   HideWheelInputKey;                                 // 0x05F0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   ShowDetailsHintKey;                                // 0x0608(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   HideDetailsHintKey;                                // 0x0620(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   ToggleDetailsHintKey;                              // 0x0638(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   AssignItemHintKey;                                 // 0x0650(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsKeyboardInputMode;                               // 0x0668(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayerMenuClosing;                               // 0x0669(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsQuickWheelClosing;                               // 0x066A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WBP_OriginalMenu_Inventory_inv_item_details_K2Node_ComponentBoundEvent_0_SendNewItemActor__DelegateSignature(class AActor* NewActor);
	void BndEvt__WBP_OriginalMenu_Inventory_inv_item_details_K2Node_ComponentBoundEvent_1_DetailsPanelVisibilityChanged__DelegateSignature(bool IsVisible_0);
	void BndEvt__WBP_OriginalMenu_Inventory_inv_item_details_K2Node_ComponentBoundEvent_2_OnSubTabsSwitched__DelegateSignature();
	void BndEvt__WBP_OriginalMenu_Inventory_inv_item_details_K2Node_ComponentBoundEvent_4_OnActionClicked__DelegateSignature();
	void BndEvt__WBP_OriginalMenu_Inventory_inv_quickKeys_K2Node_ComponentBoundEvent_5_OnCloseAnimationEnd__DelegateSignature();
	void BndEvt__WBP_OriginalMenu_Inventory_inv_quickKeys_K2Node_ComponentBoundEvent_6_OnVisibilityChangedEvent__DelegateSignature(ESlateVisibility InVisibility);
	void BndEvt__WBP_OriginalMenu_Inventory_WBP_OriginalMenu_MainPart_K2Node_ComponentBoundEvent_3_OnItemHovered__DelegateSignature(class UVOriginalInventoryMenuItem* NewItem);
	void BP_OnActivated();
	void BP_OnDeactivated();
	void CanInterract(bool CheckFilterFocus, bool CheckQuickWheelIsOpen, bool CheckIsFirstDetailsTab, bool* Value);
	void Change_Visibility_Of_Object(bool IsMenuOpen);
	void ChangeTab(bool GoToNext);
	void Construct();
	void ExecuteUbergraph_WBP_OriginalMenu_Inventory(int32 EntryPoint);
	void FadeInOutMenu(bool bIsVisible, bool bFromLeft, bool bInstant);
	void HideInventoryItemPreview();
	void InpActEvt_IA_UI_Specific_Common_NextTab_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Common_PreviousTab_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Gamepad_InventoryContainerMenu_DetailsInteraction_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Gamepad_InventoryContainerMenu_DetailsInteraction_K2Node_EnhancedInputActionEvent_3(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Gamepad_InventoryContainerMenu_DetailsInteraction_K2Node_EnhancedInputActionEvent_4(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Gamepad_InventoryContainerMenu_DetailsInteraction_K2Node_EnhancedInputActionEvent_5(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_InventoryContainerMenu_NextDetailsPage_K2Node_EnhancedInputActionEvent_6(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_InventoryContainerMenu_PreviousDetailsPage_K2Node_EnhancedInputActionEvent_7(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_InventoryContainerMenu_ToggleSorting_K2Node_EnhancedInputActionEvent_17(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_InventoryMenu_AssignToWheel_K2Node_EnhancedInputActionEvent_16(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_InventoryMenu_Drop_K2Node_EnhancedInputActionEvent_19(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_InventoryMenu_Drop_K2Node_EnhancedInputActionEvent_20(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_InventoryMenu_Drop_K2Node_EnhancedInputActionEvent_21(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_InventoryMenu_Drop_K2Node_EnhancedInputActionEvent_22(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Keyboard_InventoryContainerMenu_HideShowDetails_K2Node_EnhancedInputActionEvent_18(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_QuickKeys_Keyboard_1_K2Node_EnhancedInputActionEvent_15(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_QuickKeys_Keyboard_2_K2Node_EnhancedInputActionEvent_14(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_QuickKeys_Keyboard_3_K2Node_EnhancedInputActionEvent_13(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_QuickKeys_Keyboard_4_K2Node_EnhancedInputActionEvent_12(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_QuickKeys_Keyboard_5_K2Node_EnhancedInputActionEvent_11(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_QuickKeys_Keyboard_6_K2Node_EnhancedInputActionEvent_10(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_QuickKeys_Keyboard_7_K2Node_EnhancedInputActionEvent_9(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_QuickKeys_Keyboard_8_K2Node_EnhancedInputActionEvent_8(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InputMethodChanged(ECommonInputType bNewInputType);
	void IsFilterFocused(bool* IsClosed);
	void IsInTopMostFocusedStack(bool* Value);
	void MenuFadeInOut(bool InIsVisible, bool InFromLeft, bool InInstant);
	void OnDetailsVisibilityChanged(bool InIsVisible);
	void OnFocus();
	void OnPressedQuickKey(int32 KeyID);
	void RefreshItemPreview();
	void ResetPreviewMode();
	void RotatePreviewedItem();
	void SetInputForFooter(class UWBP_Modern_Menu_Player_Footer_C* Footer);
	void SetIsPlayerMenuClosing(bool Value);
	void SwitchDetails();
	void SwitchQuickKeysWheel(bool DoOpen, bool bInstant);
	void ThisIsForPluginCompliance(bool Test);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Update_Preview_Frame_Highlight(bool IsInPreview_, bool IsInstant);
	void UpdateBlockBackAction(bool Value);
	void UpdateFooterDetails();
	void UpdateFooterQuickWheel();
	void UpdateHoveredItemFormID(class UTESForm* NewFormId);
	void UpdateHoveredObject(class UTESForm* NewForm);
	void UpdateItemList(const TArray<struct FOriginalInventoryMenuItemProperties>& Value);
	void UpdateQuickWheel();

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_OriginalMenu_Inventory_C">();
	}
	static class UWBP_OriginalMenu_Inventory_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_OriginalMenu_Inventory_C>();
	}
};
static_assert(alignof(UWBP_OriginalMenu_Inventory_C) == 0x000008, "Wrong alignment on UWBP_OriginalMenu_Inventory_C");
static_assert(sizeof(UWBP_OriginalMenu_Inventory_C) == 0x000670, "Wrong size on UWBP_OriginalMenu_Inventory_C");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, UberGraphFrame) == 0x0004F8, "Member 'UWBP_OriginalMenu_Inventory_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, VQuickKeysMenuViewModel) == 0x000500, "Member 'UWBP_OriginalMenu_Inventory_C::VQuickKeysMenuViewModel' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, VInventoryMenuViewModel) == 0x000508, "Member 'UWBP_OriginalMenu_Inventory_C::VInventoryMenuViewModel' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, VItemDetailsViewModel) == 0x000510, "Member 'UWBP_OriginalMenu_Inventory_C::VItemDetailsViewModel' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, VFooterViewModel) == 0x000518, "Member 'UWBP_OriginalMenu_Inventory_C::VFooterViewModel' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, VItemEffectsViewModel) == 0x000520, "Member 'UWBP_OriginalMenu_Inventory_C::VItemEffectsViewModel' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, QuickKeysFadeInOut) == 0x000528, "Member 'UWBP_OriginalMenu_Inventory_C::QuickKeysFadeInOut' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, FadeInOutDetails) == 0x000530, "Member 'UWBP_OriginalMenu_Inventory_C::FadeInOutDetails' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, InventorySlideRight) == 0x000538, "Member 'UWBP_OriginalMenu_Inventory_C::InventorySlideRight' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, InventorySlideLeft) == 0x000540, "Member 'UWBP_OriginalMenu_Inventory_C::InventorySlideLeft' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, InventoryFadeInOut) == 0x000548, "Member 'UWBP_OriginalMenu_Inventory_C::InventoryFadeInOut' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, inv_item_details) == 0x000550, "Member 'UWBP_OriginalMenu_Inventory_C::inv_item_details' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, inv_main_part) == 0x000558, "Member 'UWBP_OriginalMenu_Inventory_C::inv_main_part' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, inv_quickKeys) == 0x000560, "Member 'UWBP_OriginalMenu_Inventory_C::inv_quickKeys' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, ShouldDisplayPlayer) == 0x000568, "Member 'UWBP_OriginalMenu_Inventory_C::ShouldDisplayPlayer' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, CurrentFormID) == 0x000570, "Member 'UWBP_OriginalMenu_Inventory_C::CurrentFormID' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, CurrentHoveredItem) == 0x000578, "Member 'UWBP_OriginalMenu_Inventory_C::CurrentHoveredItem' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, ObjectHoveredActor) == 0x000580, "Member 'UWBP_OriginalMenu_Inventory_C::ObjectHoveredActor' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, ObjectHoveredFormID) == 0x000588, "Member 'UWBP_OriginalMenu_Inventory_C::ObjectHoveredFormID' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, ActualCameraPosition) == 0x000590, "Member 'UWBP_OriginalMenu_Inventory_C::ActualCameraPosition' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, ShouldDisplayPlayerPreview) == 0x0005A8, "Member 'UWBP_OriginalMenu_Inventory_C::ShouldDisplayPlayerPreview' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, IsInPreviewMode) == 0x0005B8, "Member 'UWBP_OriginalMenu_Inventory_C::IsInPreviewMode' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, RotationSensitivity) == 0x0005C0, "Member 'UWBP_OriginalMenu_Inventory_C::RotationSensitivity' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, HideShowDetailsInputAction) == 0x0005C8, "Member 'UWBP_OriginalMenu_Inventory_C::HideShowDetailsInputAction' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, IsQuickKeysWheelVisible) == 0x0005D0, "Member 'UWBP_OriginalMenu_Inventory_C::IsQuickKeysWheelVisible' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, ShowWheelInputKey) == 0x0005D8, "Member 'UWBP_OriginalMenu_Inventory_C::ShowWheelInputKey' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, HideWheelInputKey) == 0x0005F0, "Member 'UWBP_OriginalMenu_Inventory_C::HideWheelInputKey' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, ShowDetailsHintKey) == 0x000608, "Member 'UWBP_OriginalMenu_Inventory_C::ShowDetailsHintKey' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, HideDetailsHintKey) == 0x000620, "Member 'UWBP_OriginalMenu_Inventory_C::HideDetailsHintKey' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, ToggleDetailsHintKey) == 0x000638, "Member 'UWBP_OriginalMenu_Inventory_C::ToggleDetailsHintKey' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, AssignItemHintKey) == 0x000650, "Member 'UWBP_OriginalMenu_Inventory_C::AssignItemHintKey' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, IsKeyboardInputMode) == 0x000668, "Member 'UWBP_OriginalMenu_Inventory_C::IsKeyboardInputMode' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, IsPlayerMenuClosing) == 0x000669, "Member 'UWBP_OriginalMenu_Inventory_C::IsPlayerMenuClosing' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_Inventory_C, IsQuickWheelClosing) == 0x00066A, "Member 'UWBP_OriginalMenu_Inventory_C::IsQuickWheelClosing' has a wrong offset!");

}

