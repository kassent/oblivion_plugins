#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PairedPawnDebugInfo

#include "Basic.hpp"

#include "UMG_classes.hpp"
#include "Altar_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PairedPawnDebugInfo.WBP_PairedPawnDebugInfo_C
// 0x0068 (0x0328 - 0x02C0)
class UWBP_PairedPawnDebugInfo_C final : public UUserWidget
{
public:
	class UImage*                                 Background;                                        // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           CombatDebugInfos;                                  // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_ControllerName;                               // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_PackageType;                                  // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_PawnName;                                     // 0x02E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_ProcedureType;                                // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_ProcedureType_1;                              // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_ProcedureType_2;                              // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_ProcedureType_3;                              // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_ProcedureType_4;                              // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_ProcedureType_5;                              // 0x0310(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_ProcedureType_6;                              // 0x0318(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AVPairedPawnAIController*               LinkedAIController;                                // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)

public:
	class FText AltarActionStateBinding();
	class FText AnimActionBinding();
	class FText CombatStateBinding();
	class FText ControllerNameBinding();
	class FText ManeuverBinding();
	class FText PackageTypeBinding();
	class FText PawnNameBinding();
	class FText ProcedureTypeBinding();
	class FText StrategyBinding();
	class FText TargetNameBinding();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PairedPawnDebugInfo_C">();
	}
	static class UWBP_PairedPawnDebugInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PairedPawnDebugInfo_C>();
	}
};
static_assert(alignof(UWBP_PairedPawnDebugInfo_C) == 0x000008, "Wrong alignment on UWBP_PairedPawnDebugInfo_C");
static_assert(sizeof(UWBP_PairedPawnDebugInfo_C) == 0x000328, "Wrong size on UWBP_PairedPawnDebugInfo_C");
static_assert(offsetof(UWBP_PairedPawnDebugInfo_C, Background) == 0x0002C0, "Member 'UWBP_PairedPawnDebugInfo_C::Background' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnDebugInfo_C, CombatDebugInfos) == 0x0002C8, "Member 'UWBP_PairedPawnDebugInfo_C::CombatDebugInfos' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnDebugInfo_C, Text_ControllerName) == 0x0002D0, "Member 'UWBP_PairedPawnDebugInfo_C::Text_ControllerName' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnDebugInfo_C, Text_PackageType) == 0x0002D8, "Member 'UWBP_PairedPawnDebugInfo_C::Text_PackageType' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnDebugInfo_C, Text_PawnName) == 0x0002E0, "Member 'UWBP_PairedPawnDebugInfo_C::Text_PawnName' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnDebugInfo_C, Text_ProcedureType) == 0x0002E8, "Member 'UWBP_PairedPawnDebugInfo_C::Text_ProcedureType' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnDebugInfo_C, Text_ProcedureType_1) == 0x0002F0, "Member 'UWBP_PairedPawnDebugInfo_C::Text_ProcedureType_1' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnDebugInfo_C, Text_ProcedureType_2) == 0x0002F8, "Member 'UWBP_PairedPawnDebugInfo_C::Text_ProcedureType_2' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnDebugInfo_C, Text_ProcedureType_3) == 0x000300, "Member 'UWBP_PairedPawnDebugInfo_C::Text_ProcedureType_3' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnDebugInfo_C, Text_ProcedureType_4) == 0x000308, "Member 'UWBP_PairedPawnDebugInfo_C::Text_ProcedureType_4' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnDebugInfo_C, Text_ProcedureType_5) == 0x000310, "Member 'UWBP_PairedPawnDebugInfo_C::Text_ProcedureType_5' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnDebugInfo_C, Text_ProcedureType_6) == 0x000318, "Member 'UWBP_PairedPawnDebugInfo_C::Text_ProcedureType_6' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnDebugInfo_C, LinkedAIController) == 0x000320, "Member 'UWBP_PairedPawnDebugInfo_C::LinkedAIController' has a wrong offset!");

}

