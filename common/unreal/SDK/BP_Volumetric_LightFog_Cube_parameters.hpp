#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Volumetric_LightFog_Cube

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Volumetric_LightFog_Cube.BP_Volumetric_LightFog_Cube_C.Setup Light Fog Cube Parameters
// 0x0040 (0x0040 - 0x0000)
struct BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters) == 0x000008, "Wrong alignment on BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters");
static_assert(sizeof(BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters) == 0x000040, "Wrong size on BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters");
static_assert(offsetof(BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters, Temp_bool_Variable) == 0x000000, "Member 'BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters, Temp_real_Variable) == 0x000004, "Member 'BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters, Temp_real_Variable_1) == 0x000008, "Member 'BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters, CallFunc_FMin_ReturnValue) == 0x000020, "Member 'BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters, K2Node_Select_Default) == 0x000028, "Member 'BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00002C, "Member 'BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000030, "Member 'BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000034, "Member 'BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x000038, "Member 'BP_Volumetric_LightFog_Cube_C_Setup_Light_Fog_Cube_Parameters::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");

// Function BP_Volumetric_LightFog_Cube.BP_Volumetric_LightFog_Cube_C.UserConstructionScript
// 0x0038 (0x0038 - 0x0000)
struct BP_Volumetric_LightFog_Cube_C_UserConstructionScript final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_1;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Volumetric_LightFog_Cube_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Volumetric_LightFog_Cube_C_UserConstructionScript");
static_assert(sizeof(BP_Volumetric_LightFog_Cube_C_UserConstructionScript) == 0x000038, "Wrong size on BP_Volumetric_LightFog_Cube_C_UserConstructionScript");
static_assert(offsetof(BP_Volumetric_LightFog_Cube_C_UserConstructionScript, Temp_bool_Variable) == 0x000000, "Member 'BP_Volumetric_LightFog_Cube_C_UserConstructionScript::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Volumetric_LightFog_Cube_C_UserConstructionScript, Temp_object_Variable) == 0x000008, "Member 'BP_Volumetric_LightFog_Cube_C_UserConstructionScript::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Volumetric_LightFog_Cube_C_UserConstructionScript, Temp_object_Variable_1) == 0x000010, "Member 'BP_Volumetric_LightFog_Cube_C_UserConstructionScript::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Volumetric_LightFog_Cube_C_UserConstructionScript, Temp_bool_Variable_1) == 0x000018, "Member 'BP_Volumetric_LightFog_Cube_C_UserConstructionScript::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Volumetric_LightFog_Cube_C_UserConstructionScript, Temp_object_Variable_2) == 0x000020, "Member 'BP_Volumetric_LightFog_Cube_C_UserConstructionScript::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Volumetric_LightFog_Cube_C_UserConstructionScript, K2Node_Select_Default) == 0x000028, "Member 'BP_Volumetric_LightFog_Cube_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Volumetric_LightFog_Cube_C_UserConstructionScript, K2Node_Select_Default_1) == 0x000030, "Member 'BP_Volumetric_LightFog_Cube_C_UserConstructionScript::K2Node_Select_Default_1' has a wrong offset!");

}

