#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TABP_BlockShield

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "TABP_BlockShield_structs.hpp"
#include "Altar_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass TABP_BlockShield.TABP_BlockShield_C
// 0x0530 (0x0910 - 0x03E0)
class UTABP_BlockShield_C final : public UVBlockShieldCharacterAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct TABP_BlockShield::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;             // 0x03E8(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x03F8(0x0008)()
	struct FAnimSubsystemInstance_NodeRelevancy   AnimBlueprintExtension_NodeRelevancy;              // 0x0400(0x00A8)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x04A8(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x04B0(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x04D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x04F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0520(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0548(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0570(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0598(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x05C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x05E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0610(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0638(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0680(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x06A0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x06E8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0708(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0750(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0770(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x07B8(0x0020)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose_1;                      // 0x07D8(0x0010)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x07E8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0808(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x08D0(0x0020)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x08F0(0x0010)()
	bool                                          K2Node_PropertyAccess_11;                          // 0x0900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_10;                          // 0x0901(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_9;                           // 0x0902(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_6;                           // 0x0903(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_5;                           // 0x0904(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_3;                           // 0x0905(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlockingLayer(struct FPoseLink* BlockingLayer_0);
	void ExecuteUbergraph_TABP_BlockShield(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TABP_BlockShield_C">();
	}
	static class UTABP_BlockShield_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTABP_BlockShield_C>();
	}
};
static_assert(alignof(UTABP_BlockShield_C) == 0x000010, "Wrong alignment on UTABP_BlockShield_C");
static_assert(sizeof(UTABP_BlockShield_C) == 0x000910, "Wrong size on UTABP_BlockShield_C");
static_assert(offsetof(UTABP_BlockShield_C, UberGraphFrame) == 0x0003E0, "Member 'UTABP_BlockShield_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, __AnimBlueprintMutables) == 0x0003E8, "Member 'UTABP_BlockShield_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimBlueprintExtension_PropertyAccess) == 0x0003F8, "Member 'UTABP_BlockShield_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimBlueprintExtension_NodeRelevancy) == 0x000400, "Member 'UTABP_BlockShield_C::AnimBlueprintExtension_NodeRelevancy' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimBlueprintExtension_Base) == 0x0004A8, "Member 'UTABP_BlockShield_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimGraphNode_Root_1) == 0x0004B0, "Member 'UTABP_BlockShield_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimGraphNode_TransitionResult_8) == 0x0004D0, "Member 'UTABP_BlockShield_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimGraphNode_TransitionResult_7) == 0x0004F8, "Member 'UTABP_BlockShield_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimGraphNode_TransitionResult_6) == 0x000520, "Member 'UTABP_BlockShield_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimGraphNode_TransitionResult_5) == 0x000548, "Member 'UTABP_BlockShield_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimGraphNode_TransitionResult_4) == 0x000570, "Member 'UTABP_BlockShield_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimGraphNode_TransitionResult_3) == 0x000598, "Member 'UTABP_BlockShield_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimGraphNode_TransitionResult_2) == 0x0005C0, "Member 'UTABP_BlockShield_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimGraphNode_TransitionResult_1) == 0x0005E8, "Member 'UTABP_BlockShield_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimGraphNode_TransitionResult) == 0x000610, "Member 'UTABP_BlockShield_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimGraphNode_SequencePlayer_3) == 0x000638, "Member 'UTABP_BlockShield_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimGraphNode_StateResult_4) == 0x000680, "Member 'UTABP_BlockShield_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimGraphNode_SequencePlayer_2) == 0x0006A0, "Member 'UTABP_BlockShield_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimGraphNode_StateResult_3) == 0x0006E8, "Member 'UTABP_BlockShield_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimGraphNode_SequencePlayer_1) == 0x000708, "Member 'UTABP_BlockShield_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimGraphNode_StateResult_2) == 0x000750, "Member 'UTABP_BlockShield_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimGraphNode_SequencePlayer) == 0x000770, "Member 'UTABP_BlockShield_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimGraphNode_StateResult_1) == 0x0007B8, "Member 'UTABP_BlockShield_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimGraphNode_LocalRefPose_1) == 0x0007D8, "Member 'UTABP_BlockShield_C::AnimGraphNode_LocalRefPose_1' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimGraphNode_StateResult) == 0x0007E8, "Member 'UTABP_BlockShield_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimGraphNode_StateMachine) == 0x000808, "Member 'UTABP_BlockShield_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimGraphNode_Root) == 0x0008D0, "Member 'UTABP_BlockShield_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, AnimGraphNode_LocalRefPose) == 0x0008F0, "Member 'UTABP_BlockShield_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, K2Node_PropertyAccess_11) == 0x000900, "Member 'UTABP_BlockShield_C::K2Node_PropertyAccess_11' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, K2Node_PropertyAccess_10) == 0x000901, "Member 'UTABP_BlockShield_C::K2Node_PropertyAccess_10' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, K2Node_PropertyAccess_9) == 0x000902, "Member 'UTABP_BlockShield_C::K2Node_PropertyAccess_9' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, K2Node_PropertyAccess_6) == 0x000903, "Member 'UTABP_BlockShield_C::K2Node_PropertyAccess_6' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, K2Node_PropertyAccess_5) == 0x000904, "Member 'UTABP_BlockShield_C::K2Node_PropertyAccess_5' has a wrong offset!");
static_assert(offsetof(UTABP_BlockShield_C, K2Node_PropertyAccess_3) == 0x000905, "Member 'UTABP_BlockShield_C::K2Node_PropertyAccess_3' has a wrong offset!");

}

