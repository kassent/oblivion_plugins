#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VChest

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Altar_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_VChest.BP_VChest_C
// 0x00A0 (0x0418 - 0x0378)
class ABP_VChest_C : public AVContainer
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0378(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ULocalMapComponent*                     LocalMap;                                          // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PadLockDefault;                                    // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Lid1;                                              // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Opening_Timeline_3rd_Sec_HalfSec_3rd_80174B9E4AF0B1771BD3829B7C9C9AEC; // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Opening_Timeline_3rd_Sec__Direction_80174B9E4AF0B1771BD3829B7C9C9AEC; // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D[0x3];                                      // 0x039D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Opening_Timeline_3rd_Sec;                          // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Opening_Timeline_1_Sec_Before_HalfSec_Before_0D0B31334A774A2BB89B068A67A38E00; // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Opening_Timeline_1_Sec_Before__Direction_0D0B31334A774A2BB89B068A67A38E00; // 0x03AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD[0x3];                                      // 0x03AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Opening_Timeline_1_Sec_Before;                     // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Closing_Timeline_1_Sec_Before_HalfSec_Before_6133F6B9440FEDB35C675DAA15A6E6C5; // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Closing_Timeline_1_Sec_Before__Direction_6133F6B9440FEDB35C675DAA15A6E6C5; // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD[0x3];                                      // 0x03BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Closing_Timeline_1_Sec_Before;                     // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Opening_Timeline_1_Sec_HalfSec_After_C1C87A5C445677B0E64E368A828B3E43; // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Opening_Timeline_1_Sec__Direction_C1C87A5C445677B0E64E368A828B3E43; // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD[0x3];                                      // 0x03CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Opening_Timeline_1_Sec;                            // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Closing_Timeline_1_Sec_HalfSec_After_F9AF156E432618A77A09F488033EBC74; // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Closing_Timeline_1_Sec__Direction_F9AF156E432618A77A09F488033EBC74; // 0x03DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD[0x3];                                      // 0x03DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Closing_Timeline_1_Sec;                            // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Closing_Timeline_3rd_Sec_HalfSec_3rd_36E5D3F44B678B7D9649379EECCA6C29; // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Closing_Timeline_3rd_Sec__Direction_36E5D3F44B678B7D9649379EECCA6C29; // 0x03EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ED[0x3];                                      // 0x03ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Closing_Timeline_3rd_Sec;                          // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         HalfSec_Before;                                    // 0x03F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_there_2nde_Animation;                           // 0x03FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FD[0x3];                                      // 0x03FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HalfSec_After;                                     // 0x0400(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_there_a_PadLock;                                // 0x0404(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_there_Animation;                                // 0x0405(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_406[0x2];                                      // 0x0406(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            PadLock;                                           // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_there_3rd_Animation;                            // 0x0410(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411[0x3];                                      // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HalfSec_3rd;                                       // 0x0414(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void One_Rotation(class USceneComponent* Mesh, const struct FRotator& Original_Rotation, const struct FRotator& Target_Rotation, double Timeline);
	void One_Teleport(class USceneComponent* Mesh, const struct FVector& Target_Location, const struct FRotator& Target_Rotation);
	void One_Translation(class USceneComponent* Mesh, const struct FVector& Original_Location, const struct FVector& Target_Location, double Timeline);
	void Closing_Timeline_1_Sec_Before__FinishedFunc();
	void Closing_Timeline_1_Sec_Before__UpdateFunc();
	void Closing_Timeline_1_Sec__FinishedFunc();
	void Closing_Timeline_1_Sec__UpdateFunc();
	void Closing_Timeline_3rd_Sec__FinishedFunc();
	void Closing_Timeline_3rd_Sec__UpdateFunc();
	void ExecuteUbergraph_BP_VChest(int32 EntryPoint);
	void OnContainerOpenChanged();
	void OnContainerUnlockedChanged();
	void Opening_Timeline_1_Sec_Before__FinishedFunc();
	void Opening_Timeline_1_Sec_Before__UpdateFunc();
	void Opening_Timeline_1_Sec__FinishedFunc();
	void Opening_Timeline_1_Sec__UpdateFunc();
	void Opening_Timeline_3rd_Sec__FinishedFunc();
	void Opening_Timeline_3rd_Sec__UpdateFunc();
	void ReceiveBeginPlay();
	void Update_Timeline(double HalfSecBefore, double HalfSecAfter, double Threerd);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_VChest_C">();
	}
	static class ABP_VChest_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_VChest_C>();
	}
};
static_assert(alignof(ABP_VChest_C) == 0x000008, "Wrong alignment on ABP_VChest_C");
static_assert(sizeof(ABP_VChest_C) == 0x000418, "Wrong size on ABP_VChest_C");
static_assert(offsetof(ABP_VChest_C, UberGraphFrame) == 0x000378, "Member 'ABP_VChest_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, LocalMap) == 0x000380, "Member 'ABP_VChest_C::LocalMap' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, PadLockDefault) == 0x000388, "Member 'ABP_VChest_C::PadLockDefault' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, Lid1) == 0x000390, "Member 'ABP_VChest_C::Lid1' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, Opening_Timeline_3rd_Sec_HalfSec_3rd_80174B9E4AF0B1771BD3829B7C9C9AEC) == 0x000398, "Member 'ABP_VChest_C::Opening_Timeline_3rd_Sec_HalfSec_3rd_80174B9E4AF0B1771BD3829B7C9C9AEC' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, Opening_Timeline_3rd_Sec__Direction_80174B9E4AF0B1771BD3829B7C9C9AEC) == 0x00039C, "Member 'ABP_VChest_C::Opening_Timeline_3rd_Sec__Direction_80174B9E4AF0B1771BD3829B7C9C9AEC' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, Opening_Timeline_3rd_Sec) == 0x0003A0, "Member 'ABP_VChest_C::Opening_Timeline_3rd_Sec' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, Opening_Timeline_1_Sec_Before_HalfSec_Before_0D0B31334A774A2BB89B068A67A38E00) == 0x0003A8, "Member 'ABP_VChest_C::Opening_Timeline_1_Sec_Before_HalfSec_Before_0D0B31334A774A2BB89B068A67A38E00' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, Opening_Timeline_1_Sec_Before__Direction_0D0B31334A774A2BB89B068A67A38E00) == 0x0003AC, "Member 'ABP_VChest_C::Opening_Timeline_1_Sec_Before__Direction_0D0B31334A774A2BB89B068A67A38E00' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, Opening_Timeline_1_Sec_Before) == 0x0003B0, "Member 'ABP_VChest_C::Opening_Timeline_1_Sec_Before' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, Closing_Timeline_1_Sec_Before_HalfSec_Before_6133F6B9440FEDB35C675DAA15A6E6C5) == 0x0003B8, "Member 'ABP_VChest_C::Closing_Timeline_1_Sec_Before_HalfSec_Before_6133F6B9440FEDB35C675DAA15A6E6C5' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, Closing_Timeline_1_Sec_Before__Direction_6133F6B9440FEDB35C675DAA15A6E6C5) == 0x0003BC, "Member 'ABP_VChest_C::Closing_Timeline_1_Sec_Before__Direction_6133F6B9440FEDB35C675DAA15A6E6C5' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, Closing_Timeline_1_Sec_Before) == 0x0003C0, "Member 'ABP_VChest_C::Closing_Timeline_1_Sec_Before' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, Opening_Timeline_1_Sec_HalfSec_After_C1C87A5C445677B0E64E368A828B3E43) == 0x0003C8, "Member 'ABP_VChest_C::Opening_Timeline_1_Sec_HalfSec_After_C1C87A5C445677B0E64E368A828B3E43' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, Opening_Timeline_1_Sec__Direction_C1C87A5C445677B0E64E368A828B3E43) == 0x0003CC, "Member 'ABP_VChest_C::Opening_Timeline_1_Sec__Direction_C1C87A5C445677B0E64E368A828B3E43' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, Opening_Timeline_1_Sec) == 0x0003D0, "Member 'ABP_VChest_C::Opening_Timeline_1_Sec' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, Closing_Timeline_1_Sec_HalfSec_After_F9AF156E432618A77A09F488033EBC74) == 0x0003D8, "Member 'ABP_VChest_C::Closing_Timeline_1_Sec_HalfSec_After_F9AF156E432618A77A09F488033EBC74' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, Closing_Timeline_1_Sec__Direction_F9AF156E432618A77A09F488033EBC74) == 0x0003DC, "Member 'ABP_VChest_C::Closing_Timeline_1_Sec__Direction_F9AF156E432618A77A09F488033EBC74' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, Closing_Timeline_1_Sec) == 0x0003E0, "Member 'ABP_VChest_C::Closing_Timeline_1_Sec' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, Closing_Timeline_3rd_Sec_HalfSec_3rd_36E5D3F44B678B7D9649379EECCA6C29) == 0x0003E8, "Member 'ABP_VChest_C::Closing_Timeline_3rd_Sec_HalfSec_3rd_36E5D3F44B678B7D9649379EECCA6C29' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, Closing_Timeline_3rd_Sec__Direction_36E5D3F44B678B7D9649379EECCA6C29) == 0x0003EC, "Member 'ABP_VChest_C::Closing_Timeline_3rd_Sec__Direction_36E5D3F44B678B7D9649379EECCA6C29' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, Closing_Timeline_3rd_Sec) == 0x0003F0, "Member 'ABP_VChest_C::Closing_Timeline_3rd_Sec' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, HalfSec_Before) == 0x0003F8, "Member 'ABP_VChest_C::HalfSec_Before' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, Is_there_2nde_Animation) == 0x0003FC, "Member 'ABP_VChest_C::Is_there_2nde_Animation' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, HalfSec_After) == 0x000400, "Member 'ABP_VChest_C::HalfSec_After' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, Is_there_a_PadLock) == 0x000404, "Member 'ABP_VChest_C::Is_there_a_PadLock' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, Is_there_Animation) == 0x000405, "Member 'ABP_VChest_C::Is_there_Animation' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, PadLock) == 0x000408, "Member 'ABP_VChest_C::PadLock' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, Is_there_3rd_Animation) == 0x000410, "Member 'ABP_VChest_C::Is_there_3rd_Animation' has a wrong offset!");
static_assert(offsetof(ABP_VChest_C, HalfSec_3rd) == 0x000414, "Member 'ABP_VChest_C::HalfSec_3rd' has a wrong offset!");

}

