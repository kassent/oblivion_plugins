#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Modern_MapQuestMenu

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "FFloatingHintXbox_structs.hpp"
#include "Altar_structs.hpp"
#include "Altar_classes.hpp"
#include "FXboxHintList_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C
// 0x00C0 (0x05D0 - 0x0510)
class UWBP_Modern_MapQuestMenu_C final : public UVLegacyMapMenu
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0510(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVMapMenuViewModel*                     VMapMenuViewModel;                                 // 0x0518(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, DuplicateTransient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeInOut;                                         // 0x0520(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MapFadeInOut;                                      // 0x0528(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       QuestFadeInOut;                                    // 0x0530(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeIn;                                            // 0x0538(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_OriginalImageTile_C*               FadeEffectImage;                                   // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Modern_MapPage_C*                  LocalMapPage;                                      // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        MapQuestSwitcher;                                  // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        MapSwitcher;                                       // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Modern_QuestPage_C*                QuestPage;                                         // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Modern_MapPage_C*                  WorldMapPage;                                      // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<ELegacyMapMenuPage, struct FFXboxHintList> HintsMapMenu;                                    // 0x0570(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(TArray<struct FFFloatingHintXbox>& HintKeys)> CreateHintKey;       // 0x05C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BndEvt__WBP_Modern_MapMenu_LocalMap_K2Node_ComponentBoundEvent_0_RequestMapChangeDispatcher__DelegateSignature(const struct FVector2D& VirtualCurorPosition);
	void BndEvt__WBP_Modern_MapMenu_WorldMap_K2Node_ComponentBoundEvent_1_RequestMapChangeDispatcher__DelegateSignature(const struct FVector2D& VirtualCurorPosition);
	void BP_OnActivated();
	void Construct();
	void Create_Hint_Keys();
	void CreateSleepWaitMenu();
	void ExecuteUbergraph_WBP_Modern_MapQuestMenu(int32 EntryPoint);
	void FadeInOutMapQuest(bool bIsVisible, bool bFromLeft, bool bInstant);
	void FadeInOutMenu(bool bIsVisible, bool bFromLeft, bool bInstant);
	void Finished_18D6FB1B4CA335A8DD19F18C50EB8C89();
	void Finished_19152D6C4DCE744EBF25249597A1B95B();
	void Finished_5BE3CC074D4A4581B732599AF2292C16();
	void Finished_9D062DB4404EF2BFE312CDBC5D3D628B();
	void FogSetupQuestMap();
	void IsLocalMap(bool* IsLocalMap_0);
	void OnFocus();
	void OnFocusMenuPlayer();
	void OnUnfocusMenuPlayer();
	void OnUpdateCurrentPage();
	void OnUpdateTitleProperties(const class FText& NewTitlePropertiesLocation, const class FText& NewTitlePropertiesDate);
	void RequestSwitchPage(ELegacyMapMenuPage PageToSwitchTo);
	void ResetFadeEffect();
	void Set_Map_Page_View_Model_Ref_Internal();
	void SetFromSwapping(bool FromSwapping);
	void SetInFadeAnimation(bool InNewValue);
	void SetInputForFooter(class UWBP_Modern_Menu_Player_Footer_C* Footer);
	void SetIsInGameMenu(bool isInGameMenu);
	void SetMapOpenedWay(bool IsClassicWay);
	void SetupWorldMap();
	void UpdateCurrentPage(ELegacyMapMenuPage NewCurrentPage);
	void UpdateTitleProperties(const struct FLegacyMapMenuTitleProperties& NewTitleProperties);

	class UWidget* BP_GetDesiredFocusTarget() const;
	class UVLegacyMapMenuMapPage* GetLocalMapPage() const;
	void GetPageWidget(ELegacyMapMenuPage Page, class UVNavigableActivatableWidgetBase** PageWidget) const;
	class UVLegacyMapMenuMapPage* GetWorldMapPage() const;
	void IsMap(bool* IsMap_0) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Modern_MapQuestMenu_C">();
	}
	static class UWBP_Modern_MapQuestMenu_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Modern_MapQuestMenu_C>();
	}
};
static_assert(alignof(UWBP_Modern_MapQuestMenu_C) == 0x000008, "Wrong alignment on UWBP_Modern_MapQuestMenu_C");
static_assert(sizeof(UWBP_Modern_MapQuestMenu_C) == 0x0005D0, "Wrong size on UWBP_Modern_MapQuestMenu_C");
static_assert(offsetof(UWBP_Modern_MapQuestMenu_C, UberGraphFrame) == 0x000510, "Member 'UWBP_Modern_MapQuestMenu_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapQuestMenu_C, VMapMenuViewModel) == 0x000518, "Member 'UWBP_Modern_MapQuestMenu_C::VMapMenuViewModel' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapQuestMenu_C, FadeInOut) == 0x000520, "Member 'UWBP_Modern_MapQuestMenu_C::FadeInOut' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapQuestMenu_C, MapFadeInOut) == 0x000528, "Member 'UWBP_Modern_MapQuestMenu_C::MapFadeInOut' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapQuestMenu_C, QuestFadeInOut) == 0x000530, "Member 'UWBP_Modern_MapQuestMenu_C::QuestFadeInOut' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapQuestMenu_C, FadeIn) == 0x000538, "Member 'UWBP_Modern_MapQuestMenu_C::FadeIn' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapQuestMenu_C, FadeEffectImage) == 0x000540, "Member 'UWBP_Modern_MapQuestMenu_C::FadeEffectImage' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapQuestMenu_C, LocalMapPage) == 0x000548, "Member 'UWBP_Modern_MapQuestMenu_C::LocalMapPage' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapQuestMenu_C, MapQuestSwitcher) == 0x000550, "Member 'UWBP_Modern_MapQuestMenu_C::MapQuestSwitcher' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapQuestMenu_C, MapSwitcher) == 0x000558, "Member 'UWBP_Modern_MapQuestMenu_C::MapSwitcher' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapQuestMenu_C, QuestPage) == 0x000560, "Member 'UWBP_Modern_MapQuestMenu_C::QuestPage' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapQuestMenu_C, WorldMapPage) == 0x000568, "Member 'UWBP_Modern_MapQuestMenu_C::WorldMapPage' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapQuestMenu_C, HintsMapMenu) == 0x000570, "Member 'UWBP_Modern_MapQuestMenu_C::HintsMapMenu' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapQuestMenu_C, CreateHintKey) == 0x0005C0, "Member 'UWBP_Modern_MapQuestMenu_C::CreateHintKey' has a wrong offset!");

}

