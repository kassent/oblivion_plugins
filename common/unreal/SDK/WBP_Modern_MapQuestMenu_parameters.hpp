#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Modern_MapQuestMenu

#include "Basic.hpp"

#include "Altar_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FXboxHintList_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FFloatingHintXbox_structs.hpp"


namespace SDK::Params
{

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.BndEvt__WBP_Modern_MapMenu_LocalMap_K2Node_ComponentBoundEvent_0_RequestMapChangeDispatcher__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_Modern_MapQuestMenu_C_BndEvt__WBP_Modern_MapMenu_LocalMap_K2Node_ComponentBoundEvent_0_RequestMapChangeDispatcher__DelegateSignature final
{
public:
	struct FVector2D                              VirtualCurorPosition;                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_BndEvt__WBP_Modern_MapMenu_LocalMap_K2Node_ComponentBoundEvent_0_RequestMapChangeDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Modern_MapQuestMenu_C_BndEvt__WBP_Modern_MapMenu_LocalMap_K2Node_ComponentBoundEvent_0_RequestMapChangeDispatcher__DelegateSignature");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_BndEvt__WBP_Modern_MapMenu_LocalMap_K2Node_ComponentBoundEvent_0_RequestMapChangeDispatcher__DelegateSignature) == 0x000010, "Wrong size on WBP_Modern_MapQuestMenu_C_BndEvt__WBP_Modern_MapMenu_LocalMap_K2Node_ComponentBoundEvent_0_RequestMapChangeDispatcher__DelegateSignature");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_BndEvt__WBP_Modern_MapMenu_LocalMap_K2Node_ComponentBoundEvent_0_RequestMapChangeDispatcher__DelegateSignature, VirtualCurorPosition) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_BndEvt__WBP_Modern_MapMenu_LocalMap_K2Node_ComponentBoundEvent_0_RequestMapChangeDispatcher__DelegateSignature::VirtualCurorPosition' has a wrong offset!");

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.BndEvt__WBP_Modern_MapMenu_WorldMap_K2Node_ComponentBoundEvent_1_RequestMapChangeDispatcher__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_Modern_MapQuestMenu_C_BndEvt__WBP_Modern_MapMenu_WorldMap_K2Node_ComponentBoundEvent_1_RequestMapChangeDispatcher__DelegateSignature final
{
public:
	struct FVector2D                              VirtualCurorPosition;                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_BndEvt__WBP_Modern_MapMenu_WorldMap_K2Node_ComponentBoundEvent_1_RequestMapChangeDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Modern_MapQuestMenu_C_BndEvt__WBP_Modern_MapMenu_WorldMap_K2Node_ComponentBoundEvent_1_RequestMapChangeDispatcher__DelegateSignature");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_BndEvt__WBP_Modern_MapMenu_WorldMap_K2Node_ComponentBoundEvent_1_RequestMapChangeDispatcher__DelegateSignature) == 0x000010, "Wrong size on WBP_Modern_MapQuestMenu_C_BndEvt__WBP_Modern_MapMenu_WorldMap_K2Node_ComponentBoundEvent_1_RequestMapChangeDispatcher__DelegateSignature");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_BndEvt__WBP_Modern_MapMenu_WorldMap_K2Node_ComponentBoundEvent_1_RequestMapChangeDispatcher__DelegateSignature, VirtualCurorPosition) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_BndEvt__WBP_Modern_MapMenu_WorldMap_K2Node_ComponentBoundEvent_1_RequestMapChangeDispatcher__DelegateSignature::VirtualCurorPosition' has a wrong offset!");

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.Create Hint Keys
// 0x0020 (0x0020 - 0x0000)
struct WBP_Modern_MapQuestMenu_C_Create_Hint_Keys final
{
public:
	ELegacyMapMenuPage                            CallFunc_GetCurrentPage_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELegacyMapMenuPage                            CallFunc_GetCurrentPage_ReturnValue_1;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFXboxHintList                         CallFunc_Map_Find_Value;                           // 0x0008(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_Create_Hint_Keys) == 0x000008, "Wrong alignment on WBP_Modern_MapQuestMenu_C_Create_Hint_Keys");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_Create_Hint_Keys) == 0x000020, "Wrong size on WBP_Modern_MapQuestMenu_C_Create_Hint_Keys");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_Create_Hint_Keys, CallFunc_GetCurrentPage_ReturnValue) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_Create_Hint_Keys::CallFunc_GetCurrentPage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_Create_Hint_Keys, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WBP_Modern_MapQuestMenu_C_Create_Hint_Keys::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_Create_Hint_Keys, CallFunc_GetCurrentPage_ReturnValue_1) == 0x000002, "Member 'WBP_Modern_MapQuestMenu_C_Create_Hint_Keys::CallFunc_GetCurrentPage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_Create_Hint_Keys, CallFunc_Map_Find_Value) == 0x000008, "Member 'WBP_Modern_MapQuestMenu_C_Create_Hint_Keys::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_Create_Hint_Keys, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'WBP_Modern_MapQuestMenu_C_Create_Hint_Keys::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.CreateSleepWaitMenu
// 0x0002 (0x0002 - 0x0000)
struct WBP_Modern_MapQuestMenu_C_CreateSleepWaitMenu final
{
public:
	ELegacyMapMenuPage                            CallFunc_GetCurrentPage_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_CreateSleepWaitMenu) == 0x000001, "Wrong alignment on WBP_Modern_MapQuestMenu_C_CreateSleepWaitMenu");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_CreateSleepWaitMenu) == 0x000002, "Wrong size on WBP_Modern_MapQuestMenu_C_CreateSleepWaitMenu");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_CreateSleepWaitMenu, CallFunc_GetCurrentPage_ReturnValue) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_CreateSleepWaitMenu::CallFunc_GetCurrentPage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_CreateSleepWaitMenu, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WBP_Modern_MapQuestMenu_C_CreateSleepWaitMenu::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.ExecuteUbergraph_WBP_Modern_MapQuestMenu
// 0x0110 (0x0110 - 0x0000)
struct WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_ComponentBoundEvent_VirtualCurorPosition_1; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_VirtualCurorPosition;   // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLegacyMapMenuTitleProperties          K2Node_CustomEvent_NewTitleProperties;             // 0x0058(0x0030)()
	ELegacyMapMenuPage                            CallFunc_GetCurrentPage_ReturnValue;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVNavigableActivatableWidgetBase*       CallFunc_GetPageWidget_PageWidget;                 // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0098(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_1;  // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1; // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsVisible;                           // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bFromLeft;                            // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInstant;                             // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELegacyMapMenuPage                            K2Node_CustomEvent_NewCurrentPage;                 // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVUINavigationGlobalSubsystem*          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IVEnhancedInputNavigable> CallFunc_NavigateToWidget_Widget_CastInput;     // 0x00D8(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_2;  // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_2; // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_3;  // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_3; // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu) == 0x000008, "Wrong alignment on WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu) == 0x000110, "Wrong size on WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, EntryPoint) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, K2Node_ComponentBoundEvent_VirtualCurorPosition_1) == 0x000038, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::K2Node_ComponentBoundEvent_VirtualCurorPosition_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, K2Node_ComponentBoundEvent_VirtualCurorPosition) == 0x000048, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::K2Node_ComponentBoundEvent_VirtualCurorPosition' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, K2Node_CustomEvent_NewTitleProperties) == 0x000058, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::K2Node_CustomEvent_NewTitleProperties' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, CallFunc_GetCurrentPage_ReturnValue) == 0x000088, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::CallFunc_GetCurrentPage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, CallFunc_GetPageWidget_PageWidget) == 0x000090, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::CallFunc_GetPageWidget_PageWidget' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, K2Node_CreateDelegate_OutputDelegate_3) == 0x000098, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x0000A8, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x0000B0, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, CallFunc_CreatePlayAnimationProxyObject_Result_1) == 0x0000B8, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::CallFunc_CreatePlayAnimationProxyObject_Result_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1) == 0x0000C0, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, CallFunc_IsValid_ReturnValue_1) == 0x0000C9, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, CallFunc_IsAnimationPlaying_ReturnValue) == 0x0000CA, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x0000CB, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, K2Node_Event_bIsVisible) == 0x0000CC, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::K2Node_Event_bIsVisible' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, K2Node_Event_bFromLeft) == 0x0000CD, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::K2Node_Event_bFromLeft' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, K2Node_Event_bInstant) == 0x0000CE, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::K2Node_Event_bInstant' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, K2Node_CustomEvent_NewCurrentPage) == 0x0000CF, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::K2Node_CustomEvent_NewCurrentPage' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x0000D0, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, CallFunc_NavigateToWidget_Widget_CastInput) == 0x0000D8, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::CallFunc_NavigateToWidget_Widget_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, CallFunc_CreatePlayAnimationProxyObject_Result_2) == 0x0000E8, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::CallFunc_CreatePlayAnimationProxyObject_Result_2' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_2) == 0x0000F0, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, CallFunc_CreatePlayAnimationProxyObject_Result_3) == 0x0000F8, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::CallFunc_CreatePlayAnimationProxyObject_Result_3' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_3) == 0x000100, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, CallFunc_IsValid_ReturnValue_2) == 0x000108, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu, CallFunc_IsValid_ReturnValue_3) == 0x000109, "Member 'WBP_Modern_MapQuestMenu_C_ExecuteUbergraph_WBP_Modern_MapQuestMenu::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.FadeInOutMapQuest
// 0x0038 (0x0038 - 0x0000)
struct WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest final
{
public:
	bool                                          bIsVisible;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromLeft;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInstant;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_StartAtTime_ImplicitCast;   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest) == 0x000008, "Wrong alignment on WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest) == 0x000038, "Wrong size on WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest, bIsVisible) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest::bIsVisible' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest, bFromLeft) == 0x000001, "Member 'WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest::bFromLeft' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest, bInstant) == 0x000002, "Member 'WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest::bInstant' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest, Temp_bool_Variable) == 0x000003, "Member 'WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest, Temp_byte_Variable) == 0x000004, "Member 'WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest, Temp_byte_Variable_1) == 0x000005, "Member 'WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest, CallFunc_GetEndTime_ReturnValue) == 0x000008, "Member 'WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest, K2Node_Select_Default) == 0x000018, "Member 'WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest, CallFunc_SelectFloat_A_ImplicitCast) == 0x000028, "Member 'WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest, CallFunc_PlayAnimation_StartAtTime_ImplicitCast) == 0x000030, "Member 'WBP_Modern_MapQuestMenu_C_FadeInOutMapQuest::CallFunc_PlayAnimation_StartAtTime_ImplicitCast' has a wrong offset!");

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.FadeInOutMenu
// 0x0003 (0x0003 - 0x0000)
struct WBP_Modern_MapQuestMenu_C_FadeInOutMenu final
{
public:
	bool                                          bIsVisible;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromLeft;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInstant;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_FadeInOutMenu) == 0x000001, "Wrong alignment on WBP_Modern_MapQuestMenu_C_FadeInOutMenu");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_FadeInOutMenu) == 0x000003, "Wrong size on WBP_Modern_MapQuestMenu_C_FadeInOutMenu");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_FadeInOutMenu, bIsVisible) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_FadeInOutMenu::bIsVisible' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_FadeInOutMenu, bFromLeft) == 0x000001, "Member 'WBP_Modern_MapQuestMenu_C_FadeInOutMenu::bFromLeft' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_FadeInOutMenu, bInstant) == 0x000002, "Member 'WBP_Modern_MapQuestMenu_C_FadeInOutMenu::bInstant' has a wrong offset!");

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.FogSetupQuestMap
// 0x0001 (0x0001 - 0x0000)
struct WBP_Modern_MapQuestMenu_C_FogSetupQuestMap final
{
public:
	bool                                          CallFunc_IsLocalMap_IsLocalMap;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_FogSetupQuestMap) == 0x000001, "Wrong alignment on WBP_Modern_MapQuestMenu_C_FogSetupQuestMap");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_FogSetupQuestMap) == 0x000001, "Wrong size on WBP_Modern_MapQuestMenu_C_FogSetupQuestMap");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_FogSetupQuestMap, CallFunc_IsLocalMap_IsLocalMap) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_FogSetupQuestMap::CallFunc_IsLocalMap_IsLocalMap' has a wrong offset!");

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.IsLocalMap
// 0x000A (0x000A - 0x0000)
struct WBP_Modern_MapQuestMenu_C_IsLocalMap final
{
public:
	bool                                          IsLocalMap_0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELegacyMapMenuPage                            Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELegacyMapMenuPage                            CallFunc_GetCurrentPage_ReturnValue;               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_IsLocalMap) == 0x000001, "Wrong alignment on WBP_Modern_MapQuestMenu_C_IsLocalMap");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_IsLocalMap) == 0x00000A, "Wrong size on WBP_Modern_MapQuestMenu_C_IsLocalMap");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_IsLocalMap, IsLocalMap_0) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_IsLocalMap::IsLocalMap_0' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_IsLocalMap, Temp_byte_Variable) == 0x000001, "Member 'WBP_Modern_MapQuestMenu_C_IsLocalMap::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_IsLocalMap, Temp_bool_Variable) == 0x000002, "Member 'WBP_Modern_MapQuestMenu_C_IsLocalMap::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_IsLocalMap, Temp_bool_Variable_1) == 0x000003, "Member 'WBP_Modern_MapQuestMenu_C_IsLocalMap::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_IsLocalMap, Temp_bool_Variable_2) == 0x000004, "Member 'WBP_Modern_MapQuestMenu_C_IsLocalMap::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_IsLocalMap, Temp_bool_Variable_3) == 0x000005, "Member 'WBP_Modern_MapQuestMenu_C_IsLocalMap::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_IsLocalMap, Temp_bool_Variable_4) == 0x000006, "Member 'WBP_Modern_MapQuestMenu_C_IsLocalMap::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_IsLocalMap, CallFunc_GetCurrentPage_ReturnValue) == 0x000007, "Member 'WBP_Modern_MapQuestMenu_C_IsLocalMap::CallFunc_GetCurrentPage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_IsLocalMap, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_Modern_MapQuestMenu_C_IsLocalMap::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_IsLocalMap, K2Node_Select_Default) == 0x000009, "Member 'WBP_Modern_MapQuestMenu_C_IsLocalMap::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.OnUpdateCurrentPage
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMap_IsMap;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELegacyMapMenuPage                            CallFunc_GetCurrentPage_ReturnValue;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVUINavigationGlobalSubsystem*          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVUINavigationGlobalSubsystem*          CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsFocussed_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVUINavigationGlobalSubsystem*          CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ELegacyMapMenuPage                            CallFunc_GetCurrentPage_ReturnValue_1;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IVEnhancedInputNavigable> CallFunc_IsWidgetInTopMostFocusedStack_Widget_CastInput; // 0x0030(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsWidgetInTopMostFocusedStack_ReturnValue; // 0x0040(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVNavigableActivatableWidgetBase*       CallFunc_GetPageWidget_PageWidget;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IVEnhancedInputNavigable> CallFunc_NavigateToWidget_Widget_CastInput;     // 0x0050(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TScriptInterface<class IVEnhancedInputNavigable> CallFunc_NavigateToWidget_Widget_CastInput_1;   // 0x0060(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsFocussed_ReturnValue_1;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVUINavigationGlobalSubsystem*          CallFunc_GetGameInstanceSubsystem_ReturnValue_3;   // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IVEnhancedInputNavigable> CallFunc_IsWidgetInTopMostFocusedStack_Widget_CastInput_1; // 0x0088(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsWidgetInTopMostFocusedStack_ReturnValue_1; // 0x0098(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMap_IsMap_1;                            // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage) == 0x000008, "Wrong alignment on WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage) == 0x0000A8, "Wrong size on WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage, Temp_bool_Variable) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage, CallFunc_IsMap_IsMap) == 0x000001, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage::CallFunc_IsMap_IsMap' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage, CallFunc_GetCurrentPage_ReturnValue) == 0x000002, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage::CallFunc_GetCurrentPage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000010, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage, CallFunc_GetIsFocussed_ReturnValue) == 0x000018, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage::CallFunc_GetIsFocussed_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x000020, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage, CallFunc_GetCurrentPage_ReturnValue_1) == 0x000028, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage::CallFunc_GetCurrentPage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage, CallFunc_IsWidgetInTopMostFocusedStack_Widget_CastInput) == 0x000030, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage::CallFunc_IsWidgetInTopMostFocusedStack_Widget_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage, CallFunc_IsWidgetInTopMostFocusedStack_ReturnValue) == 0x000040, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage::CallFunc_IsWidgetInTopMostFocusedStack_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage, CallFunc_GetPageWidget_PageWidget) == 0x000048, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage::CallFunc_GetPageWidget_PageWidget' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage, CallFunc_NavigateToWidget_Widget_CastInput) == 0x000050, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage::CallFunc_NavigateToWidget_Widget_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage, CallFunc_NavigateToWidget_Widget_CastInput_1) == 0x000060, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage::CallFunc_NavigateToWidget_Widget_CastInput_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage, CallFunc_GetIsFocussed_ReturnValue_1) == 0x000070, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage::CallFunc_GetIsFocussed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage, CallFunc_GetGameInstanceSubsystem_ReturnValue_3) == 0x000078, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage::CallFunc_GetGameInstanceSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage, CallFunc_BooleanAND_ReturnValue) == 0x000080, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage, CallFunc_IsWidgetInTopMostFocusedStack_Widget_CastInput_1) == 0x000088, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage::CallFunc_IsWidgetInTopMostFocusedStack_Widget_CastInput_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage, CallFunc_IsWidgetInTopMostFocusedStack_ReturnValue_1) == 0x000098, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage::CallFunc_IsWidgetInTopMostFocusedStack_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage, CallFunc_BooleanAND_ReturnValue_1) == 0x000099, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage, CallFunc_IsMap_IsMap_1) == 0x00009A, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage::CallFunc_IsMap_IsMap_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage, K2Node_Select_Default) == 0x0000A0, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateCurrentPage::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.OnUpdateTitleProperties
// 0x01F8 (0x01F8 - 0x0000)
struct WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties final
{
public:
	class FText                                   NewTitlePropertiesLocation;                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   NewTitlePropertiesDate;                            // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_IsMap_IsMap;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00D8(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0128(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0178(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0188(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0198(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01B0(0x0018)()
	struct FLegacyMapMenuTitleProperties          K2Node_MakeStruct_LegacyMapMenuTitleProperties;    // 0x01C8(0x0030)()
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties) == 0x000008, "Wrong alignment on WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties) == 0x0001F8, "Wrong size on WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties, NewTitlePropertiesLocation) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties::NewTitlePropertiesLocation' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties, NewTitlePropertiesDate) == 0x000018, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties::NewTitlePropertiesDate' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties, CallFunc_IsMap_IsMap) == 0x000030, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties::CallFunc_IsMap_IsMap' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000D8, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties, K2Node_MakeStruct_FormatArgumentData_3) == 0x000128, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties, K2Node_MakeArray_Array) == 0x000178, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties, K2Node_MakeArray_Array_1) == 0x000188, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties, CallFunc_Format_ReturnValue) == 0x000198, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties, CallFunc_Format_ReturnValue_1) == 0x0001B0, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties, K2Node_MakeStruct_LegacyMapMenuTitleProperties) == 0x0001C8, "Member 'WBP_Modern_MapQuestMenu_C_OnUpdateTitleProperties::K2Node_MakeStruct_LegacyMapMenuTitleProperties' has a wrong offset!");

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.RequestSwitchPage
// 0x0001 (0x0001 - 0x0000)
struct WBP_Modern_MapQuestMenu_C_RequestSwitchPage final
{
public:
	ELegacyMapMenuPage                            PageToSwitchTo;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_RequestSwitchPage) == 0x000001, "Wrong alignment on WBP_Modern_MapQuestMenu_C_RequestSwitchPage");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_RequestSwitchPage) == 0x000001, "Wrong size on WBP_Modern_MapQuestMenu_C_RequestSwitchPage");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_RequestSwitchPage, PageToSwitchTo) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_RequestSwitchPage::PageToSwitchTo' has a wrong offset!");

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.Set Map Page View Model Ref Internal
// 0x0010 (0x0010 - 0x0000)
struct WBP_Modern_MapQuestMenu_C_Set_Map_Page_View_Model_Ref_Internal final
{
public:
	class UVMapPageViewModel*                     CallFunc_GetWorldMapMenuViewModel_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVMapPageViewModel*                     CallFunc_GetLocalMapMenuViewModel_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_Set_Map_Page_View_Model_Ref_Internal) == 0x000008, "Wrong alignment on WBP_Modern_MapQuestMenu_C_Set_Map_Page_View_Model_Ref_Internal");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_Set_Map_Page_View_Model_Ref_Internal) == 0x000010, "Wrong size on WBP_Modern_MapQuestMenu_C_Set_Map_Page_View_Model_Ref_Internal");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_Set_Map_Page_View_Model_Ref_Internal, CallFunc_GetWorldMapMenuViewModel_ReturnValue) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_Set_Map_Page_View_Model_Ref_Internal::CallFunc_GetWorldMapMenuViewModel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_Set_Map_Page_View_Model_Ref_Internal, CallFunc_GetLocalMapMenuViewModel_ReturnValue) == 0x000008, "Member 'WBP_Modern_MapQuestMenu_C_Set_Map_Page_View_Model_Ref_Internal::CallFunc_GetLocalMapMenuViewModel_ReturnValue' has a wrong offset!");

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.SetFromSwapping
// 0x0001 (0x0001 - 0x0000)
struct WBP_Modern_MapQuestMenu_C_SetFromSwapping final
{
public:
	bool                                          FromSwapping;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_SetFromSwapping) == 0x000001, "Wrong alignment on WBP_Modern_MapQuestMenu_C_SetFromSwapping");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_SetFromSwapping) == 0x000001, "Wrong size on WBP_Modern_MapQuestMenu_C_SetFromSwapping");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_SetFromSwapping, FromSwapping) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_SetFromSwapping::FromSwapping' has a wrong offset!");

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.SetInFadeAnimation
// 0x0001 (0x0001 - 0x0000)
struct WBP_Modern_MapQuestMenu_C_SetInFadeAnimation final
{
public:
	bool                                          InNewValue;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_SetInFadeAnimation) == 0x000001, "Wrong alignment on WBP_Modern_MapQuestMenu_C_SetInFadeAnimation");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_SetInFadeAnimation) == 0x000001, "Wrong size on WBP_Modern_MapQuestMenu_C_SetInFadeAnimation");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_SetInFadeAnimation, InNewValue) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_SetInFadeAnimation::InNewValue' has a wrong offset!");

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.SetInputForFooter
// 0x0010 (0x0010 - 0x0000)
struct WBP_Modern_MapQuestMenu_C_SetInputForFooter final
{
public:
	class UWBP_Modern_Menu_Player_Footer_C*       Footer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ELegacyMapMenuPage                            CallFunc_GetCurrentPage_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_SetInputForFooter) == 0x000008, "Wrong alignment on WBP_Modern_MapQuestMenu_C_SetInputForFooter");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_SetInputForFooter) == 0x000010, "Wrong size on WBP_Modern_MapQuestMenu_C_SetInputForFooter");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_SetInputForFooter, Footer) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_SetInputForFooter::Footer' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_SetInputForFooter, CallFunc_GetCurrentPage_ReturnValue) == 0x000008, "Member 'WBP_Modern_MapQuestMenu_C_SetInputForFooter::CallFunc_GetCurrentPage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_SetInputForFooter, K2Node_SwitchEnum_CmpSuccess) == 0x000009, "Member 'WBP_Modern_MapQuestMenu_C_SetInputForFooter::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.SetIsInGameMenu
// 0x0001 (0x0001 - 0x0000)
struct WBP_Modern_MapQuestMenu_C_SetIsInGameMenu final
{
public:
	bool                                          isInGameMenu;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_SetIsInGameMenu) == 0x000001, "Wrong alignment on WBP_Modern_MapQuestMenu_C_SetIsInGameMenu");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_SetIsInGameMenu) == 0x000001, "Wrong size on WBP_Modern_MapQuestMenu_C_SetIsInGameMenu");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_SetIsInGameMenu, isInGameMenu) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_SetIsInGameMenu::isInGameMenu' has a wrong offset!");

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.SetMapOpenedWay
// 0x0001 (0x0001 - 0x0000)
struct WBP_Modern_MapQuestMenu_C_SetMapOpenedWay final
{
public:
	bool                                          IsClassicWay;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_SetMapOpenedWay) == 0x000001, "Wrong alignment on WBP_Modern_MapQuestMenu_C_SetMapOpenedWay");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_SetMapOpenedWay) == 0x000001, "Wrong size on WBP_Modern_MapQuestMenu_C_SetMapOpenedWay");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_SetMapOpenedWay, IsClassicWay) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_SetMapOpenedWay::IsClassicWay' has a wrong offset!");

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.UpdateCurrentPage
// 0x0001 (0x0001 - 0x0000)
struct WBP_Modern_MapQuestMenu_C_UpdateCurrentPage final
{
public:
	ELegacyMapMenuPage                            NewCurrentPage;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_UpdateCurrentPage) == 0x000001, "Wrong alignment on WBP_Modern_MapQuestMenu_C_UpdateCurrentPage");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_UpdateCurrentPage) == 0x000001, "Wrong size on WBP_Modern_MapQuestMenu_C_UpdateCurrentPage");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_UpdateCurrentPage, NewCurrentPage) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_UpdateCurrentPage::NewCurrentPage' has a wrong offset!");

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.UpdateTitleProperties
// 0x0030 (0x0030 - 0x0000)
struct WBP_Modern_MapQuestMenu_C_UpdateTitleProperties final
{
public:
	struct FLegacyMapMenuTitleProperties          NewTitleProperties;                                // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_UpdateTitleProperties) == 0x000008, "Wrong alignment on WBP_Modern_MapQuestMenu_C_UpdateTitleProperties");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_UpdateTitleProperties) == 0x000030, "Wrong size on WBP_Modern_MapQuestMenu_C_UpdateTitleProperties");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_UpdateTitleProperties, NewTitleProperties) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_UpdateTitleProperties::NewTitleProperties' has a wrong offset!");

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.BP_GetDesiredFocusTarget
// 0x0020 (0x0020 - 0x0000)
struct WBP_Modern_MapQuestMenu_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ELegacyMapMenuPage                            CallFunc_GetCurrentPage_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVNavigableActivatableWidgetBase*       CallFunc_GetPageWidget_PageWidget;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_Modern_MapQuestMenu_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_BP_GetDesiredFocusTarget) == 0x000020, "Wrong size on WBP_Modern_MapQuestMenu_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_BP_GetDesiredFocusTarget, CallFunc_GetCurrentPage_ReturnValue) == 0x000008, "Member 'WBP_Modern_MapQuestMenu_C_BP_GetDesiredFocusTarget::CallFunc_GetCurrentPage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_BP_GetDesiredFocusTarget, CallFunc_GetPageWidget_PageWidget) == 0x000010, "Member 'WBP_Modern_MapQuestMenu_C_BP_GetDesiredFocusTarget::CallFunc_GetPageWidget_PageWidget' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_BP_GetDesiredFocusTarget, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_Modern_MapQuestMenu_C_BP_GetDesiredFocusTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.GetLocalMapPage
// 0x0008 (0x0008 - 0x0000)
struct WBP_Modern_MapQuestMenu_C_GetLocalMapPage final
{
public:
	class UVLegacyMapMenuMapPage*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_GetLocalMapPage) == 0x000008, "Wrong alignment on WBP_Modern_MapQuestMenu_C_GetLocalMapPage");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_GetLocalMapPage) == 0x000008, "Wrong size on WBP_Modern_MapQuestMenu_C_GetLocalMapPage");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_GetLocalMapPage, ReturnValue) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_GetLocalMapPage::ReturnValue' has a wrong offset!");

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.GetPageWidget
// 0x0020 (0x0020 - 0x0000)
struct WBP_Modern_MapQuestMenu_C_GetPageWidget final
{
public:
	ELegacyMapMenuPage                            Page;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVNavigableActivatableWidgetBase*       PageWidget;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ELegacyMapMenuPage                            Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVNavigableActivatableWidgetBase*       K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_GetPageWidget) == 0x000008, "Wrong alignment on WBP_Modern_MapQuestMenu_C_GetPageWidget");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_GetPageWidget) == 0x000020, "Wrong size on WBP_Modern_MapQuestMenu_C_GetPageWidget");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_GetPageWidget, Page) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_GetPageWidget::Page' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_GetPageWidget, PageWidget) == 0x000008, "Member 'WBP_Modern_MapQuestMenu_C_GetPageWidget::PageWidget' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_GetPageWidget, Temp_byte_Variable) == 0x000010, "Member 'WBP_Modern_MapQuestMenu_C_GetPageWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_GetPageWidget, K2Node_Select_Default) == 0x000018, "Member 'WBP_Modern_MapQuestMenu_C_GetPageWidget::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.GetWorldMapPage
// 0x0008 (0x0008 - 0x0000)
struct WBP_Modern_MapQuestMenu_C_GetWorldMapPage final
{
public:
	class UVLegacyMapMenuMapPage*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_GetWorldMapPage) == 0x000008, "Wrong alignment on WBP_Modern_MapQuestMenu_C_GetWorldMapPage");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_GetWorldMapPage) == 0x000008, "Wrong size on WBP_Modern_MapQuestMenu_C_GetWorldMapPage");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_GetWorldMapPage, ReturnValue) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_GetWorldMapPage::ReturnValue' has a wrong offset!");

// Function WBP_Modern_MapQuestMenu.WBP_Modern_MapQuestMenu_C.IsMap
// 0x0009 (0x0009 - 0x0000)
struct WBP_Modern_MapQuestMenu_C_IsMap final
{
public:
	bool                                          IsMap_0;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELegacyMapMenuPage                            Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELegacyMapMenuPage                            CallFunc_GetCurrentPage_ReturnValue;               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapQuestMenu_C_IsMap) == 0x000001, "Wrong alignment on WBP_Modern_MapQuestMenu_C_IsMap");
static_assert(sizeof(WBP_Modern_MapQuestMenu_C_IsMap) == 0x000009, "Wrong size on WBP_Modern_MapQuestMenu_C_IsMap");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_IsMap, IsMap_0) == 0x000000, "Member 'WBP_Modern_MapQuestMenu_C_IsMap::IsMap_0' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_IsMap, Temp_byte_Variable) == 0x000001, "Member 'WBP_Modern_MapQuestMenu_C_IsMap::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_IsMap, Temp_bool_Variable) == 0x000002, "Member 'WBP_Modern_MapQuestMenu_C_IsMap::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_IsMap, Temp_bool_Variable_1) == 0x000003, "Member 'WBP_Modern_MapQuestMenu_C_IsMap::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_IsMap, Temp_bool_Variable_2) == 0x000004, "Member 'WBP_Modern_MapQuestMenu_C_IsMap::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_IsMap, Temp_bool_Variable_3) == 0x000005, "Member 'WBP_Modern_MapQuestMenu_C_IsMap::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_IsMap, Temp_bool_Variable_4) == 0x000006, "Member 'WBP_Modern_MapQuestMenu_C_IsMap::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_IsMap, CallFunc_GetCurrentPage_ReturnValue) == 0x000007, "Member 'WBP_Modern_MapQuestMenu_C_IsMap::CallFunc_GetCurrentPage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapQuestMenu_C_IsMap, K2Node_Select_Default) == 0x000008, "Member 'WBP_Modern_MapQuestMenu_C_IsMap::K2Node_Select_Default' has a wrong offset!");

}

