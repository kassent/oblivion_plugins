#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QMPLink

#include "Basic.hpp"

#include "QMPLink_classes.hpp"
#include "QMPLink_parameters.hpp"


namespace SDK
{

// Function QMPLink.QMPUIBPLibrary.QMPBindUIEvent
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UUserWidget*                      WidgetPtr                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQMPUIBPLibrary::QMPBindUIEvent(class UUserWidget* WidgetPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QMPUIBPLibrary", "QMPBindUIEvent");

	Params::QMPUIBPLibrary_QMPBindUIEvent Parms{};

	Parms.WidgetPtr = WidgetPtr;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QMPLink.QMPUIBPLibrary.QMPLinkDynamicButton
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UButton*                          NewWidget                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ButtonKey                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQMPUIBPLibrary::QMPLinkDynamicButton(class UButton* NewWidget, const class FString& ButtonKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QMPUIBPLibrary", "QMPLinkDynamicButton");

	Params::QMPUIBPLibrary_QMPLinkDynamicButton Parms{};

	Parms.NewWidget = NewWidget;
	Parms.ButtonKey = std::move(ButtonKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QMPLink.QMPUIBPLibrary.QMPLinkDynamicCommonButton
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UCommonButtonBase*                NewWidget                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ButtonKey                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQMPUIBPLibrary::QMPLinkDynamicCommonButton(class UCommonButtonBase* NewWidget, const class FString& ButtonKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QMPUIBPLibrary", "QMPLinkDynamicCommonButton");

	Params::QMPUIBPLibrary_QMPLinkDynamicCommonButton Parms{};

	Parms.NewWidget = NewWidget;
	Parms.ButtonKey = std::move(ButtonKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QMPLink.QMPUIBPLibrary.QMPReleaseDynamicButton
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const class FString&                    ButtonKey                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQMPUIBPLibrary::QMPReleaseDynamicButton(const class FString& ButtonKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QMPUIBPLibrary", "QMPReleaseDynamicButton");

	Params::QMPUIBPLibrary_QMPReleaseDynamicButton Parms{};

	Parms.ButtonKey = std::move(ButtonKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QMPLink.QMPUIBPLibrary.QMPReleaseUIEvent
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UUserWidget*                      WidgetPtr                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQMPUIBPLibrary::QMPReleaseUIEvent(class UUserWidget* WidgetPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QMPUIBPLibrary", "QMPReleaseUIEvent");

	Params::QMPUIBPLibrary_QMPReleaseUIEvent Parms{};

	Parms.WidgetPtr = WidgetPtr;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QMPLink.QMPUIBPLibrary.QMPSendSpecialGamepadUIEvent
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UButton*                          ClickedButton                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQMPUIBPLibrary::QMPSendSpecialGamepadUIEvent(class UButton* ClickedButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QMPUIBPLibrary", "QMPSendSpecialGamepadUIEvent");

	Params::QMPUIBPLibrary_QMPSendSpecialGamepadUIEvent Parms{};

	Parms.ClickedButton = ClickedButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QMPLink.QMPUIBPLibrary.QMPSendSpecialGamepadUIEventCommonUI
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UCommonButtonBase*                ClickedButton                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQMPUIBPLibrary::QMPSendSpecialGamepadUIEventCommonUI(class UCommonButtonBase* ClickedButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QMPUIBPLibrary", "QMPSendSpecialGamepadUIEventCommonUI");

	Params::QMPUIBPLibrary_QMPSendSpecialGamepadUIEventCommonUI Parms{};

	Parms.ClickedButton = ClickedButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

