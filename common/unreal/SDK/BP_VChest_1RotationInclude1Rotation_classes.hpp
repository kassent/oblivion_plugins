#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VChest_1RotationInclude1Rotation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_VChest_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_VChest_1RotationInclude1Rotation.BP_VChest_1RotationInclude1Rotation_C
// 0x0070 (0x0488 - 0x0418)
class ABP_VChest_1RotationInclude1Rotation_C : public ABP_VChest_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_VChest_1RotationInclude1Rotation_C; // 0x0418(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Lid2;                                              // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Original_Rotation_Lid2;                            // 0x0428(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Original_Rotation_Lid1;                            // 0x0440(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Target_Rotation_Lid2;                              // 0x0458(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Target_Rotation_Lid1;                              // 0x0470(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_VChest_1RotationInclude1Rotation(int32 EntryPoint);
	void ReceiveBeginPlay();
	void Update_Timeline(double HalfSecBefore, double HalfSecAfter, double Threerd);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_VChest_1RotationInclude1Rotation_C">();
	}
	static class ABP_VChest_1RotationInclude1Rotation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_VChest_1RotationInclude1Rotation_C>();
	}
};
static_assert(alignof(ABP_VChest_1RotationInclude1Rotation_C) == 0x000008, "Wrong alignment on ABP_VChest_1RotationInclude1Rotation_C");
static_assert(sizeof(ABP_VChest_1RotationInclude1Rotation_C) == 0x000488, "Wrong size on ABP_VChest_1RotationInclude1Rotation_C");
static_assert(offsetof(ABP_VChest_1RotationInclude1Rotation_C, UberGraphFrame_BP_VChest_1RotationInclude1Rotation_C) == 0x000418, "Member 'ABP_VChest_1RotationInclude1Rotation_C::UberGraphFrame_BP_VChest_1RotationInclude1Rotation_C' has a wrong offset!");
static_assert(offsetof(ABP_VChest_1RotationInclude1Rotation_C, Lid2) == 0x000420, "Member 'ABP_VChest_1RotationInclude1Rotation_C::Lid2' has a wrong offset!");
static_assert(offsetof(ABP_VChest_1RotationInclude1Rotation_C, Original_Rotation_Lid2) == 0x000428, "Member 'ABP_VChest_1RotationInclude1Rotation_C::Original_Rotation_Lid2' has a wrong offset!");
static_assert(offsetof(ABP_VChest_1RotationInclude1Rotation_C, Original_Rotation_Lid1) == 0x000440, "Member 'ABP_VChest_1RotationInclude1Rotation_C::Original_Rotation_Lid1' has a wrong offset!");
static_assert(offsetof(ABP_VChest_1RotationInclude1Rotation_C, Target_Rotation_Lid2) == 0x000458, "Member 'ABP_VChest_1RotationInclude1Rotation_C::Target_Rotation_Lid2' has a wrong offset!");
static_assert(offsetof(ABP_VChest_1RotationInclude1Rotation_C, Target_Rotation_Lid1) == 0x000470, "Member 'ABP_VChest_1RotationInclude1Rotation_C::Target_Rotation_Lid1' has a wrong offset!");

}

