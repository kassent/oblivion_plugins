#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Graphic_DLSS_FG

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Altar_classes.hpp"
#include "StreamlineBlueprint_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Graphic_DLSS_FG.WBP_Graphic_DLSS_FG_C
// 0x0030 (0x0530 - 0x0500)
class UWBP_Graphic_DLSS_FG_C final : public UVDebugGraphicsSettingWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0500(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UComboBoxString*                        ComboItem;                                         // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             txt_label;                                         // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class FString>                         Str_DLSSFG_Modes;                                  // 0x0518(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Old_Vsync_Setting;                                 // 0x0528(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WBP_Graphic_DLSS_FG(int32 EntryPoint);
	void FG__Event(const class FString& SelectedItem, ESelectInfo SelectionType);
	void OnRefresh();
	void Refresh();
	void Refresh_Related_Options();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Graphic_DLSS_FG_C">();
	}
	static class UWBP_Graphic_DLSS_FG_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Graphic_DLSS_FG_C>();
	}
};
static_assert(alignof(UWBP_Graphic_DLSS_FG_C) == 0x000008, "Wrong alignment on UWBP_Graphic_DLSS_FG_C");
static_assert(sizeof(UWBP_Graphic_DLSS_FG_C) == 0x000530, "Wrong size on UWBP_Graphic_DLSS_FG_C");
static_assert(offsetof(UWBP_Graphic_DLSS_FG_C, UberGraphFrame) == 0x000500, "Member 'UWBP_Graphic_DLSS_FG_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_DLSS_FG_C, ComboItem) == 0x000508, "Member 'UWBP_Graphic_DLSS_FG_C::ComboItem' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_DLSS_FG_C, txt_label) == 0x000510, "Member 'UWBP_Graphic_DLSS_FG_C::txt_label' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_DLSS_FG_C, Str_DLSSFG_Modes) == 0x000518, "Member 'UWBP_Graphic_DLSS_FG_C::Str_DLSSFG_Modes' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_DLSS_FG_C, Old_Vsync_Setting) == 0x000528, "Member 'UWBP_Graphic_DLSS_FG_C::Old_Vsync_Setting' has a wrong offset!");

}

