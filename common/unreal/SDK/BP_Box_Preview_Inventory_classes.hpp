#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Box_Preview_Inventory

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Altar_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Box_Preview_Inventory.BP_Box_Preview_Inventory_C
// 0x0180 (0x0418 - 0x0298)
class ABP_Box_Preview_Inventory_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPostProcessComponent*                  PostProcess;                                       // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ItemDefaultLocation;                               // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        PlayerZoomTarget;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        PlayerLocation;                                    // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        TopLeft;                                           // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        BottomRight;                                       // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       ItemBackground;                                    // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       ScreenshotDisplay;                                 // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       InventoryCamera;                                   // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Rim;                                               // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        RimLight;                                          // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Fill;                                              // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Kick;                                              // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Key;                                               // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        VFX;                                               // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        KickLight;                                         // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        FillLight;                                         // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Lights;                                            // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LightRoot;                                         // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        KeyLight;                                          // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Background;                                        // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ApplyLevelUpDitherTimeline_DitherIntensity_E51E46394B0E8E3D804EEFA4283859C4; // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ApplyLevelUpDitherTimeline__Direction_E51E46394B0E8E3D804EEFA4283859C4; // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35D[0x3];                                      // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ApplyLevelUpDitherTimeline;                        // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         ApplyInventoryDitherTimeline_DitherIntensity_E6CC4B43485543CA6D9989A2E0A0311B; // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ApplyInventoryDitherTimeline__Direction_E6CC4B43485543CA6D9989A2E0A0311B; // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36D[0x3];                                      // 0x036D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ApplyInventoryDitherTimeline;                      // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AVAltarCameraActor*                     MainCamera;                                        // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInventoryCameraActive;                          // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsItemDisplayed;                                  // 0x0381(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsCharacterDisplayed;                             // 0x0382(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_383[0x5];                                      // 0x0383(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CurrentZoomValue;                                  // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(bool IsItemDisplayed)> OnInventoryItemDisplayed;                   // 0x0390(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class AActor*                                 PreviewItem;                                       // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             ActorsLocationOffsetTable;                         // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AVGlobalLighting*                       CurrentPPV;                                        // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<class UExponentialHeightFogComponent*, double> FogDensityBackupValues;                      // 0x03B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FTimerHandle                           CloudProjectionDistanceResetTime;                  // 0x0408(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           LumenSceneFreezeHandle;                            // 0x0410(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void EnableWater();
	void DisableWater();
	void UpdateBackgroundDrawSize_FromCameraComponent();
	void GetFrustumBoundsAtLocation_FromCameraComponent(const struct FVector& InLocation, const struct FVector& InNormal, const struct FVector& InCameraLocation, struct FVector* TopLeftBounds, struct FVector* TopRightBounds, struct FVector* BottomLeftBounds, struct FVector* BottomRightBounds);
	struct FVector GetFrustumEnd_FromCameraComponent(const struct FVector2D& InScreenPosition, double InMaximumDistance);
	void RequestBackgroundImageCapture();
	void UpdateBackgroundDrawSize();
	void TrySetCloudMaxReprojectionDistance();
	void ResetCloudMaxReprojectionDistance();
	void SetGlobalColorGradingActive(bool InColorGradingActive);
	void TryResetUnboundGlobalPostProcess();
	void TryUnboundGlobalPostProcess();
	void EnableFog();
	void DisableFog();
	void SetDitheringForMeshComponent(class UMeshComponent* InMeshComponent, double InDitherValue);
	void SetDitheringForActor(class AActor* InActor, double InDitherValue);
	void UpdateDithering(double InCurrentDither);
	void ForceRefreshItemBodyParts(class AVInventoryPlayerCharacter* Inventory);
	void SetDialoguePostProcessAsUnbound(bool bShouldBeUnbound);
	void GetFrustumBoundsAtLocation(const struct FVector& InLocation, const struct FVector& InNormal, const struct FVector& InCameraLocation, struct FVector* TopLeftBounds, struct FVector* TopRightBounds, struct FVector* BottomLeftBounds, struct FVector* BottomRightBounds);
	void GetFrustumBounds(const struct FVector& PlaneOrigin, const struct FVector& PlaneNormal, const struct FVector& InCameraLocation, const struct FVector& InTopLeftFrustumEnd, const struct FVector& InTopRightFrustumEnd, const struct FVector& InBottomLeftFrustumEnd, const struct FVector& InBottomRightFrustumEnd, struct FVector* TopLeftBounds, struct FVector* TopRightBounds, struct FVector* BottomLeftBounds, struct FVector* BottomRightBounds);
	struct FVector GetFrustumEnd(const struct FVector2D& InScreenPosition, double InMaximumDistance);
	void GetViewportRect(struct FVector2D* TopLeft_0, struct FVector2D* TopRight, struct FVector2D* BottomLeft, struct FVector2D* BottomRight_0);
	void Toggle_All_Inventory_Actors_Visibility(bool ShowInventoryActors);
	void ApplyLocationOffsetFromContext(class FName InContext);
	void SetItemPreviewPosition(const struct FVector2D& InViewportPosition);
	void Remove_Light_and_VFX();
	void ApplyCurrentCharacterZoom();
	void AddCharacterZoom(double ZoomIncrease);
	void SetCharacterZoom(double NewZoomAmount);
	void UpdateMainCamera();
	void SetPrimaryGameLayoutBackgroundVisibility(ESlateVisibility NewVisibility);
	void ShowInventoryCharacter(bool bShowCharacter);
	void ShowInventoryItem(bool bShowItem);
	void Switch_Camera(class AActor* New_Camera);
	void EnableInventoryCamera(bool bEnable);
	void ApplyLevelUpDitherTimeline__FinishedFunc();
	void ApplyLevelUpDitherTimeline__UpdateFunc();
	void ApplyInventoryDitherTimeline__FinishedFunc();
	void ApplyInventoryDitherTimeline__UpdateFunc();
	void EventSwitchCamera();
	void OnPreviewInventoryChanged(bool InventoryActive);
	void BeginDitherFadeOut(class FName DitherType);
	void BeginDitherFadeIn(class FName DitherType);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ExecuteUbergraph_BP_Box_Preview_Inventory(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Box_Preview_Inventory_C">();
	}
	static class ABP_Box_Preview_Inventory_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Box_Preview_Inventory_C>();
	}
};
static_assert(alignof(ABP_Box_Preview_Inventory_C) == 0x000008, "Wrong alignment on ABP_Box_Preview_Inventory_C");
static_assert(sizeof(ABP_Box_Preview_Inventory_C) == 0x000418, "Wrong size on ABP_Box_Preview_Inventory_C");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, UberGraphFrame) == 0x000298, "Member 'ABP_Box_Preview_Inventory_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, PostProcess) == 0x0002A0, "Member 'ABP_Box_Preview_Inventory_C::PostProcess' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, ItemDefaultLocation) == 0x0002A8, "Member 'ABP_Box_Preview_Inventory_C::ItemDefaultLocation' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, Cube) == 0x0002B0, "Member 'ABP_Box_Preview_Inventory_C::Cube' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, PlayerZoomTarget) == 0x0002B8, "Member 'ABP_Box_Preview_Inventory_C::PlayerZoomTarget' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, PlayerLocation) == 0x0002C0, "Member 'ABP_Box_Preview_Inventory_C::PlayerLocation' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, TopLeft) == 0x0002C8, "Member 'ABP_Box_Preview_Inventory_C::TopLeft' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, BottomRight) == 0x0002D0, "Member 'ABP_Box_Preview_Inventory_C::BottomRight' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, ItemBackground) == 0x0002D8, "Member 'ABP_Box_Preview_Inventory_C::ItemBackground' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, ScreenshotDisplay) == 0x0002E0, "Member 'ABP_Box_Preview_Inventory_C::ScreenshotDisplay' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, InventoryCamera) == 0x0002E8, "Member 'ABP_Box_Preview_Inventory_C::InventoryCamera' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, Rim) == 0x0002F0, "Member 'ABP_Box_Preview_Inventory_C::Rim' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, RimLight) == 0x0002F8, "Member 'ABP_Box_Preview_Inventory_C::RimLight' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, Fill) == 0x000300, "Member 'ABP_Box_Preview_Inventory_C::Fill' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, Kick) == 0x000308, "Member 'ABP_Box_Preview_Inventory_C::Kick' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, Key) == 0x000310, "Member 'ABP_Box_Preview_Inventory_C::Key' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, VFX) == 0x000318, "Member 'ABP_Box_Preview_Inventory_C::VFX' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, KickLight) == 0x000320, "Member 'ABP_Box_Preview_Inventory_C::KickLight' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, FillLight) == 0x000328, "Member 'ABP_Box_Preview_Inventory_C::FillLight' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, Lights) == 0x000330, "Member 'ABP_Box_Preview_Inventory_C::Lights' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, LightRoot) == 0x000338, "Member 'ABP_Box_Preview_Inventory_C::LightRoot' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, KeyLight) == 0x000340, "Member 'ABP_Box_Preview_Inventory_C::KeyLight' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, Background) == 0x000348, "Member 'ABP_Box_Preview_Inventory_C::Background' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, DefaultSceneRoot) == 0x000350, "Member 'ABP_Box_Preview_Inventory_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, ApplyLevelUpDitherTimeline_DitherIntensity_E51E46394B0E8E3D804EEFA4283859C4) == 0x000358, "Member 'ABP_Box_Preview_Inventory_C::ApplyLevelUpDitherTimeline_DitherIntensity_E51E46394B0E8E3D804EEFA4283859C4' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, ApplyLevelUpDitherTimeline__Direction_E51E46394B0E8E3D804EEFA4283859C4) == 0x00035C, "Member 'ABP_Box_Preview_Inventory_C::ApplyLevelUpDitherTimeline__Direction_E51E46394B0E8E3D804EEFA4283859C4' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, ApplyLevelUpDitherTimeline) == 0x000360, "Member 'ABP_Box_Preview_Inventory_C::ApplyLevelUpDitherTimeline' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, ApplyInventoryDitherTimeline_DitherIntensity_E6CC4B43485543CA6D9989A2E0A0311B) == 0x000368, "Member 'ABP_Box_Preview_Inventory_C::ApplyInventoryDitherTimeline_DitherIntensity_E6CC4B43485543CA6D9989A2E0A0311B' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, ApplyInventoryDitherTimeline__Direction_E6CC4B43485543CA6D9989A2E0A0311B) == 0x00036C, "Member 'ABP_Box_Preview_Inventory_C::ApplyInventoryDitherTimeline__Direction_E6CC4B43485543CA6D9989A2E0A0311B' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, ApplyInventoryDitherTimeline) == 0x000370, "Member 'ABP_Box_Preview_Inventory_C::ApplyInventoryDitherTimeline' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, MainCamera) == 0x000378, "Member 'ABP_Box_Preview_Inventory_C::MainCamera' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, bIsInventoryCameraActive) == 0x000380, "Member 'ABP_Box_Preview_Inventory_C::bIsInventoryCameraActive' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, bIsItemDisplayed) == 0x000381, "Member 'ABP_Box_Preview_Inventory_C::bIsItemDisplayed' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, bIsCharacterDisplayed) == 0x000382, "Member 'ABP_Box_Preview_Inventory_C::bIsCharacterDisplayed' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, CurrentZoomValue) == 0x000388, "Member 'ABP_Box_Preview_Inventory_C::CurrentZoomValue' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, OnInventoryItemDisplayed) == 0x000390, "Member 'ABP_Box_Preview_Inventory_C::OnInventoryItemDisplayed' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, PreviewItem) == 0x0003A0, "Member 'ABP_Box_Preview_Inventory_C::PreviewItem' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, ActorsLocationOffsetTable) == 0x0003A8, "Member 'ABP_Box_Preview_Inventory_C::ActorsLocationOffsetTable' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, CurrentPPV) == 0x0003B0, "Member 'ABP_Box_Preview_Inventory_C::CurrentPPV' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, FogDensityBackupValues) == 0x0003B8, "Member 'ABP_Box_Preview_Inventory_C::FogDensityBackupValues' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, CloudProjectionDistanceResetTime) == 0x000408, "Member 'ABP_Box_Preview_Inventory_C::CloudProjectionDistanceResetTime' has a wrong offset!");
static_assert(offsetof(ABP_Box_Preview_Inventory_C, LumenSceneFreezeHandle) == 0x000410, "Member 'ABP_Box_Preview_Inventory_C::LumenSceneFreezeHandle' has a wrong offset!");

}

