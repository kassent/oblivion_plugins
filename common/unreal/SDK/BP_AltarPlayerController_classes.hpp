#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AltarPlayerController

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Altar_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AltarPlayerController.BP_AltarPlayerController_C
// 0x0050 (0x0E08 - 0x0DB8)
class ABP_AltarPlayerController_C final : public AVEnhancedAltarPlayerController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0DB8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneCaptureComponent2D*               LocalMapBaseColorCaptureComponent;                 // 0x0DC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULocalMapManager*                       LocalMapManager;                                   // 0x0DC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               LocalMapSceneDepthCaptureComponent;                // 0x0DD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UObject*                                ControlledPlayerCharacter;                         // 0x0DD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWBP_InputPairingIndicator_C*           InputPairingIndicatorWidget;                       // 0x0DE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVAltarImageCalibrationWidget*          ImageCalibrationWidget;                            // 0x0DE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            LocomotionDebugWidget;                             // 0x0DF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_AssetNameDebugWidget_C*            AssetNameDebugWidget;                              // 0x0DF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_QuickCommandsMenu_View_C*          QuickCommandsMenuWidget;                           // 0x0E00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AltarPlayerController(int32 EntryPoint);
	void InpActEvt_AnyKey_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_AnyKey_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void InpActEvt_F6_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpAxisKeyEvt_Mouse2D_K2Node_InputVectorAxisEvent_0(const struct FVector& AxisValue);
	void OnComplete_24B1EBB04C3500572DC0A09E6294DAE4(class UUserWidget* UserWidget);
	void OnLocomotionDebugModeActivated();
	void OnLocomotionDebugModeDeactivated();
	void QCM();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceivePossess(class APawn* PossessedPawn);
	void ReceiveUnPossess(class APawn* UnpossessedPawn);
	void ResetCameraManagerTimer();
	void ShowQuickCommandsMenu();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AltarPlayerController_C">();
	}
	static class ABP_AltarPlayerController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AltarPlayerController_C>();
	}
};
static_assert(alignof(ABP_AltarPlayerController_C) == 0x000008, "Wrong alignment on ABP_AltarPlayerController_C");
static_assert(sizeof(ABP_AltarPlayerController_C) == 0x000E08, "Wrong size on ABP_AltarPlayerController_C");
static_assert(offsetof(ABP_AltarPlayerController_C, UberGraphFrame) == 0x000DB8, "Member 'ABP_AltarPlayerController_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AltarPlayerController_C, LocalMapBaseColorCaptureComponent) == 0x000DC0, "Member 'ABP_AltarPlayerController_C::LocalMapBaseColorCaptureComponent' has a wrong offset!");
static_assert(offsetof(ABP_AltarPlayerController_C, LocalMapManager) == 0x000DC8, "Member 'ABP_AltarPlayerController_C::LocalMapManager' has a wrong offset!");
static_assert(offsetof(ABP_AltarPlayerController_C, LocalMapSceneDepthCaptureComponent) == 0x000DD0, "Member 'ABP_AltarPlayerController_C::LocalMapSceneDepthCaptureComponent' has a wrong offset!");
static_assert(offsetof(ABP_AltarPlayerController_C, ControlledPlayerCharacter) == 0x000DD8, "Member 'ABP_AltarPlayerController_C::ControlledPlayerCharacter' has a wrong offset!");
static_assert(offsetof(ABP_AltarPlayerController_C, InputPairingIndicatorWidget) == 0x000DE0, "Member 'ABP_AltarPlayerController_C::InputPairingIndicatorWidget' has a wrong offset!");
static_assert(offsetof(ABP_AltarPlayerController_C, ImageCalibrationWidget) == 0x000DE8, "Member 'ABP_AltarPlayerController_C::ImageCalibrationWidget' has a wrong offset!");
static_assert(offsetof(ABP_AltarPlayerController_C, LocomotionDebugWidget) == 0x000DF0, "Member 'ABP_AltarPlayerController_C::LocomotionDebugWidget' has a wrong offset!");
static_assert(offsetof(ABP_AltarPlayerController_C, AssetNameDebugWidget) == 0x000DF8, "Member 'ABP_AltarPlayerController_C::AssetNameDebugWidget' has a wrong offset!");
static_assert(offsetof(ABP_AltarPlayerController_C, QuickCommandsMenuWidget) == 0x000E00, "Member 'ABP_AltarPlayerController_C::QuickCommandsMenuWidget' has a wrong offset!");

}

