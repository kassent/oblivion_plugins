#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ModernPrefab_ControllerInputHint

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK::Params
{

// Function WBP_ModernPrefab_ControllerInputHint.WBP_ModernPrefab_ControllerInputHint_C.ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint
// 0x0088 (0x0088 - 0x0000)
struct WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVAltarUISubsystem*                     CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputHintsVisible_ReturnValue;          // 0x0018(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAltarUISubsystem*                     CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue_1;    // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bIsHidden)>               K2Node_CreateDelegate_OutputDelegate_1;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMinDesiredHeight_InMinDesiredHeight_ImplicitCast; // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMinDesiredWidth_InMinDesiredWidth_ImplicitCast; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint) == 0x000008, "Wrong alignment on WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint");
static_assert(sizeof(WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint) == 0x000088, "Wrong size on WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint, EntryPoint) == 0x000000, "Member 'WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000010, "Member 'WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint, CallFunc_IsInputHintsVisible_ReturnValue) == 0x000018, "Member 'WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint::CallFunc_IsInputHintsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000020, "Member 'WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint, K2Node_Event_IsDesignTime) == 0x000038, "Member 'WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint, CallFunc_BreakVector2D_X) == 0x000040, "Member 'WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint, CallFunc_BreakVector2D_Y) == 0x000048, "Member 'WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint, CallFunc_GetLocalPlayerSubsystem_ReturnValue_1) == 0x000050, "Member 'WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint::CallFunc_GetLocalPlayerSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint, CallFunc_GetCurrentInputType_ReturnValue) == 0x000058, "Member 'WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint, K2Node_CreateDelegate_OutputDelegate_1) == 0x00005C, "Member 'WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint, CallFunc_BreakVector2D_X_1) == 0x000070, "Member 'WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint, CallFunc_BreakVector2D_Y_1) == 0x000078, "Member 'WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint, CallFunc_SetMinDesiredHeight_InMinDesiredHeight_ImplicitCast) == 0x000080, "Member 'WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint::CallFunc_SetMinDesiredHeight_InMinDesiredHeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint, CallFunc_SetMinDesiredWidth_InMinDesiredWidth_ImplicitCast) == 0x000084, "Member 'WBP_ModernPrefab_ControllerInputHint_C_ExecuteUbergraph_WBP_ModernPrefab_ControllerInputHint::CallFunc_SetMinDesiredWidth_InMinDesiredWidth_ImplicitCast' has a wrong offset!");

// Function WBP_ModernPrefab_ControllerInputHint.WBP_ModernPrefab_ControllerInputHint_C.On Input Method Changed
// 0x000C (0x000C - 0x0000)
struct WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed final
{
public:
	ECommonInputType                              NewInputType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed) == 0x000001, "Wrong alignment on WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed");
static_assert(sizeof(WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed) == 0x00000C, "Wrong size on WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed, NewInputType) == 0x000000, "Member 'WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed::NewInputType' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed, Temp_byte_Variable) == 0x000001, "Member 'WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed, Temp_bool_Variable) == 0x000003, "Member 'WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed, Temp_byte_Variable_2) == 0x000004, "Member 'WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed, Temp_byte_Variable_3) == 0x000005, "Member 'WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed, Temp_bool_Variable_1) == 0x000006, "Member 'WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000007, "Member 'WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed, K2Node_Select_Default) == 0x000009, "Member 'WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000A, "Member 'WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed, K2Node_Select_Default_1) == 0x00000B, "Member 'WBP_ModernPrefab_ControllerInputHint_C_On_Input_Method_Changed::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_ModernPrefab_ControllerInputHint.WBP_ModernPrefab_ControllerInputHint_C.On Toggle Input Visibility
// 0x0005 (0x0005 - 0x0000)
struct WBP_ModernPrefab_ControllerInputHint_C_On_Toggle_Input_Visibility final
{
public:
	bool                                          bInIsVisible;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModernPrefab_ControllerInputHint_C_On_Toggle_Input_Visibility) == 0x000001, "Wrong alignment on WBP_ModernPrefab_ControllerInputHint_C_On_Toggle_Input_Visibility");
static_assert(sizeof(WBP_ModernPrefab_ControllerInputHint_C_On_Toggle_Input_Visibility) == 0x000005, "Wrong size on WBP_ModernPrefab_ControllerInputHint_C_On_Toggle_Input_Visibility");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_On_Toggle_Input_Visibility, bInIsVisible) == 0x000000, "Member 'WBP_ModernPrefab_ControllerInputHint_C_On_Toggle_Input_Visibility::bInIsVisible' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_On_Toggle_Input_Visibility, Temp_bool_Variable) == 0x000001, "Member 'WBP_ModernPrefab_ControllerInputHint_C_On_Toggle_Input_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_On_Toggle_Input_Visibility, Temp_byte_Variable) == 0x000002, "Member 'WBP_ModernPrefab_ControllerInputHint_C_On_Toggle_Input_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_On_Toggle_Input_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_ModernPrefab_ControllerInputHint_C_On_Toggle_Input_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_On_Toggle_Input_Visibility, K2Node_Select_Default) == 0x000004, "Member 'WBP_ModernPrefab_ControllerInputHint_C_On_Toggle_Input_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ModernPrefab_ControllerInputHint.WBP_ModernPrefab_ControllerInputHint_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ModernPrefab_ControllerInputHint_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModernPrefab_ControllerInputHint_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ModernPrefab_ControllerInputHint_C_PreConstruct");
static_assert(sizeof(WBP_ModernPrefab_ControllerInputHint_C_PreConstruct) == 0x000001, "Wrong size on WBP_ModernPrefab_ControllerInputHint_C_PreConstruct");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ModernPrefab_ControllerInputHint_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_ModernPrefab_ControllerInputHint.WBP_ModernPrefab_ControllerInputHint_C.SetControllerInputBrush
// 0x0100 (0x0100 - 0x0000)
struct WBP_ModernPrefab_ControllerInputHint_C_SetControllerInputBrush final
{
public:
	struct FKey                                   In_Key;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UVAltarUISubsystem*                     CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVAltarUISubsystem*                     CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_TryGetBrushFromKey_OutBrush;              // 0x0030(0x00D0)()
};
static_assert(alignof(WBP_ModernPrefab_ControllerInputHint_C_SetControllerInputBrush) == 0x000010, "Wrong alignment on WBP_ModernPrefab_ControllerInputHint_C_SetControllerInputBrush");
static_assert(sizeof(WBP_ModernPrefab_ControllerInputHint_C_SetControllerInputBrush) == 0x000100, "Wrong size on WBP_ModernPrefab_ControllerInputHint_C_SetControllerInputBrush");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_SetControllerInputBrush, In_Key) == 0x000000, "Member 'WBP_ModernPrefab_ControllerInputHint_C_SetControllerInputBrush::In_Key' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_SetControllerInputBrush, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000018, "Member 'WBP_ModernPrefab_ControllerInputHint_C_SetControllerInputBrush::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_SetControllerInputBrush, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000020, "Member 'WBP_ModernPrefab_ControllerInputHint_C_SetControllerInputBrush::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_SetControllerInputBrush, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WBP_ModernPrefab_ControllerInputHint_C_SetControllerInputBrush::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_SetControllerInputBrush, CallFunc_TryGetBrushFromKey_OutBrush) == 0x000030, "Member 'WBP_ModernPrefab_ControllerInputHint_C_SetControllerInputBrush::CallFunc_TryGetBrushFromKey_OutBrush' has a wrong offset!");

// Function WBP_ModernPrefab_ControllerInputHint.WBP_ModernPrefab_ControllerInputHint_C.SetInputBrush
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush final
{
public:
	class UInputAction*                           NewInputAction;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Local_CurrentKey;                                  // 0x0008(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FKey>                           Local_KeyMapped;                                   // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0058(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue_1;         // 0x0078(0x0018)()
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_Array_Get_Item;                           // 0x0098(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnhancedInputLocalPlayerSubsystem*     CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_QueryKeysMappedToAction_self_CastInput; // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FKey>                           CallFunc_QueryKeysMappedToAction_ReturnValue;      // 0x00D0(0x0010)(ReferenceParm)
};
static_assert(alignof(WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush) == 0x000008, "Wrong alignment on WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush");
static_assert(sizeof(WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush) == 0x0000E0, "Wrong size on WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush, NewInputAction) == 0x000000, "Member 'WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush::NewInputAction' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush, Local_CurrentKey) == 0x000008, "Member 'WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush::Local_CurrentKey' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush, Local_KeyMapped) == 0x000020, "Member 'WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush::Local_KeyMapped' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush, Temp_int_Array_Index_Variable) == 0x000030, "Member 'WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000058, "Member 'WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000070, "Member 'WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush, CallFunc_Key_GetDisplayName_ReturnValue_1) == 0x000078, "Member 'WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush::CallFunc_Key_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000090, "Member 'WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush, CallFunc_Array_Get_Item) == 0x000098, "Member 'WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x0000B8, "Member 'WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush, CallFunc_QueryKeysMappedToAction_self_CastInput) == 0x0000C0, "Member 'WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush::CallFunc_QueryKeysMappedToAction_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush, CallFunc_QueryKeysMappedToAction_ReturnValue) == 0x0000D0, "Member 'WBP_ModernPrefab_ControllerInputHint_C_SetInputBrush::CallFunc_QueryKeysMappedToAction_ReturnValue' has a wrong offset!");

// Function WBP_ModernPrefab_ControllerInputHint.WBP_ModernPrefab_ControllerInputHint_C.Update Controller Key
// 0x0018 (0x0018 - 0x0000)
struct WBP_ModernPrefab_ControllerInputHint_C_Update_Controller_Key final
{
public:
	struct FKey                                   InNewKey;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModernPrefab_ControllerInputHint_C_Update_Controller_Key) == 0x000008, "Wrong alignment on WBP_ModernPrefab_ControllerInputHint_C_Update_Controller_Key");
static_assert(sizeof(WBP_ModernPrefab_ControllerInputHint_C_Update_Controller_Key) == 0x000018, "Wrong size on WBP_ModernPrefab_ControllerInputHint_C_Update_Controller_Key");
static_assert(offsetof(WBP_ModernPrefab_ControllerInputHint_C_Update_Controller_Key, InNewKey) == 0x000000, "Member 'WBP_ModernPrefab_ControllerInputHint_C_Update_Controller_Key::InNewKey' has a wrong offset!");

}

