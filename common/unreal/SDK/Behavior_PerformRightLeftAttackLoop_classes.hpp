#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Behavior_PerformRightLeftAttackLoop

#include "Basic.hpp"

#include "Behavior_AttackBehaviorBase_classes.hpp"
#include "Engine_structs.hpp"
#include "Altar_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C
// 0x0028 (0x0168 - 0x0140)
class UBehavior_PerformRightLeftAttackLoop_C final : public UBehavior_AttackBehaviorBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Behavior_PerformRightLeftAttackLoop_C; // 0x0140(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          AttackInputReceived;                               // 0x0148(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InFollowThrough;                                   // 0x0149(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AttackChainingInputBufferTime;                     // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LatestAttackStartTime;                             // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NextAttackLeft;                                    // 0x0160(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AttemptCancellation();
	void BindToActionEvents(class UVPawnAnimatedAction* Action);
	void EnterFollowThrough();
	void ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop(int32 EntryPoint);
	void GetCurrentAttackDirection(bool* IsRightAttack);
	float GetCurrentAttackDuration();
	void GetCurrentAttackTime(double* CurrentAttackTime);
	void HandleAttackActionEvent(const struct FGameplayTag& Event_Tag, class UAnimNotifyActionEventInfo* Anim_Notify_Action_Event);
	void OnAnimatedActionEvent(const struct FGameplayTag& Event_Tag, class UAnimNotifyActionEventInfo* Event_Source);
	void OnCanceled_AE73D58B4523D7BCB9DF24B28848C328();
	void OnCanceled_AE73D58B4523D7BCB9DF24B2BA2C1D89();
	void OnCompleted_AE73D58B4523D7BCB9DF24B28848C328();
	void OnCompleted_AE73D58B4523D7BCB9DF24B2BA2C1D89();
	void OnEnd(bool bInterrupted);
	void OnInit();
	void OnUpdate(float DeltaTime);
	void SignalAttackContinuation();
	void UpdateLightAttackAnimTag();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Behavior_PerformRightLeftAttackLoop_C">();
	}
	static class UBehavior_PerformRightLeftAttackLoop_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBehavior_PerformRightLeftAttackLoop_C>();
	}
};
static_assert(alignof(UBehavior_PerformRightLeftAttackLoop_C) == 0x000008, "Wrong alignment on UBehavior_PerformRightLeftAttackLoop_C");
static_assert(sizeof(UBehavior_PerformRightLeftAttackLoop_C) == 0x000168, "Wrong size on UBehavior_PerformRightLeftAttackLoop_C");
static_assert(offsetof(UBehavior_PerformRightLeftAttackLoop_C, UberGraphFrame_Behavior_PerformRightLeftAttackLoop_C) == 0x000140, "Member 'UBehavior_PerformRightLeftAttackLoop_C::UberGraphFrame_Behavior_PerformRightLeftAttackLoop_C' has a wrong offset!");
static_assert(offsetof(UBehavior_PerformRightLeftAttackLoop_C, AttackInputReceived) == 0x000148, "Member 'UBehavior_PerformRightLeftAttackLoop_C::AttackInputReceived' has a wrong offset!");
static_assert(offsetof(UBehavior_PerformRightLeftAttackLoop_C, InFollowThrough) == 0x000149, "Member 'UBehavior_PerformRightLeftAttackLoop_C::InFollowThrough' has a wrong offset!");
static_assert(offsetof(UBehavior_PerformRightLeftAttackLoop_C, AttackChainingInputBufferTime) == 0x000150, "Member 'UBehavior_PerformRightLeftAttackLoop_C::AttackChainingInputBufferTime' has a wrong offset!");
static_assert(offsetof(UBehavior_PerformRightLeftAttackLoop_C, LatestAttackStartTime) == 0x000158, "Member 'UBehavior_PerformRightLeftAttackLoop_C::LatestAttackStartTime' has a wrong offset!");
static_assert(offsetof(UBehavior_PerformRightLeftAttackLoop_C, NextAttackLeft) == 0x000160, "Member 'UBehavior_PerformRightLeftAttackLoop_C::NextAttackLeft' has a wrong offset!");

}

