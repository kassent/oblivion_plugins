#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AST_CharacterKnockDown

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "VActorStateMachine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AST_CharacterKnockDown.AST_CharacterKnockDown_C
// 0x0038 (0x00C0 - 0x0088)
class UAST_CharacterKnockDown_C final : public UVState
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0088(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        PreviousLinearDamping;                             // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PreviousAngularDamping;                            // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 PreviousMovementMode;                              // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreviousControlleDesiredRotation;                  // 0x00A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AVPairedPawn*                           PairedPawn;                                        // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        KnockdownTimer;                                    // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FatigueRegenFrozen;                                // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyKnockdownRequest(const struct FVPawnKnockdownRequest& KnockdownRequest);
	void ExecuteUbergraph_AST_CharacterKnockDown(int32 EntryPoint);
	void OnEntered();
	void OnExited();
	void OnStateUpdate(float DeltaTime);
	void PostInit();
	void SlowPhysicDampingOverTime(double DeltaTime);

	void CanGetUp(bool* CanGetUp_0) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AST_CharacterKnockDown_C">();
	}
	static class UAST_CharacterKnockDown_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAST_CharacterKnockDown_C>();
	}
};
static_assert(alignof(UAST_CharacterKnockDown_C) == 0x000008, "Wrong alignment on UAST_CharacterKnockDown_C");
static_assert(sizeof(UAST_CharacterKnockDown_C) == 0x0000C0, "Wrong size on UAST_CharacterKnockDown_C");
static_assert(offsetof(UAST_CharacterKnockDown_C, UberGraphFrame) == 0x000088, "Member 'UAST_CharacterKnockDown_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAST_CharacterKnockDown_C, PreviousLinearDamping) == 0x000090, "Member 'UAST_CharacterKnockDown_C::PreviousLinearDamping' has a wrong offset!");
static_assert(offsetof(UAST_CharacterKnockDown_C, PreviousAngularDamping) == 0x000098, "Member 'UAST_CharacterKnockDown_C::PreviousAngularDamping' has a wrong offset!");
static_assert(offsetof(UAST_CharacterKnockDown_C, PreviousMovementMode) == 0x0000A0, "Member 'UAST_CharacterKnockDown_C::PreviousMovementMode' has a wrong offset!");
static_assert(offsetof(UAST_CharacterKnockDown_C, PreviousControlleDesiredRotation) == 0x0000A1, "Member 'UAST_CharacterKnockDown_C::PreviousControlleDesiredRotation' has a wrong offset!");
static_assert(offsetof(UAST_CharacterKnockDown_C, PairedPawn) == 0x0000A8, "Member 'UAST_CharacterKnockDown_C::PairedPawn' has a wrong offset!");
static_assert(offsetof(UAST_CharacterKnockDown_C, KnockdownTimer) == 0x0000B0, "Member 'UAST_CharacterKnockDown_C::KnockdownTimer' has a wrong offset!");
static_assert(offsetof(UAST_CharacterKnockDown_C, FatigueRegenFrozen) == 0x0000B8, "Member 'UAST_CharacterKnockDown_C::FatigueRegenFrozen' has a wrong offset!");

}

