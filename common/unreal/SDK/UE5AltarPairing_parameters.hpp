#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UE5AltarPairing

#include "Basic.hpp"


namespace SDK::Params
{

// Function UE5AltarPairing.VOblivionInitialSettings.GetDefaultCollisionProfileNames
// 0x0010 (0x0010 - 0x0000)
struct VOblivionInitialSettings_GetDefaultCollisionProfileNames final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VOblivionInitialSettings_GetDefaultCollisionProfileNames) == 0x000008, "Wrong alignment on VOblivionInitialSettings_GetDefaultCollisionProfileNames");
static_assert(sizeof(VOblivionInitialSettings_GetDefaultCollisionProfileNames) == 0x000010, "Wrong size on VOblivionInitialSettings_GetDefaultCollisionProfileNames");
static_assert(offsetof(VOblivionInitialSettings_GetDefaultCollisionProfileNames, ReturnValue) == 0x000000, "Member 'VOblivionInitialSettings_GetDefaultCollisionProfileNames::ReturnValue' has a wrong offset!");

// Function UE5AltarPairing.VOblivionInitialSettings.GetOblivionInitialSettings
// 0x0008 (0x0008 - 0x0000)
struct VOblivionInitialSettings_GetOblivionInitialSettings final
{
public:
	const class UVOblivionInitialSettings*        ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VOblivionInitialSettings_GetOblivionInitialSettings) == 0x000008, "Wrong alignment on VOblivionInitialSettings_GetOblivionInitialSettings");
static_assert(sizeof(VOblivionInitialSettings_GetOblivionInitialSettings) == 0x000008, "Wrong size on VOblivionInitialSettings_GetOblivionInitialSettings");
static_assert(offsetof(VOblivionInitialSettings_GetOblivionInitialSettings, ReturnValue) == 0x000000, "Member 'VOblivionInitialSettings_GetOblivionInitialSettings::ReturnValue' has a wrong offset!");

// Function UE5AltarPairing.WorldSpaceConversionLibrary.GetTESWorldToUnrealWorldScale
// 0x0004 (0x0004 - 0x0000)
struct WorldSpaceConversionLibrary_GetTESWorldToUnrealWorldScale final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WorldSpaceConversionLibrary_GetTESWorldToUnrealWorldScale) == 0x000004, "Wrong alignment on WorldSpaceConversionLibrary_GetTESWorldToUnrealWorldScale");
static_assert(sizeof(WorldSpaceConversionLibrary_GetTESWorldToUnrealWorldScale) == 0x000004, "Wrong size on WorldSpaceConversionLibrary_GetTESWorldToUnrealWorldScale");
static_assert(offsetof(WorldSpaceConversionLibrary_GetTESWorldToUnrealWorldScale, ReturnValue) == 0x000000, "Member 'WorldSpaceConversionLibrary_GetTESWorldToUnrealWorldScale::ReturnValue' has a wrong offset!");

// Function UE5AltarPairing.WorldSpaceConversionLibrary.GetUnrealWorldToTESWorldScale
// 0x0004 (0x0004 - 0x0000)
struct WorldSpaceConversionLibrary_GetUnrealWorldToTESWorldScale final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WorldSpaceConversionLibrary_GetUnrealWorldToTESWorldScale) == 0x000004, "Wrong alignment on WorldSpaceConversionLibrary_GetUnrealWorldToTESWorldScale");
static_assert(sizeof(WorldSpaceConversionLibrary_GetUnrealWorldToTESWorldScale) == 0x000004, "Wrong size on WorldSpaceConversionLibrary_GetUnrealWorldToTESWorldScale");
static_assert(offsetof(WorldSpaceConversionLibrary_GetUnrealWorldToTESWorldScale, ReturnValue) == 0x000000, "Member 'WorldSpaceConversionLibrary_GetUnrealWorldToTESWorldScale::ReturnValue' has a wrong offset!");

}

