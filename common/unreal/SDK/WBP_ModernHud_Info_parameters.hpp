#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ModernHud_Info

#include "Basic.hpp"

#include "Altar_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_ModernHud_Info.WBP_ModernHud_Info_C.ExecuteUbergraph_WBP_ModernHud_Info
// 0x000C (0x000C - 0x0000)
struct WBP_ModernHud_Info_C_ExecuteUbergraph_WBP_ModernHud_Info final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_InIllegal;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsEmpty;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModernHud_Info_C_ExecuteUbergraph_WBP_ModernHud_Info) == 0x000004, "Wrong alignment on WBP_ModernHud_Info_C_ExecuteUbergraph_WBP_ModernHud_Info");
static_assert(sizeof(WBP_ModernHud_Info_C_ExecuteUbergraph_WBP_ModernHud_Info) == 0x00000C, "Wrong size on WBP_ModernHud_Info_C_ExecuteUbergraph_WBP_ModernHud_Info");
static_assert(offsetof(WBP_ModernHud_Info_C_ExecuteUbergraph_WBP_ModernHud_Info, EntryPoint) == 0x000000, "Member 'WBP_ModernHud_Info_C_ExecuteUbergraph_WBP_ModernHud_Info::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_ExecuteUbergraph_WBP_ModernHud_Info, Temp_bool_Variable) == 0x000004, "Member 'WBP_ModernHud_Info_C_ExecuteUbergraph_WBP_ModernHud_Info::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_ExecuteUbergraph_WBP_ModernHud_Info, Temp_byte_Variable) == 0x000005, "Member 'WBP_ModernHud_Info_C_ExecuteUbergraph_WBP_ModernHud_Info::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_ExecuteUbergraph_WBP_ModernHud_Info, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_ModernHud_Info_C_ExecuteUbergraph_WBP_ModernHud_Info::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_ExecuteUbergraph_WBP_ModernHud_Info, K2Node_CustomEvent_InIllegal) == 0x000007, "Member 'WBP_ModernHud_Info_C_ExecuteUbergraph_WBP_ModernHud_Info::K2Node_CustomEvent_InIllegal' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_ExecuteUbergraph_WBP_ModernHud_Info, K2Node_CustomEvent_bIsEmpty) == 0x000008, "Member 'WBP_ModernHud_Info_C_ExecuteUbergraph_WBP_ModernHud_Info::K2Node_CustomEvent_bIsEmpty' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_ExecuteUbergraph_WBP_ModernHud_Info, K2Node_Select_Default) == 0x000009, "Member 'WBP_ModernHud_Info_C_ExecuteUbergraph_WBP_ModernHud_Info::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ModernHud_Info.WBP_ModernHud_Info_C.GetAtlasIndexFromGamepadEnum
// 0x0044 (0x0044 - 0x0000)
struct WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum final
{
public:
	ELegacyXboxFloatingHintButton                 InHint;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_0;                                           // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELegacyXboxFloatingHintButton                 Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum) == 0x000004, "Wrong alignment on WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum");
static_assert(sizeof(WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum) == 0x000044, "Wrong size on WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum");
static_assert(offsetof(WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum, InHint) == 0x000000, "Member 'WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum::InHint' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum, Index_0) == 0x000004, "Member 'WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum, Temp_byte_Variable) == 0x000008, "Member 'WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum, Temp_int_Variable) == 0x00000C, "Member 'WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum, Temp_int_Variable_1) == 0x000010, "Member 'WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum, Temp_int_Variable_2) == 0x000014, "Member 'WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum, Temp_int_Variable_3) == 0x000018, "Member 'WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum, Temp_int_Variable_4) == 0x00001C, "Member 'WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum, Temp_int_Variable_5) == 0x000020, "Member 'WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum, Temp_int_Variable_6) == 0x000024, "Member 'WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum, Temp_int_Variable_7) == 0x000028, "Member 'WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum, Temp_int_Variable_8) == 0x00002C, "Member 'WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum, Temp_int_Variable_9) == 0x000030, "Member 'WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum, Temp_int_Variable_10) == 0x000034, "Member 'WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum, Temp_int_Variable_11) == 0x000038, "Member 'WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum, Temp_int_Variable_12) == 0x00003C, "Member 'WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum, K2Node_Select_Default) == 0x000040, "Member 'WBP_ModernHud_Info_C_GetAtlasIndexFromGamepadEnum::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ModernHud_Info.WBP_ModernHud_Info_C.SetIconTextColour
// 0x0058 (0x0058 - 0x0000)
struct WBP_ModernHud_Info_C_SetIconTextColour final
{
public:
	struct FLinearColor                           Colour;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_LegacyHud_InfoIcon_C*              K2Node_DynamicCast_AsWBP_Legacy_Hud_Info_Icon;     // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModernHud_Info_C_SetIconTextColour) == 0x000008, "Wrong alignment on WBP_ModernHud_Info_C_SetIconTextColour");
static_assert(sizeof(WBP_ModernHud_Info_C_SetIconTextColour) == 0x000058, "Wrong size on WBP_ModernHud_Info_C_SetIconTextColour");
static_assert(offsetof(WBP_ModernHud_Info_C_SetIconTextColour, Colour) == 0x000000, "Member 'WBP_ModernHud_Info_C_SetIconTextColour::Colour' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_SetIconTextColour, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_ModernHud_Info_C_SetIconTextColour::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_SetIconTextColour, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_ModernHud_Info_C_SetIconTextColour::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_SetIconTextColour, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_ModernHud_Info_C_SetIconTextColour::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_SetIconTextColour, CallFunc_GetAllChildren_ReturnValue) == 0x000020, "Member 'WBP_ModernHud_Info_C_SetIconTextColour::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_SetIconTextColour, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_ModernHud_Info_C_SetIconTextColour::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_SetIconTextColour, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_ModernHud_Info_C_SetIconTextColour::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_SetIconTextColour, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'WBP_ModernHud_Info_C_SetIconTextColour::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_SetIconTextColour, K2Node_DynamicCast_AsWBP_Legacy_Hud_Info_Icon) == 0x000048, "Member 'WBP_ModernHud_Info_C_SetIconTextColour::K2Node_DynamicCast_AsWBP_Legacy_Hud_Info_Icon' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_SetIconTextColour, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_ModernHud_Info_C_SetIconTextColour::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_ModernHud_Info.WBP_ModernHud_Info_C.SetIllegalColor
// 0x0038 (0x0038 - 0x0000)
struct WBP_ModernHud_Info_C_SetIllegalColor final
{
public:
	bool                                          InIsIllegal;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0004(0x0014)()
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModernHud_Info_C_SetIllegalColor) == 0x000004, "Wrong alignment on WBP_ModernHud_Info_C_SetIllegalColor");
static_assert(sizeof(WBP_ModernHud_Info_C_SetIllegalColor) == 0x000038, "Wrong size on WBP_ModernHud_Info_C_SetIllegalColor");
static_assert(offsetof(WBP_ModernHud_Info_C_SetIllegalColor, InIsIllegal) == 0x000000, "Member 'WBP_ModernHud_Info_C_SetIllegalColor::InIsIllegal' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_SetIllegalColor, Temp_bool_Variable) == 0x000001, "Member 'WBP_ModernHud_Info_C_SetIllegalColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_SetIllegalColor, Temp_bool_Variable_1) == 0x000002, "Member 'WBP_ModernHud_Info_C_SetIllegalColor::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_SetIllegalColor, K2Node_Select_Default) == 0x000004, "Member 'WBP_ModernHud_Info_C_SetIllegalColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_SetIllegalColor, K2Node_MakeStruct_LinearColor) == 0x000018, "Member 'WBP_ModernHud_Info_C_SetIllegalColor::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_SetIllegalColor, K2Node_Select_Default_1) == 0x000028, "Member 'WBP_ModernHud_Info_C_SetIllegalColor::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_ModernHud_Info.WBP_ModernHud_Info_C.ShowHide
// 0x0028 (0x0028 - 0x0000)
struct WBP_ModernHud_Info_C_ShowHide final
{
public:
	bool                                          InShow;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_1;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModernHud_Info_C_ShowHide) == 0x000008, "Wrong alignment on WBP_ModernHud_Info_C_ShowHide");
static_assert(sizeof(WBP_ModernHud_Info_C_ShowHide) == 0x000028, "Wrong size on WBP_ModernHud_Info_C_ShowHide");
static_assert(offsetof(WBP_ModernHud_Info_C_ShowHide, InShow) == 0x000000, "Member 'WBP_ModernHud_Info_C_ShowHide::InShow' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_ShowHide, Temp_bool_Variable) == 0x000001, "Member 'WBP_ModernHud_Info_C_ShowHide::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_ShowHide, Temp_bool_Variable_1) == 0x000002, "Member 'WBP_ModernHud_Info_C_ShowHide::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_ShowHide, K2Node_Select_Default) == 0x000008, "Member 'WBP_ModernHud_Info_C_ShowHide::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_ShowHide, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000010, "Member 'WBP_ModernHud_Info_C_ShowHide::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_ShowHide, K2Node_Select_Default_1) == 0x000018, "Member 'WBP_ModernHud_Info_C_ShowHide::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_ShowHide, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'WBP_ModernHud_Info_C_ShowHide::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_ModernHud_Info.WBP_ModernHud_Info_C.Update Action Properties
// 0x0020 (0x0020 - 0x0000)
struct WBP_ModernHud_Info_C_Update_Action_Properties final
{
public:
	struct FLegacyActionProperties                InAction;                                          // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_ModernHud_Info_C_Update_Action_Properties) == 0x000008, "Wrong alignment on WBP_ModernHud_Info_C_Update_Action_Properties");
static_assert(sizeof(WBP_ModernHud_Info_C_Update_Action_Properties) == 0x000020, "Wrong size on WBP_ModernHud_Info_C_Update_Action_Properties");
static_assert(offsetof(WBP_ModernHud_Info_C_Update_Action_Properties, InAction) == 0x000000, "Member 'WBP_ModernHud_Info_C_Update_Action_Properties::InAction' has a wrong offset!");

// Function WBP_ModernHud_Info.WBP_ModernHud_Info_C.UpdateAction
// 0x0028 (0x0028 - 0x0000)
struct WBP_ModernHud_Info_C_UpdateAction final
{
public:
	struct FLegacyActionProperties                InAction;                                          // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModernHud_Info_C_UpdateAction) == 0x000008, "Wrong alignment on WBP_ModernHud_Info_C_UpdateAction");
static_assert(sizeof(WBP_ModernHud_Info_C_UpdateAction) == 0x000028, "Wrong size on WBP_ModernHud_Info_C_UpdateAction");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateAction, InAction) == 0x000000, "Member 'WBP_ModernHud_Info_C_UpdateAction::InAction' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateAction, CallFunc_TextIsEmpty_ReturnValue) == 0x000020, "Member 'WBP_ModernHud_Info_C_UpdateAction::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function WBP_ModernHud_Info.WBP_ModernHud_Info_C.UpdateEmpty
// 0x0001 (0x0001 - 0x0000)
struct WBP_ModernHud_Info_C_UpdateEmpty final
{
public:
	bool                                          bIsEmpty;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModernHud_Info_C_UpdateEmpty) == 0x000001, "Wrong alignment on WBP_ModernHud_Info_C_UpdateEmpty");
static_assert(sizeof(WBP_ModernHud_Info_C_UpdateEmpty) == 0x000001, "Wrong size on WBP_ModernHud_Info_C_UpdateEmpty");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateEmpty, bIsEmpty) == 0x000000, "Member 'WBP_ModernHud_Info_C_UpdateEmpty::bIsEmpty' has a wrong offset!");

// Function WBP_ModernHud_Info.WBP_ModernHud_Info_C.UpdateIconProperties
// 0x0040 (0x0040 - 0x0000)
struct WBP_ModernHud_Info_C_UpdateIconProperties final
{
public:
	struct FLegacyIconProperties                  InProperties;                                      // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UWBP_ModernHud_InfoIcon_C*              Local_Widget;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ModernHud_InfoIcon_C*              CallFunc_GetIconWidget_Widget;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModernHud_Info_C_UpdateIconProperties) == 0x000008, "Wrong alignment on WBP_ModernHud_Info_C_UpdateIconProperties");
static_assert(sizeof(WBP_ModernHud_Info_C_UpdateIconProperties) == 0x000040, "Wrong size on WBP_ModernHud_Info_C_UpdateIconProperties");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateIconProperties, InProperties) == 0x000000, "Member 'WBP_ModernHud_Info_C_UpdateIconProperties::InProperties' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateIconProperties, Local_Widget) == 0x000028, "Member 'WBP_ModernHud_Info_C_UpdateIconProperties::Local_Widget' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateIconProperties, Temp_byte_Variable) == 0x000030, "Member 'WBP_ModernHud_Info_C_UpdateIconProperties::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateIconProperties, Temp_byte_Variable_1) == 0x000031, "Member 'WBP_ModernHud_Info_C_UpdateIconProperties::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateIconProperties, Temp_bool_Variable) == 0x000032, "Member 'WBP_ModernHud_Info_C_UpdateIconProperties::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateIconProperties, K2Node_Select_Default) == 0x000033, "Member 'WBP_ModernHud_Info_C_UpdateIconProperties::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateIconProperties, CallFunc_GetIconWidget_Widget) == 0x000038, "Member 'WBP_ModernHud_Info_C_UpdateIconProperties::CallFunc_GetIconWidget_Widget' has a wrong offset!");

// Function WBP_ModernHud_Info.WBP_ModernHud_Info_C.UpdateIconsProperties
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_ModernHud_Info_C_UpdateIconsProperties final
{
public:
	TMap<ELegacyHudInfoIcon, struct FLegacyIconProperties> InIcons;                                  // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ELegacyHudInfoIcon>                    CallFunc_Map_Keys_Keys;                            // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Array_Get_Item;                           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77[0x1];                                       // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLegacyIconProperties                  CallFunc_Map_Find_Value;                           // 0x0078(0x0028)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModernHud_Info_C_UpdateIconsProperties) == 0x000008, "Wrong alignment on WBP_ModernHud_Info_C_UpdateIconsProperties");
static_assert(sizeof(WBP_ModernHud_Info_C_UpdateIconsProperties) == 0x0000A8, "Wrong size on WBP_ModernHud_Info_C_UpdateIconsProperties");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateIconsProperties, InIcons) == 0x000000, "Member 'WBP_ModernHud_Info_C_UpdateIconsProperties::InIcons' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateIconsProperties, Temp_int_Array_Index_Variable) == 0x000050, "Member 'WBP_ModernHud_Info_C_UpdateIconsProperties::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateIconsProperties, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'WBP_ModernHud_Info_C_UpdateIconsProperties::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateIconsProperties, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'WBP_ModernHud_Info_C_UpdateIconsProperties::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateIconsProperties, CallFunc_Map_Keys_Keys) == 0x000060, "Member 'WBP_ModernHud_Info_C_UpdateIconsProperties::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateIconsProperties, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'WBP_ModernHud_Info_C_UpdateIconsProperties::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateIconsProperties, CallFunc_Array_Get_Item) == 0x000074, "Member 'WBP_ModernHud_Info_C_UpdateIconsProperties::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateIconsProperties, CallFunc_Less_IntInt_ReturnValue) == 0x000075, "Member 'WBP_ModernHud_Info_C_UpdateIconsProperties::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateIconsProperties, CallFunc_GetValidValue_ReturnValue) == 0x000076, "Member 'WBP_ModernHud_Info_C_UpdateIconsProperties::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateIconsProperties, CallFunc_Map_Find_Value) == 0x000078, "Member 'WBP_ModernHud_Info_C_UpdateIconsProperties::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateIconsProperties, CallFunc_Map_Find_ReturnValue) == 0x0000A0, "Member 'WBP_ModernHud_Info_C_UpdateIconsProperties::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function WBP_ModernHud_Info.WBP_ModernHud_Info_C.UpdateIsIllegal
// 0x0001 (0x0001 - 0x0000)
struct WBP_ModernHud_Info_C_UpdateIsIllegal final
{
public:
	bool                                          InIllegal;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModernHud_Info_C_UpdateIsIllegal) == 0x000001, "Wrong alignment on WBP_ModernHud_Info_C_UpdateIsIllegal");
static_assert(sizeof(WBP_ModernHud_Info_C_UpdateIsIllegal) == 0x000001, "Wrong size on WBP_ModernHud_Info_C_UpdateIsIllegal");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateIsIllegal, InIllegal) == 0x000000, "Member 'WBP_ModernHud_Info_C_UpdateIsIllegal::InIllegal' has a wrong offset!");

// Function WBP_ModernHud_Info.WBP_ModernHud_Info_C.UpdateIsTelekinesisActive
// 0x0014 (0x0014 - 0x0000)
struct WBP_ModernHud_Info_C_UpdateIsTelekinesisActive final
{
public:
	bool                                          Inactive;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModernHud_Info_C_UpdateIsTelekinesisActive) == 0x000004, "Wrong alignment on WBP_ModernHud_Info_C_UpdateIsTelekinesisActive");
static_assert(sizeof(WBP_ModernHud_Info_C_UpdateIsTelekinesisActive) == 0x000014, "Wrong size on WBP_ModernHud_Info_C_UpdateIsTelekinesisActive");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateIsTelekinesisActive, Inactive) == 0x000000, "Member 'WBP_ModernHud_Info_C_UpdateIsTelekinesisActive::Inactive' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateIsTelekinesisActive, Temp_bool_Variable) == 0x000001, "Member 'WBP_ModernHud_Info_C_UpdateIsTelekinesisActive::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateIsTelekinesisActive, K2Node_Select_Default) == 0x000004, "Member 'WBP_ModernHud_Info_C_UpdateIsTelekinesisActive::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ModernHud_Info.WBP_ModernHud_Info_C.UpdateTargedItemName
// 0x0020 (0x0020 - 0x0000)
struct WBP_ModernHud_Info_C_UpdateTargedItemName final
{
public:
	class FText                                   InName;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasContent_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModernHud_Info_C_UpdateTargedItemName) == 0x000008, "Wrong alignment on WBP_ModernHud_Info_C_UpdateTargedItemName");
static_assert(sizeof(WBP_ModernHud_Info_C_UpdateTargedItemName) == 0x000020, "Wrong size on WBP_ModernHud_Info_C_UpdateTargedItemName");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateTargedItemName, InName) == 0x000000, "Member 'WBP_ModernHud_Info_C_UpdateTargedItemName::InName' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateTargedItemName, Temp_bool_Variable) == 0x000018, "Member 'WBP_ModernHud_Info_C_UpdateTargedItemName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateTargedItemName, Temp_byte_Variable) == 0x000019, "Member 'WBP_ModernHud_Info_C_UpdateTargedItemName::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateTargedItemName, Temp_byte_Variable_1) == 0x00001A, "Member 'WBP_ModernHud_Info_C_UpdateTargedItemName::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateTargedItemName, CallFunc_TextIsEmpty_ReturnValue) == 0x00001B, "Member 'WBP_ModernHud_Info_C_UpdateTargedItemName::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateTargedItemName, CallFunc_HasContent_ReturnValue) == 0x00001C, "Member 'WBP_ModernHud_Info_C_UpdateTargedItemName::CallFunc_HasContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateTargedItemName, K2Node_Select_Default) == 0x00001D, "Member 'WBP_ModernHud_Info_C_UpdateTargedItemName::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ModernHud_Info.WBP_ModernHud_Info_C.UpdateTargetedDoorDestinationName
// 0x0140 (0x0140 - 0x0000)
struct WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName final
{
public:
	class FText                                   InName;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTargetedItemName_ReturnValue;          // 0x0020(0x0018)(ConstParm)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasContent_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTargetedItemName_ReturnValue_1;        // 0x0040(0x0018)(ConstParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0050)(HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTargetedDoorDestinationName_ReturnValue; // 0x00B0(0x0018)(ConstParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0128(0x0018)()
};
static_assert(alignof(WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName) == 0x000008, "Wrong alignment on WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName");
static_assert(sizeof(WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName) == 0x000140, "Wrong size on WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName, InName) == 0x000000, "Member 'WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName::InName' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName, Temp_byte_Variable) == 0x000018, "Member 'WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName, Temp_byte_Variable_1) == 0x000019, "Member 'WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName, CallFunc_GetTargetedItemName_ReturnValue) == 0x000020, "Member 'WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName::CallFunc_GetTargetedItemName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName, Temp_bool_Variable) == 0x000038, "Member 'WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName, CallFunc_TextIsEmpty_ReturnValue) == 0x000039, "Member 'WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName, CallFunc_HasContent_ReturnValue) == 0x00003A, "Member 'WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName::CallFunc_HasContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName, CallFunc_GetTargetedItemName_ReturnValue_1) == 0x000040, "Member 'WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName::CallFunc_GetTargetedItemName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName, K2Node_Select_Default) == 0x0000A8, "Member 'WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName, CallFunc_GetTargetedDoorDestinationName_ReturnValue) == 0x0000B0, "Member 'WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName::CallFunc_GetTargetedDoorDestinationName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C8, "Member 'WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName, K2Node_MakeArray_Array) == 0x000118, "Member 'WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName, CallFunc_Format_ReturnValue) == 0x000128, "Member 'WBP_ModernHud_Info_C_UpdateTargetedDoorDestinationName::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_ModernHud_Info.WBP_ModernHud_Info_C.GetIconWidget
// 0x0018 (0x0018 - 0x0000)
struct WBP_ModernHud_Info_C_GetIconWidget final
{
public:
	uint8                                         Icon;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ModernHud_InfoIcon_C*              Widget;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModernHud_Info_C_GetIconWidget) == 0x000008, "Wrong alignment on WBP_ModernHud_Info_C_GetIconWidget");
static_assert(sizeof(WBP_ModernHud_Info_C_GetIconWidget) == 0x000018, "Wrong size on WBP_ModernHud_Info_C_GetIconWidget");
static_assert(offsetof(WBP_ModernHud_Info_C_GetIconWidget, Icon) == 0x000000, "Member 'WBP_ModernHud_Info_C_GetIconWidget::Icon' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_GetIconWidget, Widget) == 0x000008, "Member 'WBP_ModernHud_Info_C_GetIconWidget::Widget' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_GetIconWidget, CallFunc_GetValidValue_ReturnValue) == 0x000010, "Member 'WBP_ModernHud_Info_C_GetIconWidget::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_Info_C_GetIconWidget, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'WBP_ModernHud_Info_C_GetIconWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

