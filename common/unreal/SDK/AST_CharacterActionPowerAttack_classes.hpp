#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AST_CharacterActionPowerAttack

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Altar_structs.hpp"
#include "Altar_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass AST_CharacterActionPowerAttack.AST_CharacterActionPowerAttack_C
// 0x0020 (0x00C8 - 0x00A8)
class UAST_CharacterActionPowerAttack_C final : public UVAltarActionState
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          PreviousPhysicRotation;                            // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBehavior_AttackBehaviorBase_C*         Attack_Behavior;                                   // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Power_Attack_Tag;                                  // 0x00C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AST_CharacterActionPowerAttack(int32 EntryPoint);
	void GetPowerAttackType(EVActionType* PowerAttackType);
	void OnEnded_B8BE568F48313987C7309782B6F9E323();
	void OnEntered();
	void OnExited();
	void OnStateUpdate(float DeltaTime);
	void UpdatePowerAttackTag();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AST_CharacterActionPowerAttack_C">();
	}
	static class UAST_CharacterActionPowerAttack_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAST_CharacterActionPowerAttack_C>();
	}
};
static_assert(alignof(UAST_CharacterActionPowerAttack_C) == 0x000008, "Wrong alignment on UAST_CharacterActionPowerAttack_C");
static_assert(sizeof(UAST_CharacterActionPowerAttack_C) == 0x0000C8, "Wrong size on UAST_CharacterActionPowerAttack_C");
static_assert(offsetof(UAST_CharacterActionPowerAttack_C, UberGraphFrame) == 0x0000A8, "Member 'UAST_CharacterActionPowerAttack_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAST_CharacterActionPowerAttack_C, PreviousPhysicRotation) == 0x0000B0, "Member 'UAST_CharacterActionPowerAttack_C::PreviousPhysicRotation' has a wrong offset!");
static_assert(offsetof(UAST_CharacterActionPowerAttack_C, Attack_Behavior) == 0x0000B8, "Member 'UAST_CharacterActionPowerAttack_C::Attack_Behavior' has a wrong offset!");
static_assert(offsetof(UAST_CharacterActionPowerAttack_C, Power_Attack_Tag) == 0x0000C0, "Member 'UAST_CharacterActionPowerAttack_C::Power_Attack_Tag' has a wrong offset!");

}

