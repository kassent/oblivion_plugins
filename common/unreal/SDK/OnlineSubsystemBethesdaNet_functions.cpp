#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OnlineSubsystemBethesdaNet

#include "Basic.hpp"

#include "OnlineSubsystemBethesdaNet_classes.hpp"
#include "OnlineSubsystemBethesdaNet_parameters.hpp"


namespace SDK
{

// Function OnlineSubsystemBethesdaNet.BethesdaNetEulaProcessCallProxy.AcceptEulaAndMoveNextForPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   EulaDocId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBethesdaNetEulaProcessCallProxy* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBethesdaNetEulaProcessCallProxy* UBethesdaNetEulaProcessCallProxy::AcceptEulaAndMoveNextForPlayer(class UObject* WorldContextObject, class APlayerController* PlayerController, int32 EulaDocId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BethesdaNetEulaProcessCallProxy", "AcceptEulaAndMoveNextForPlayer");

	Params::BethesdaNetEulaProcessCallProxy_AcceptEulaAndMoveNextForPlayer Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerController = PlayerController;
	Parms.EulaDocId = EulaDocId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetEulaProcessCallProxy.GetNextEulaForGame
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBethesdaNetEulaProcessCallProxy* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBethesdaNetEulaProcessCallProxy* UBethesdaNetEulaProcessCallProxy::GetNextEulaForGame(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BethesdaNetEulaProcessCallProxy", "GetNextEulaForGame");

	Params::BethesdaNetEulaProcessCallProxy_GetNextEulaForGame Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetEulaProcessCallProxy.StartEulaProcessForGame
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBethesdaNetEulaProcessCallProxy* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBethesdaNetEulaProcessCallProxy* UBethesdaNetEulaProcessCallProxy::StartEulaProcessForGame(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BethesdaNetEulaProcessCallProxy", "StartEulaProcessForGame");

	Params::BethesdaNetEulaProcessCallProxy_StartEulaProcessForGame Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetEulaProcessCallProxy.StartEulaProcessForPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBethesdaNetEulaProcessCallProxy* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBethesdaNetEulaProcessCallProxy* UBethesdaNetEulaProcessCallProxy::StartEulaProcessForPlayer(class UObject* WorldContextObject, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BethesdaNetEulaProcessCallProxy", "StartEulaProcessForPlayer");

	Params::BethesdaNetEulaProcessCallProxy_StartEulaProcessForPlayer Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetFetchFirstPartyEmailCallProxy.FetchFirstPartyEmail
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBethesdaNetFetchFirstPartyEmailCallProxy*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBethesdaNetFetchFirstPartyEmailCallProxy* UBethesdaNetFetchFirstPartyEmailCallProxy::FetchFirstPartyEmail(class UObject* WorldContextObject, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BethesdaNetFetchFirstPartyEmailCallProxy", "FetchFirstPartyEmail");

	Params::BethesdaNetFetchFirstPartyEmailCallProxy_FetchFirstPartyEmail Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetLinkAccountCallProxy.LinkAccounts
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             FirstPartySubsystemName                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBethesdaNetLinkAccountCallProxy* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBethesdaNetLinkAccountCallProxy* UBethesdaNetLinkAccountCallProxy::LinkAccounts(class UObject* WorldContextObject, class APlayerController* PlayerController, class FName FirstPartySubsystemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BethesdaNetLinkAccountCallProxy", "LinkAccounts");

	Params::BethesdaNetLinkAccountCallProxy_LinkAccounts Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerController = PlayerController;
	Parms.FirstPartySubsystemName = FirstPartySubsystemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetNewGameSessionCallProxy.StartNewGameSession
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    PersistentUserId                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBethesdaNetNewGameSessionCallProxy*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBethesdaNetNewGameSessionCallProxy* UBethesdaNetNewGameSessionCallProxy::StartNewGameSession(class UObject* WorldContextObject, const class FString& PersistentUserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BethesdaNetNewGameSessionCallProxy", "StartNewGameSession");

	Params::BethesdaNetNewGameSessionCallProxy_StartNewGameSession Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PersistentUserId = std::move(PersistentUserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetQuickAccountCallProxy.QuickAccountCreate
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    EmailAddress                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBethesdaNetQuickAccountCallProxy*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBethesdaNetQuickAccountCallProxy* UBethesdaNetQuickAccountCallProxy::QuickAccountCreate(class UObject* WorldContextObject, class APlayerController* PlayerController, const class FString& EmailAddress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BethesdaNetQuickAccountCallProxy", "QuickAccountCreate");

	Params::BethesdaNetQuickAccountCallProxy_QuickAccountCreate Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerController = PlayerController;
	Parms.EmailAddress = std::move(EmailAddress);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.BeginAccountFlow
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InLocalUserNum                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         InLatentInfo                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EBNetUIQuickAccountFlow*                OutResult                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText*                            OutError                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// int32                                   InZOrder                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABethesdaNetUIQuickAccountFlow::BeginAccountFlow(int32 InLocalUserNum, const struct FLatentActionInfo& InLatentInfo, EBNetUIQuickAccountFlow* OutResult, class FText* OutError, int32 InZOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "BeginAccountFlow");

	Params::BethesdaNetUIQuickAccountFlow_BeginAccountFlow Parms{};

	Parms.InLocalUserNum = InLocalUserNum;
	Parms.InLatentInfo = std::move(InLatentInfo);
	Parms.InZOrder = InZOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResult != nullptr)
		*OutResult = Parms.OutResult;

	if (OutError != nullptr)
		*OutError = std::move(Parms.OutError);
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.BeginAccountFlowLatentCallback
// (Final, Native, Private, HasOutParams)
// Parameters:
// int32                                   InLocalUserNum                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBNetUIQuickAccountFlow                 InResult                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      InError                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ABethesdaNetUIQuickAccountFlow::BeginAccountFlowLatentCallback(int32 InLocalUserNum, EBNetUIQuickAccountFlow InResult, const class FText& InError)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "BeginAccountFlowLatentCallback");

	Params::BethesdaNetUIQuickAccountFlow_BeginAccountFlowLatentCallback Parms{};

	Parms.InLocalUserNum = InLocalUserNum;
	Parms.InResult = InResult;
	Parms.InError = std::move(InError);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnHelpScreenAccountHelpButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIQuickAccountFlow::OnHelpScreenAccountHelpButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnHelpScreenAccountHelpButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnHelpScreenBackButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIQuickAccountFlow::OnHelpScreenBackButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnHelpScreenBackButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnHelpScreenGeneralHelpButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIQuickAccountFlow::OnHelpScreenGeneralHelpButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnHelpScreenGeneralHelpButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnLoginScreenLoginButtonClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// const class FText&                      UserName                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FText&                      Password                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ABethesdaNetUIQuickAccountFlow::OnLoginScreenLoginButtonClicked(const class FText& UserName, const class FText& Password)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnLoginScreenLoginButtonClicked");

	Params::BethesdaNetUIQuickAccountFlow_OnLoginScreenLoginButtonClicked Parms{};

	Parms.UserName = std::move(UserName);
	Parms.Password = std::move(Password);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnLoginScreenOnAccountHelpButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIQuickAccountFlow::OnLoginScreenOnAccountHelpButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnLoginScreenOnAccountHelpButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnLoginScreenOnCancelButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIQuickAccountFlow::OnLoginScreenOnCancelButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnLoginScreenOnCancelButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnLoginScreenOnCreateAccountButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIQuickAccountFlow::OnLoginScreenOnCreateAccountButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnLoginScreenOnCreateAccountButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnLoginScreenViewAgreementsButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIQuickAccountFlow::OnLoginScreenViewAgreementsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnLoginScreenViewAgreementsButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnManagementScreenAccountManageButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIQuickAccountFlow::OnManagementScreenAccountManageButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnManagementScreenAccountManageButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnManagementScreenBackButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIQuickAccountFlow::OnManagementScreenBackButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnManagementScreenBackButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnManagementScreenHelpButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIQuickAccountFlow::OnManagementScreenHelpButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnManagementScreenHelpButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnManagementScreenViewAgreementsButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIQuickAccountFlow::OnManagementScreenViewAgreementsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnManagementScreenViewAgreementsButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnQuickAccountScreenCancelButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIQuickAccountFlow::OnQuickAccountScreenCancelButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnQuickAccountScreenCancelButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnQuickAccountScreenCreateAccountButtonClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// const class FText&                      InEmail                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ABethesdaNetUIQuickAccountFlow::OnQuickAccountScreenCreateAccountButtonClicked(const class FText& InEmail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnQuickAccountScreenCreateAccountButtonClicked");

	Params::BethesdaNetUIQuickAccountFlow_OnQuickAccountScreenCreateAccountButtonClicked Parms{};

	Parms.InEmail = std::move(InEmail);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnQuickAccountScreenLoginButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIQuickAccountFlow::OnQuickAccountScreenLoginButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnQuickAccountScreenLoginButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnQuickAccountScreenViewAgreementsButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIQuickAccountFlow::OnQuickAccountScreenViewAgreementsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnQuickAccountScreenViewAgreementsButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnScreenAgreementsCancelButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIQuickAccountFlow::OnScreenAgreementsCancelButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnScreenAgreementsCancelButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnScreenAgreementsContinueButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIQuickAccountFlow::OnScreenAgreementsContinueButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnScreenAgreementsContinueButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnScreenErrorBackButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIQuickAccountFlow::OnScreenErrorBackButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnScreenErrorBackButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnScreenErrorCancelButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIQuickAccountFlow::OnScreenErrorCancelButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnScreenErrorCancelButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnScreenExistsAccountHelpButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIQuickAccountFlow::OnScreenExistsAccountHelpButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnScreenExistsAccountHelpButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnScreenExistsAgreementsButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIQuickAccountFlow::OnScreenExistsAgreementsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnScreenExistsAgreementsButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnScreenExistsCancelButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIQuickAccountFlow::OnScreenExistsCancelButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnScreenExistsCancelButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnScreenExistsLoginButtonClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// const class FText&                      UserName                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FText&                      Password                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ABethesdaNetUIQuickAccountFlow::OnScreenExistsLoginButtonClicked(const class FText& UserName, const class FText& Password)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnScreenExistsLoginButtonClicked");

	Params::BethesdaNetUIQuickAccountFlow_OnScreenExistsLoginButtonClicked Parms{};

	Parms.UserName = std::move(UserName);
	Parms.Password = std::move(Password);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnSuccessScreenOkButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIQuickAccountFlow::OnSuccessScreenOkButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIQuickAccountFlow", "OnSuccessScreenOkButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenBase.HandleExclusiveRightStickInput
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBethesdaNetUIScreenBase::HandleExclusiveRightStickInput(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenBase", "HandleExclusiveRightStickInput");

	Params::BethesdaNetUIScreenBase_HandleExclusiveRightStickInput Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenBase.OnScreenAdded
// (Event, Public, BlueprintEvent)

void UBethesdaNetUIScreenBase::OnScreenAdded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenBase", "OnScreenAdded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenBase.OnScreenCancel
// (BlueprintCosmetic, Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FKeyEvent&                 InKeyEvent                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEventReply UBethesdaNetUIScreenBase::OnScreenCancel(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenBase", "OnScreenCancel");

	Params::BethesdaNetUIScreenBase_OnScreenCancel Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenBase.OnScreenConfirm
// (BlueprintCosmetic, Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FKeyEvent&                 InKeyEvent                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEventReply UBethesdaNetUIScreenBase::OnScreenConfirm(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenBase", "OnScreenConfirm");

	Params::BethesdaNetUIScreenBase_OnScreenConfirm Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenBase.OnScreenGainFocus
// (Native, Event, Public, BlueprintEvent)

void UBethesdaNetUIScreenBase::OnScreenGainFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenBase", "OnScreenGainFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenBase.OnScreenLoseFocus
// (Native, Event, Public, BlueprintEvent)

void UBethesdaNetUIScreenBase::OnScreenLoseFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenBase", "OnScreenLoseFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenBase.OnScreenRemoved
// (Event, Public, BlueprintEvent)

void UBethesdaNetUIScreenBase::OnScreenRemoved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenBase", "OnScreenRemoved");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenAccountExists.AccountHelpButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UBethesdaNetUIScreenAccountExists::AccountHelpButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenAccountExists", "AccountHelpButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenAccountExists.CancelButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UBethesdaNetUIScreenAccountExists::CancelButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenAccountExists", "CancelButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenAccountExists.LoginButtonClicked
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      UserName                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FText&                      Password                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBethesdaNetUIScreenAccountExists::LoginButtonClicked(const class FText& UserName, const class FText& Password)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenAccountExists", "LoginButtonClicked");

	Params::BethesdaNetUIScreenAccountExists_LoginButtonClicked Parms{};

	Parms.UserName = std::move(UserName);
	Parms.Password = std::move(Password);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenAccountExists.SetError
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      InErrorMessage                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBethesdaNetUIScreenAccountExists::SetError(const class FText& InErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenAccountExists", "SetError");

	Params::BethesdaNetUIScreenAccountExists_SetError Parms{};

	Parms.InErrorMessage = std::move(InErrorMessage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenAccountExists.ViewAgreementsButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UBethesdaNetUIScreenAccountExists::ViewAgreementsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenAccountExists", "ViewAgreementsButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenAgreements.CancelButtonClicked
// (Final, Native, Private, BlueprintCallable)

void UBethesdaNetUIScreenAgreements::CancelButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenAgreements", "CancelButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenAgreements.ContinueButtonClicked
// (Final, Native, Private, BlueprintCallable)

void UBethesdaNetUIScreenAgreements::ContinueButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenAgreements", "ContinueButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenAgreements.HideSpinner
// (Event, Public, BlueprintEvent)

void UBethesdaNetUIScreenAgreements::HideSpinner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenAgreements", "HideSpinner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenAgreements.SetInUpdatedMode
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInUpdatedMode                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBethesdaNetUIScreenAgreements::SetInUpdatedMode(bool bInUpdatedMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenAgreements", "SetInUpdatedMode");

	Params::BethesdaNetUIScreenAgreements_SetInUpdatedMode Parms{};

	Parms.bInUpdatedMode = bInUpdatedMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenAgreements.SetLegalText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      InLegalText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bInPrivacyPolicy                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBethesdaNetUIScreenAgreements::SetLegalText(const class FText& InLegalText, bool bInPrivacyPolicy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenAgreements", "SetLegalText");

	Params::BethesdaNetUIScreenAgreements_SetLegalText Parms{};

	Parms.InLegalText = std::move(InLegalText);
	Parms.bInPrivacyPolicy = bInPrivacyPolicy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenAgreements.ShowSpinner
// (Event, Public, BlueprintEvent)

void UBethesdaNetUIScreenAgreements::ShowSpinner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenAgreements", "ShowSpinner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenAgreements.IsInUpdatedMode
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBethesdaNetUIScreenAgreements::IsInUpdatedMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenAgreements", "IsInUpdatedMode");

	Params::BethesdaNetUIScreenAgreements_IsInUpdatedMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenAgreements.IsSpinning
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBethesdaNetUIScreenAgreements::IsSpinning() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenAgreements", "IsSpinning");

	Params::BethesdaNetUIScreenAgreements_IsSpinning Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenError.BackButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UBethesdaNetUIScreenError::BackButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenError", "BackButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenError.CancelButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UBethesdaNetUIScreenError::CancelButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenError", "CancelButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenError.SetConnectionError
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      InTitleText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FText&                      InMessageText                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBethesdaNetUIScreenError::SetConnectionError(const class FText& InTitleText, const class FText& InMessageText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenError", "SetConnectionError");

	Params::BethesdaNetUIScreenError_SetConnectionError Parms{};

	Parms.InTitleText = std::move(InTitleText);
	Parms.InMessageText = std::move(InMessageText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenError.SetError
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      InTitleText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FText&                      InMessageText                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    InErrorValue                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBethesdaNetUIScreenError::SetError(const class FText& InTitleText, const class FText& InMessageText, const class FString& InErrorValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenError", "SetError");

	Params::BethesdaNetUIScreenError_SetError Parms{};

	Parms.InTitleText = std::move(InTitleText);
	Parms.InMessageText = std::move(InMessageText);
	Parms.InErrorValue = std::move(InErrorValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenHelp.AccountHelpButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UBethesdaNetUIScreenHelp::AccountHelpButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenHelp", "AccountHelpButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenHelp.BackButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UBethesdaNetUIScreenHelp::BackButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenHelp", "BackButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenHelp.GeneralHelpButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UBethesdaNetUIScreenHelp::GeneralHelpButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenHelp", "GeneralHelpButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenLogin.AccountHelpButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UBethesdaNetUIScreenLogin::AccountHelpButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenLogin", "AccountHelpButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenLogin.CancelButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UBethesdaNetUIScreenLogin::CancelButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenLogin", "CancelButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenLogin.CreateAccountButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UBethesdaNetUIScreenLogin::CreateAccountButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenLogin", "CreateAccountButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenLogin.LoginButtonClicked
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      UserName                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FText&                      Password                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBethesdaNetUIScreenLogin::LoginButtonClicked(const class FText& UserName, const class FText& Password)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenLogin", "LoginButtonClicked");

	Params::BethesdaNetUIScreenLogin_LoginButtonClicked Parms{};

	Parms.UserName = std::move(UserName);
	Parms.Password = std::move(Password);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenLogin.SetError
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      InError                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBethesdaNetUIScreenLogin::SetError(const class FText& InError)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenLogin", "SetError");

	Params::BethesdaNetUIScreenLogin_SetError Parms{};

	Parms.InError = std::move(InError);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenLogin.ViewAgreementsButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UBethesdaNetUIScreenLogin::ViewAgreementsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenLogin", "ViewAgreementsButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenManagement.AccountManageButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UBethesdaNetUIScreenManagement::AccountManageButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenManagement", "AccountManageButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenManagement.BackButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UBethesdaNetUIScreenManagement::BackButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenManagement", "BackButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenManagement.HelpButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UBethesdaNetUIScreenManagement::HelpButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenManagement", "HelpButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenManagement.SetUserEmailAddress
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      InEmailAddress                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBethesdaNetUIScreenManagement::SetUserEmailAddress(const class FText& InEmailAddress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenManagement", "SetUserEmailAddress");

	Params::BethesdaNetUIScreenManagement_SetUserEmailAddress Parms{};

	Parms.InEmailAddress = std::move(InEmailAddress);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenManagement.ViewAgreementsButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UBethesdaNetUIScreenManagement::ViewAgreementsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenManagement", "ViewAgreementsButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenQuickAccount.CancelButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UBethesdaNetUIScreenQuickAccount::CancelButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenQuickAccount", "CancelButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenQuickAccount.CreateAccountButtonClicked
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      InEmail                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBethesdaNetUIScreenQuickAccount::CreateAccountButtonClicked(const class FText& InEmail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenQuickAccount", "CreateAccountButtonClicked");

	Params::BethesdaNetUIScreenQuickAccount_CreateAccountButtonClicked Parms{};

	Parms.InEmail = std::move(InEmail);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenQuickAccount.LoginButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UBethesdaNetUIScreenQuickAccount::LoginButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenQuickAccount", "LoginButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenQuickAccount.SetFirstPartyEmail
// (Event, Public, BlueprintEvent)
// Parameters:
// const class FString&                    InEmail                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBethesdaNetUIScreenQuickAccount::SetFirstPartyEmail(const class FString& InEmail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenQuickAccount", "SetFirstPartyEmail");

	Params::BethesdaNetUIScreenQuickAccount_SetFirstPartyEmail Parms{};

	Parms.InEmail = std::move(InEmail);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenQuickAccount.ShowInvalidEmail
// (Event, Public, BlueprintEvent)

void UBethesdaNetUIScreenQuickAccount::ShowInvalidEmail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenQuickAccount", "ShowInvalidEmail");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenQuickAccount.ViewAgreementsButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UBethesdaNetUIScreenQuickAccount::ViewAgreementsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenQuickAccount", "ViewAgreementsButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenSuccess.OkButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UBethesdaNetUIScreenSuccess::OkButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIScreenSuccess", "OkButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIUserManagementFlow.BeginManagementFlow
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InLocalUserNum                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         InLatentInfo                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EBNetUIManagementFlow*                  OutResult                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText*                            OutError                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// int32                                   InZOrder                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABethesdaNetUIUserManagementFlow::BeginManagementFlow(int32 InLocalUserNum, const struct FLatentActionInfo& InLatentInfo, EBNetUIManagementFlow* OutResult, class FText* OutError, int32 InZOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIUserManagementFlow", "BeginManagementFlow");

	Params::BethesdaNetUIUserManagementFlow_BeginManagementFlow Parms{};

	Parms.InLocalUserNum = InLocalUserNum;
	Parms.InLatentInfo = std::move(InLatentInfo);
	Parms.InZOrder = InZOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResult != nullptr)
		*OutResult = Parms.OutResult;

	if (OutError != nullptr)
		*OutError = std::move(Parms.OutError);
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIUserManagementFlow.BeginManagementFlowLatentCallback
// (Final, Native, Private, HasOutParams)
// Parameters:
// int32                                   InLocalUserNum                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBNetUIManagementFlow                   InResult                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      InError                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ABethesdaNetUIUserManagementFlow::BeginManagementFlowLatentCallback(int32 InLocalUserNum, EBNetUIManagementFlow InResult, const class FText& InError)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIUserManagementFlow", "BeginManagementFlowLatentCallback");

	Params::BethesdaNetUIUserManagementFlow_BeginManagementFlowLatentCallback Parms{};

	Parms.InLocalUserNum = InLocalUserNum;
	Parms.InResult = InResult;
	Parms.InError = std::move(InError);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIUserManagementFlow.OnManagementScreenAccountManageButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIUserManagementFlow::OnManagementScreenAccountManageButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIUserManagementFlow", "OnManagementScreenAccountManageButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIUserManagementFlow.OnManagementScreenBackButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIUserManagementFlow::OnManagementScreenBackButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIUserManagementFlow", "OnManagementScreenBackButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIUserManagementFlow.OnManagementScreenHelpButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIUserManagementFlow::OnManagementScreenHelpButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIUserManagementFlow", "OnManagementScreenHelpButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIUserManagementFlow.OnManagementScreenViewAgreementsButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIUserManagementFlow::OnManagementScreenViewAgreementsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIUserManagementFlow", "OnManagementScreenViewAgreementsButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIUserManagementFlow.OnScreenAgreementsCancelButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIUserManagementFlow::OnScreenAgreementsCancelButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIUserManagementFlow", "OnScreenAgreementsCancelButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIUserManagementFlow.OnScreenAgreementsContinueButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIUserManagementFlow::OnScreenAgreementsContinueButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIUserManagementFlow", "OnScreenAgreementsContinueButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIUserManagementFlow.OnScreenErrorBackButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIUserManagementFlow::OnScreenErrorBackButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIUserManagementFlow", "OnScreenErrorBackButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.BethesdaNetUIUserManagementFlow.OnScreenErrorCancelButtonClicked
// (Final, Native, Private)

void ABethesdaNetUIUserManagementFlow::OnScreenErrorCancelButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BethesdaNetUIUserManagementFlow", "OnScreenErrorCancelButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OnlineSubsystemBethesdaNet.OnlineSubsystemBethesdaNetBlueprintLibrary.GetAccountBUID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOnlineSubsystemBethesdaNetBlueprintLibrary::GetAccountBUID(int32 LocalUserNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineSubsystemBethesdaNetBlueprintLibrary", "GetAccountBUID");

	Params::OnlineSubsystemBethesdaNetBlueprintLibrary_GetAccountBUID Parms{};

	Parms.LocalUserNum = LocalUserNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemBethesdaNet.OnlineSubsystemBethesdaNetBlueprintLibrary.GetLastErrorAsString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOnlineSubsystemBethesdaNetBlueprintLibrary::GetLastErrorAsString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineSubsystemBethesdaNetBlueprintLibrary", "GetLastErrorAsString");

	Params::OnlineSubsystemBethesdaNetBlueprintLibrary_GetLastErrorAsString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemBethesdaNet.OnlineSubsystemBethesdaNetBlueprintLibrary.GetLastLoginResult
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EBNetLoginResult                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBNetLoginResult UOnlineSubsystemBethesdaNetBlueprintLibrary::GetLastLoginResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineSubsystemBethesdaNetBlueprintLibrary", "GetLastLoginResult");

	Params::OnlineSubsystemBethesdaNetBlueprintLibrary_GetLastLoginResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemBethesdaNet.OnlineSubsystemBethesdaNetBlueprintLibrary.GetLoggingPlatform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EBNetLoggingPlatform                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBNetLoggingPlatform UOnlineSubsystemBethesdaNetBlueprintLibrary::GetLoggingPlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineSubsystemBethesdaNetBlueprintLibrary", "GetLoggingPlatform");

	Params::OnlineSubsystemBethesdaNetBlueprintLibrary_GetLoggingPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemBethesdaNet.OnlineSubsystemBethesdaNetBlueprintLibrary.GetPersistentUserId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOnlineSubsystemBethesdaNetBlueprintLibrary::GetPersistentUserId(int32 LocalUserNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineSubsystemBethesdaNetBlueprintLibrary", "GetPersistentUserId");

	Params::OnlineSubsystemBethesdaNetBlueprintLibrary_GetPersistentUserId Parms{};

	Parms.LocalUserNum = LocalUserNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemBethesdaNet.OnlineSubsystemBethesdaNetBlueprintLibrary.GetPlatform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EBNetPlatform                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBNetPlatform UOnlineSubsystemBethesdaNetBlueprintLibrary::GetPlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineSubsystemBethesdaNetBlueprintLibrary", "GetPlatform");

	Params::OnlineSubsystemBethesdaNetBlueprintLibrary_GetPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemBethesdaNet.OnlineSubsystemBethesdaNetBlueprintLibrary.GetUserEmailAddress
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOnlineSubsystemBethesdaNetBlueprintLibrary::GetUserEmailAddress(int32 LocalUserNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineSubsystemBethesdaNetBlueprintLibrary", "GetUserEmailAddress");

	Params::OnlineSubsystemBethesdaNetBlueprintLibrary_GetUserEmailAddress Parms{};

	Parms.LocalUserNum = LocalUserNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemBethesdaNet.OnlineSubsystemBethesdaNetBlueprintLibrary.IsLastErrorAConnectionIssue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineSubsystemBethesdaNetBlueprintLibrary::IsLastErrorAConnectionIssue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineSubsystemBethesdaNetBlueprintLibrary", "IsLastErrorAConnectionIssue");

	Params::OnlineSubsystemBethesdaNetBlueprintLibrary_IsLastErrorAConnectionIssue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OnlineSubsystemBethesdaNet.VBethesdaNetIntegrationSubsystem.OnStartupComplete
// (Final, Native, Private)

void UVBethesdaNetIntegrationSubsystem::OnStartupComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VBethesdaNetIntegrationSubsystem", "OnStartupComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

