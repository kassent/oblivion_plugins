#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AtmosphericToolRuntime

#include "Basic.hpp"

#include "AtmosphericToolRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AtmosphericToolRuntime.ATMPreset.GetExistingPresets
// 0x0010 (0x0010 - 0x0000)
struct ATMPreset_GetExistingPresets final
{
public:
	TArray<class UATMPreset*>                     ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ATMPreset_GetExistingPresets) == 0x000008, "Wrong alignment on ATMPreset_GetExistingPresets");
static_assert(sizeof(ATMPreset_GetExistingPresets) == 0x000010, "Wrong size on ATMPreset_GetExistingPresets");
static_assert(offsetof(ATMPreset_GetExistingPresets, ReturnValue) == 0x000000, "Member 'ATMPreset_GetExistingPresets::ReturnValue' has a wrong offset!");

// Function AtmosphericToolRuntime.ATMSubsystem.Get
// 0x0010 (0x0010 - 0x0000)
struct ATMSubsystem_Get final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UATMSubsystem*                          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ATMSubsystem_Get) == 0x000008, "Wrong alignment on ATMSubsystem_Get");
static_assert(sizeof(ATMSubsystem_Get) == 0x000010, "Wrong size on ATMSubsystem_Get");
static_assert(offsetof(ATMSubsystem_Get, WorldContextObject) == 0x000000, "Member 'ATMSubsystem_Get::WorldContextObject' has a wrong offset!");
static_assert(offsetof(ATMSubsystem_Get, ReturnValue) == 0x000008, "Member 'ATMSubsystem_Get::ReturnValue' has a wrong offset!");

// Function AtmosphericToolRuntime.ATMSubsystem.AddActivePreset
// 0x0018 (0x0018 - 0x0000)
struct ATMSubsystem_AddActivePreset final
{
public:
	class FString                                 PresetName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UATMPresetInstance*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ATMSubsystem_AddActivePreset) == 0x000008, "Wrong alignment on ATMSubsystem_AddActivePreset");
static_assert(sizeof(ATMSubsystem_AddActivePreset) == 0x000018, "Wrong size on ATMSubsystem_AddActivePreset");
static_assert(offsetof(ATMSubsystem_AddActivePreset, PresetName) == 0x000000, "Member 'ATMSubsystem_AddActivePreset::PresetName' has a wrong offset!");
static_assert(offsetof(ATMSubsystem_AddActivePreset, ReturnValue) == 0x000010, "Member 'ATMSubsystem_AddActivePreset::ReturnValue' has a wrong offset!");

// Function AtmosphericToolRuntime.ATMSubsystem.GetATMActor
// 0x0008 (0x0008 - 0x0000)
struct ATMSubsystem_GetATMActor final
{
public:
	class AATMTimeOfDayActor*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ATMSubsystem_GetATMActor) == 0x000008, "Wrong alignment on ATMSubsystem_GetATMActor");
static_assert(sizeof(ATMSubsystem_GetATMActor) == 0x000008, "Wrong size on ATMSubsystem_GetATMActor");
static_assert(offsetof(ATMSubsystem_GetATMActor, ReturnValue) == 0x000000, "Member 'ATMSubsystem_GetATMActor::ReturnValue' has a wrong offset!");

// Function AtmosphericToolRuntime.ATMSubsystem.GetDeltaTime
// 0x0004 (0x0004 - 0x0000)
struct ATMSubsystem_GetDeltaTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ATMSubsystem_GetDeltaTime) == 0x000004, "Wrong alignment on ATMSubsystem_GetDeltaTime");
static_assert(sizeof(ATMSubsystem_GetDeltaTime) == 0x000004, "Wrong size on ATMSubsystem_GetDeltaTime");
static_assert(offsetof(ATMSubsystem_GetDeltaTime, ReturnValue) == 0x000000, "Member 'ATMSubsystem_GetDeltaTime::ReturnValue' has a wrong offset!");

// Function AtmosphericToolRuntime.ATMSubsystem.GetReferencePosition
// 0x0018 (0x0018 - 0x0000)
struct ATMSubsystem_GetReferencePosition final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ATMSubsystem_GetReferencePosition) == 0x000008, "Wrong alignment on ATMSubsystem_GetReferencePosition");
static_assert(sizeof(ATMSubsystem_GetReferencePosition) == 0x000018, "Wrong size on ATMSubsystem_GetReferencePosition");
static_assert(offsetof(ATMSubsystem_GetReferencePosition, ReturnValue) == 0x000000, "Member 'ATMSubsystem_GetReferencePosition::ReturnValue' has a wrong offset!");

// Function AtmosphericToolRuntime.ATMSubsystem.GetTime
// 0x0004 (0x0004 - 0x0000)
struct ATMSubsystem_GetTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ATMSubsystem_GetTime) == 0x000004, "Wrong alignment on ATMSubsystem_GetTime");
static_assert(sizeof(ATMSubsystem_GetTime) == 0x000004, "Wrong size on ATMSubsystem_GetTime");
static_assert(offsetof(ATMSubsystem_GetTime, ReturnValue) == 0x000000, "Member 'ATMSubsystem_GetTime::ReturnValue' has a wrong offset!");

// Function AtmosphericToolRuntime.ATMSubsystem.SetDeltaTime
// 0x000C (0x000C - 0x0000)
struct ATMSubsystem_SetDeltaTime final
{
public:
	float                                         NewDeltaTime;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NewTimeOfDay;                                      // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EATMTimeUpdateSource                          NewUpdateSource;                                   // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ATMSubsystem_SetDeltaTime) == 0x000004, "Wrong alignment on ATMSubsystem_SetDeltaTime");
static_assert(sizeof(ATMSubsystem_SetDeltaTime) == 0x00000C, "Wrong size on ATMSubsystem_SetDeltaTime");
static_assert(offsetof(ATMSubsystem_SetDeltaTime, NewDeltaTime) == 0x000000, "Member 'ATMSubsystem_SetDeltaTime::NewDeltaTime' has a wrong offset!");
static_assert(offsetof(ATMSubsystem_SetDeltaTime, NewTimeOfDay) == 0x000004, "Member 'ATMSubsystem_SetDeltaTime::NewTimeOfDay' has a wrong offset!");
static_assert(offsetof(ATMSubsystem_SetDeltaTime, NewUpdateSource) == 0x000008, "Member 'ATMSubsystem_SetDeltaTime::NewUpdateSource' has a wrong offset!");

// Function AtmosphericToolRuntime.ATMSubsystem.SetReferencePosition
// 0x0018 (0x0018 - 0x0000)
struct ATMSubsystem_SetReferencePosition final
{
public:
	struct FVector                                position;                                          // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ATMSubsystem_SetReferencePosition) == 0x000008, "Wrong alignment on ATMSubsystem_SetReferencePosition");
static_assert(sizeof(ATMSubsystem_SetReferencePosition) == 0x000018, "Wrong size on ATMSubsystem_SetReferencePosition");
static_assert(offsetof(ATMSubsystem_SetReferencePosition, position) == 0x000000, "Member 'ATMSubsystem_SetReferencePosition::position' has a wrong offset!");

// Function AtmosphericToolRuntime.ATMSubsystem.SetTime
// 0x0008 (0x0008 - 0x0000)
struct ATMSubsystem_SetTime final
{
public:
	float                                         NewTime;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EATMTimeUpdateSource                          NewUpdateSource;                                   // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ATMSubsystem_SetTime) == 0x000004, "Wrong alignment on ATMSubsystem_SetTime");
static_assert(sizeof(ATMSubsystem_SetTime) == 0x000008, "Wrong size on ATMSubsystem_SetTime");
static_assert(offsetof(ATMSubsystem_SetTime, NewTime) == 0x000000, "Member 'ATMSubsystem_SetTime::NewTime' has a wrong offset!");
static_assert(offsetof(ATMSubsystem_SetTime, NewUpdateSource) == 0x000004, "Member 'ATMSubsystem_SetTime::NewUpdateSource' has a wrong offset!");

// Function AtmosphericToolRuntime.ATMTimeOfDayActor.GetIsInitialized
// 0x0001 (0x0001 - 0x0000)
struct ATMTimeOfDayActor_GetIsInitialized final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ATMTimeOfDayActor_GetIsInitialized) == 0x000001, "Wrong alignment on ATMTimeOfDayActor_GetIsInitialized");
static_assert(sizeof(ATMTimeOfDayActor_GetIsInitialized) == 0x000001, "Wrong size on ATMTimeOfDayActor_GetIsInitialized");
static_assert(offsetof(ATMTimeOfDayActor_GetIsInitialized, ReturnValue) == 0x000000, "Member 'ATMTimeOfDayActor_GetIsInitialized::ReturnValue' has a wrong offset!");

}

