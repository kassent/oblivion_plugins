#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ModernHud_DamageIndicators

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Altar_structs.hpp"


namespace SDK::Params
{

// Function WBP_ModernHud_DamageIndicators.WBP_ModernHud_DamageIndicators_C.Update Weapon Damage Visibility
// 0x0070 (0x0070 - 0x0000)
struct WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility final
{
public:
	bool                                          InVisible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InHealth;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               LocalWeaponDynamicMat;                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Local_IsBroken;                                    // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility) == 0x000008, "Wrong alignment on WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility");
static_assert(sizeof(WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility) == 0x000070, "Wrong size on WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility, InVisible) == 0x000000, "Member 'WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility::InVisible' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility, InHealth) == 0x000008, "Member 'WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility::InHealth' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility, LocalWeaponDynamicMat) == 0x000010, "Member 'WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility::LocalWeaponDynamicMat' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility, Local_IsBroken) == 0x000018, "Member 'WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility::Local_IsBroken' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility, Temp_object_Variable) == 0x000020, "Member 'WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility, Temp_object_Variable_1) == 0x000028, "Member 'WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility, Temp_bool_Variable) == 0x000030, "Member 'WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility, Temp_byte_Variable) == 0x000031, "Member 'WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility, Temp_byte_Variable_1) == 0x000032, "Member 'WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility, Temp_bool_Variable_1) == 0x000040, "Member 'WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000048, "Member 'WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility, K2Node_Select_Default) == 0x000050, "Member 'WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000058, "Member 'WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000060, "Member 'WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000068, "Member 'WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility, CallFunc_BooleanAND_ReturnValue) == 0x000069, "Member 'WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility, K2Node_Select_Default_1) == 0x00006A, "Member 'WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00006C, "Member 'WBP_ModernHud_DamageIndicators_C_Update_Weapon_Damage_Visibility::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WBP_ModernHud_DamageIndicators.WBP_ModernHud_DamageIndicators_C.UpdateApparelDamageVisibility
// 0x0020 (0x0020 - 0x0000)
struct WBP_ModernHud_DamageIndicators_C_UpdateApparelDamageVisibility final
{
public:
	struct FModernApparelData                     InApparelData;                                     // 0x0000(0x0002)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               LocalApparelDynamicMat;                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModernHud_DamageIndicators_C_UpdateApparelDamageVisibility) == 0x000008, "Wrong alignment on WBP_ModernHud_DamageIndicators_C_UpdateApparelDamageVisibility");
static_assert(sizeof(WBP_ModernHud_DamageIndicators_C_UpdateApparelDamageVisibility) == 0x000020, "Wrong size on WBP_ModernHud_DamageIndicators_C_UpdateApparelDamageVisibility");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_UpdateApparelDamageVisibility, InApparelData) == 0x000000, "Member 'WBP_ModernHud_DamageIndicators_C_UpdateApparelDamageVisibility::InApparelData' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_UpdateApparelDamageVisibility, LocalApparelDynamicMat) == 0x000008, "Member 'WBP_ModernHud_DamageIndicators_C_UpdateApparelDamageVisibility::LocalApparelDynamicMat' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_UpdateApparelDamageVisibility, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'WBP_ModernHud_DamageIndicators_C_UpdateApparelDamageVisibility::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_UpdateApparelDamageVisibility, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000018, "Member 'WBP_ModernHud_DamageIndicators_C_UpdateApparelDamageVisibility::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");

// Function WBP_ModernHud_DamageIndicators.WBP_ModernHud_DamageIndicators_C.UpdateOverencumberedVisibility
// 0x0005 (0x0005 - 0x0000)
struct WBP_ModernHud_DamageIndicators_C_UpdateOverencumberedVisibility final
{
public:
	bool                                          bIsOverencumbered;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModernHud_DamageIndicators_C_UpdateOverencumberedVisibility) == 0x000001, "Wrong alignment on WBP_ModernHud_DamageIndicators_C_UpdateOverencumberedVisibility");
static_assert(sizeof(WBP_ModernHud_DamageIndicators_C_UpdateOverencumberedVisibility) == 0x000005, "Wrong size on WBP_ModernHud_DamageIndicators_C_UpdateOverencumberedVisibility");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_UpdateOverencumberedVisibility, bIsOverencumbered) == 0x000000, "Member 'WBP_ModernHud_DamageIndicators_C_UpdateOverencumberedVisibility::bIsOverencumbered' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_UpdateOverencumberedVisibility, Temp_bool_Variable) == 0x000001, "Member 'WBP_ModernHud_DamageIndicators_C_UpdateOverencumberedVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_UpdateOverencumberedVisibility, Temp_byte_Variable) == 0x000002, "Member 'WBP_ModernHud_DamageIndicators_C_UpdateOverencumberedVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_UpdateOverencumberedVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_ModernHud_DamageIndicators_C_UpdateOverencumberedVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_UpdateOverencumberedVisibility, K2Node_Select_Default) == 0x000004, "Member 'WBP_ModernHud_DamageIndicators_C_UpdateOverencumberedVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ModernHud_DamageIndicators.WBP_ModernHud_DamageIndicators_C.UpdateWeaponHealth
// 0x0010 (0x0010 - 0x0000)
struct WBP_ModernHud_DamageIndicators_C_UpdateWeaponHealth final
{
public:
	double                                        InHealth;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModernHud_DamageIndicators_C_UpdateWeaponHealth) == 0x000008, "Wrong alignment on WBP_ModernHud_DamageIndicators_C_UpdateWeaponHealth");
static_assert(sizeof(WBP_ModernHud_DamageIndicators_C_UpdateWeaponHealth) == 0x000010, "Wrong size on WBP_ModernHud_DamageIndicators_C_UpdateWeaponHealth");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_UpdateWeaponHealth, InHealth) == 0x000000, "Member 'WBP_ModernHud_DamageIndicators_C_UpdateWeaponHealth::InHealth' has a wrong offset!");
static_assert(offsetof(WBP_ModernHud_DamageIndicators_C_UpdateWeaponHealth, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_ModernHud_DamageIndicators_C_UpdateWeaponHealth::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

}

