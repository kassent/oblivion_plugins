#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Skysphere

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Altar_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Skysphere.BP_Skysphere_C
// 0x0068 (0x0300 - 0x0298)
class ABP_Skysphere_C final : public AVAltarStarsActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_Lower_Skysphere;                                // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SkySphere;                                      // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        BasePosition;                                      // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Oblivion;                                          // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         Sky_Luminance;                                     // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         Clear_Cloudy;                                      // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         OblivionInTamriel;                                 // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         TwoD_Cloud_Intensity;                              // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         Shivering;                                         // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	class ABP_Parent_Prefab_PL_C*                 BP_Parent_Prefab_PL;                               // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_Parent_Prefab_Sta_C*                BP_Parent_Prefab_Sta;                              // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Day;                                            // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Night;                                          // 0x02E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EA[0x2];                                      // 0x02EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Sunset;                                            // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sunrise;                                           // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Skysphere_Material;                                // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	int32                                         Actual_Material;                                   // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Skysphere(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void Set_Day();
	void Set_Night();
	void SetStarsState(float AxisX, float AxisY, float AxisZ, float Angle);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Skysphere_C">();
	}
	static class ABP_Skysphere_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Skysphere_C>();
	}
};
static_assert(alignof(ABP_Skysphere_C) == 0x000008, "Wrong alignment on ABP_Skysphere_C");
static_assert(sizeof(ABP_Skysphere_C) == 0x000300, "Wrong size on ABP_Skysphere_C");
static_assert(offsetof(ABP_Skysphere_C, UberGraphFrame) == 0x000298, "Member 'ABP_Skysphere_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Skysphere_C, SM_Lower_Skysphere) == 0x0002A0, "Member 'ABP_Skysphere_C::SM_Lower_Skysphere' has a wrong offset!");
static_assert(offsetof(ABP_Skysphere_C, SM_SkySphere) == 0x0002A8, "Member 'ABP_Skysphere_C::SM_SkySphere' has a wrong offset!");
static_assert(offsetof(ABP_Skysphere_C, BasePosition) == 0x0002B0, "Member 'ABP_Skysphere_C::BasePosition' has a wrong offset!");
static_assert(offsetof(ABP_Skysphere_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_Skysphere_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Skysphere_C, Oblivion) == 0x0002C0, "Member 'ABP_Skysphere_C::Oblivion' has a wrong offset!");
static_assert(offsetof(ABP_Skysphere_C, Sky_Luminance) == 0x0002C4, "Member 'ABP_Skysphere_C::Sky_Luminance' has a wrong offset!");
static_assert(offsetof(ABP_Skysphere_C, Clear_Cloudy) == 0x0002C8, "Member 'ABP_Skysphere_C::Clear_Cloudy' has a wrong offset!");
static_assert(offsetof(ABP_Skysphere_C, OblivionInTamriel) == 0x0002CC, "Member 'ABP_Skysphere_C::OblivionInTamriel' has a wrong offset!");
static_assert(offsetof(ABP_Skysphere_C, TwoD_Cloud_Intensity) == 0x0002D0, "Member 'ABP_Skysphere_C::TwoD_Cloud_Intensity' has a wrong offset!");
static_assert(offsetof(ABP_Skysphere_C, Shivering) == 0x0002D4, "Member 'ABP_Skysphere_C::Shivering' has a wrong offset!");
static_assert(offsetof(ABP_Skysphere_C, BP_Parent_Prefab_PL) == 0x0002D8, "Member 'ABP_Skysphere_C::BP_Parent_Prefab_PL' has a wrong offset!");
static_assert(offsetof(ABP_Skysphere_C, BP_Parent_Prefab_Sta) == 0x0002E0, "Member 'ABP_Skysphere_C::BP_Parent_Prefab_Sta' has a wrong offset!");
static_assert(offsetof(ABP_Skysphere_C, Is_Day) == 0x0002E8, "Member 'ABP_Skysphere_C::Is_Day' has a wrong offset!");
static_assert(offsetof(ABP_Skysphere_C, Is_Night) == 0x0002E9, "Member 'ABP_Skysphere_C::Is_Night' has a wrong offset!");
static_assert(offsetof(ABP_Skysphere_C, Sunset) == 0x0002EC, "Member 'ABP_Skysphere_C::Sunset' has a wrong offset!");
static_assert(offsetof(ABP_Skysphere_C, Sunrise) == 0x0002F0, "Member 'ABP_Skysphere_C::Sunrise' has a wrong offset!");
static_assert(offsetof(ABP_Skysphere_C, Skysphere_Material) == 0x0002F4, "Member 'ABP_Skysphere_C::Skysphere_Material' has a wrong offset!");
static_assert(offsetof(ABP_Skysphere_C, Actual_Material) == 0x0002F8, "Member 'ABP_Skysphere_C::Actual_Material' has a wrong offset!");

}

