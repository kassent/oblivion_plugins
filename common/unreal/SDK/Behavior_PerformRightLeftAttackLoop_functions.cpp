#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Behavior_PerformRightLeftAttackLoop

#include "Basic.hpp"

#include "Behavior_PerformRightLeftAttackLoop_classes.hpp"
#include "Behavior_PerformRightLeftAttackLoop_parameters.hpp"


namespace SDK
{

// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.AttemptCancellation
// (Public, BlueprintCallable, BlueprintEvent)

void UBehavior_PerformRightLeftAttackLoop_C::AttemptCancellation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Behavior_PerformRightLeftAttackLoop_C", "AttemptCancellation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.BindToActionEvents
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVPawnAnimatedAction*             Action                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBehavior_PerformRightLeftAttackLoop_C::BindToActionEvents(class UVPawnAnimatedAction* Action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Behavior_PerformRightLeftAttackLoop_C", "BindToActionEvents");

	Params::Behavior_PerformRightLeftAttackLoop_C_BindToActionEvents Parms{};

	Parms.Action = Action;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.EnterFollowThrough
// (Public, BlueprintCallable, BlueprintEvent)

void UBehavior_PerformRightLeftAttackLoop_C::EnterFollowThrough()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Behavior_PerformRightLeftAttackLoop_C", "EnterFollowThrough");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBehavior_PerformRightLeftAttackLoop_C::ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Behavior_PerformRightLeftAttackLoop_C", "ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop");

	Params::Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.GetCurrentAttackDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   IsRightAttack                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBehavior_PerformRightLeftAttackLoop_C::GetCurrentAttackDirection(bool* IsRightAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Behavior_PerformRightLeftAttackLoop_C", "GetCurrentAttackDirection");

	Params::Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsRightAttack != nullptr)
		*IsRightAttack = Parms.IsRightAttack;
}


// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.GetCurrentAttackDuration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBehavior_PerformRightLeftAttackLoop_C::GetCurrentAttackDuration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Behavior_PerformRightLeftAttackLoop_C", "GetCurrentAttackDuration");

	Params::Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackDuration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.GetCurrentAttackTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 CurrentAttackTime                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBehavior_PerformRightLeftAttackLoop_C::GetCurrentAttackTime(double* CurrentAttackTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Behavior_PerformRightLeftAttackLoop_C", "GetCurrentAttackTime");

	Params::Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentAttackTime != nullptr)
		*CurrentAttackTime = Parms.CurrentAttackTime;
}


// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.HandleAttackActionEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              Event_Tag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UAnimNotifyActionEventInfo*       Anim_Notify_Action_Event                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBehavior_PerformRightLeftAttackLoop_C::HandleAttackActionEvent(const struct FGameplayTag& Event_Tag, class UAnimNotifyActionEventInfo* Anim_Notify_Action_Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Behavior_PerformRightLeftAttackLoop_C", "HandleAttackActionEvent");

	Params::Behavior_PerformRightLeftAttackLoop_C_HandleAttackActionEvent Parms{};

	Parms.Event_Tag = std::move(Event_Tag);
	Parms.Anim_Notify_Action_Event = Anim_Notify_Action_Event;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.OnAnimatedActionEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              Event_Tag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UAnimNotifyActionEventInfo*       Event_Source                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBehavior_PerformRightLeftAttackLoop_C::OnAnimatedActionEvent(const struct FGameplayTag& Event_Tag, class UAnimNotifyActionEventInfo* Event_Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Behavior_PerformRightLeftAttackLoop_C", "OnAnimatedActionEvent");

	Params::Behavior_PerformRightLeftAttackLoop_C_OnAnimatedActionEvent Parms{};

	Parms.Event_Tag = std::move(Event_Tag);
	Parms.Event_Source = Event_Source;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.OnCanceled_AE73D58B4523D7BCB9DF24B28848C328
// (BlueprintCallable, BlueprintEvent)

void UBehavior_PerformRightLeftAttackLoop_C::OnCanceled_AE73D58B4523D7BCB9DF24B28848C328()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Behavior_PerformRightLeftAttackLoop_C", "OnCanceled_AE73D58B4523D7BCB9DF24B28848C328");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.OnCanceled_AE73D58B4523D7BCB9DF24B2BA2C1D89
// (BlueprintCallable, BlueprintEvent)

void UBehavior_PerformRightLeftAttackLoop_C::OnCanceled_AE73D58B4523D7BCB9DF24B2BA2C1D89()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Behavior_PerformRightLeftAttackLoop_C", "OnCanceled_AE73D58B4523D7BCB9DF24B2BA2C1D89");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.OnCompleted_AE73D58B4523D7BCB9DF24B28848C328
// (BlueprintCallable, BlueprintEvent)

void UBehavior_PerformRightLeftAttackLoop_C::OnCompleted_AE73D58B4523D7BCB9DF24B28848C328()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Behavior_PerformRightLeftAttackLoop_C", "OnCompleted_AE73D58B4523D7BCB9DF24B28848C328");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.OnCompleted_AE73D58B4523D7BCB9DF24B2BA2C1D89
// (BlueprintCallable, BlueprintEvent)

void UBehavior_PerformRightLeftAttackLoop_C::OnCompleted_AE73D58B4523D7BCB9DF24B2BA2C1D89()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Behavior_PerformRightLeftAttackLoop_C", "OnCompleted_AE73D58B4523D7BCB9DF24B2BA2C1D89");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.OnEnd
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInterrupted                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBehavior_PerformRightLeftAttackLoop_C::OnEnd(bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Behavior_PerformRightLeftAttackLoop_C", "OnEnd");

	Params::Behavior_PerformRightLeftAttackLoop_C_OnEnd Parms{};

	Parms.bInterrupted = bInterrupted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.OnInit
// (Event, Protected, BlueprintEvent)

void UBehavior_PerformRightLeftAttackLoop_C::OnInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Behavior_PerformRightLeftAttackLoop_C", "OnInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.OnUpdate
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBehavior_PerformRightLeftAttackLoop_C::OnUpdate(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Behavior_PerformRightLeftAttackLoop_C", "OnUpdate");

	Params::Behavior_PerformRightLeftAttackLoop_C_OnUpdate Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.SignalAttackContinuation
// (Public, BlueprintCallable, BlueprintEvent)

void UBehavior_PerformRightLeftAttackLoop_C::SignalAttackContinuation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Behavior_PerformRightLeftAttackLoop_C", "SignalAttackContinuation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.UpdateLightAttackAnimTag
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBehavior_PerformRightLeftAttackLoop_C::UpdateLightAttackAnimTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Behavior_PerformRightLeftAttackLoop_C", "UpdateLightAttackAnimTag");

	UObject::ProcessEvent(Func, nullptr);
}

}

