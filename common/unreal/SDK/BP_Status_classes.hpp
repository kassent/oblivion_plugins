#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Status

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Altar_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Status.BP_Status_C
// 0x00B8 (0x0368 - 0x02B0)
class ABP_Status_C : public AVStatusEffectVFXBlueprint
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      StatusEffect_VFX;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  FPS_PostProcess;                                   // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target_Actor;                                      // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          Target_Is_Valid;                                   // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          Is_Skeletal_Event;                                 // 0x02D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_2DA[0x6];                                      // 0x02DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   Targeted_Static_Mesh_;                             // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Targeted_Skeletal_Mesh;                            // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          Stop_Play_Called;                                  // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          Niagara_System_Is_Valid;                           // 0x02F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          Particle_Deactivated;                              // 0x02F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          Particle_Finished;                                 // 0x02F3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLinearColor>                   Color_Array;                                       // 0x02F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, AdvancedDisplay)
	struct FLinearColor                           Main_Color;                                        // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FLinearColor                           Secondary_Color;                                   // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FLinearColor                           Third_Color;                                       // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FVector                                Target_Static_Location;                            // 0x0338(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          Target_Is_Player;                                  // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AVOblivionPlayerCharacter*              Target_Player_Character;                           // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AVPairedPawn*                           Target_NPC_Character;                              // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Activate_Used_Component();
	void BndEvt__BP_StatusEffect_StatusEffect_VFX_K2Node_ComponentBoundEvent_0_OnNiagaraSystemFinished__DelegateSignature(class UNiagaraComponent* PSystem);
	void BndEvt__BP_StatusEffect_StatusEffect_VFX_K2Node_ComponentBoundEvent_1_ActorComponentDeactivateSignature__DelegateSignature(class UActorComponent* Component);
	void BndEvt__BP_StatusEffect_StatusEffect_VFX_K2Node_ComponentBoundEvent_4_ActorComponentActivatedSignature__DelegateSignature(class UActorComponent* Component, bool bReset);
	void Child_Behavior___After_Setup();
	void Child_Behavior___Before_Setup();
	void Event_End_Tick();
	void Event_PostProcess_Activate(bool Is_Fading);
	void Event_PostProcess_Deactivate(bool Is_Fading);
	void ExecuteUbergraph_BP_Status(int32 EntryPoint);
	void OnStartPlaySkeletal(class USkeletalMeshComponent* SkeletalMeshComponent, bool bDoesBeginInFirstPerson, float Value, const TArray<struct FLinearColor>& VFXColors, bool bDoesBeginAsTheOnlyVFX, bool bIsEnchant, bool bIsMainEffect, bool bIsInInventory);
	void OnStartPlayStatic(class UStaticMeshComponent* StaticMeshComponent, bool bDoesBeginInFirstPerson, float Value, const TArray<struct FLinearColor>& VFXColors, bool bDoesBeginAsTheOnlyVFX, bool bIsEnchant, bool bIsMainEffect, bool bIsInInventory);
	void Send_Event_Data_to_Niagara(bool Condition);
	void Store_Form_Data(bool Event_Is_Skeletal_Event, class USkeletalMeshComponent* Event_Skeletal_Mesh_Component, class UStaticMeshComponent* Event_Static_Mesh_Component, bool Event_Is_Begin_in_First_Person, double Event_Value, TArray<struct FLinearColor>& Event_Colors, bool Event_Beggin_as_Only_VFX, bool Event_Is_Enchant, bool Event_Is_Main_VFX);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Status_C">();
	}
	static class ABP_Status_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Status_C>();
	}
};
static_assert(alignof(ABP_Status_C) == 0x000008, "Wrong alignment on ABP_Status_C");
static_assert(sizeof(ABP_Status_C) == 0x000368, "Wrong size on ABP_Status_C");
static_assert(offsetof(ABP_Status_C, UberGraphFrame) == 0x0002B0, "Member 'ABP_Status_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Status_C, StatusEffect_VFX) == 0x0002B8, "Member 'ABP_Status_C::StatusEffect_VFX' has a wrong offset!");
static_assert(offsetof(ABP_Status_C, FPS_PostProcess) == 0x0002C0, "Member 'ABP_Status_C::FPS_PostProcess' has a wrong offset!");
static_assert(offsetof(ABP_Status_C, DefaultSceneRoot) == 0x0002C8, "Member 'ABP_Status_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Status_C, Target_Actor) == 0x0002D0, "Member 'ABP_Status_C::Target_Actor' has a wrong offset!");
static_assert(offsetof(ABP_Status_C, Target_Is_Valid) == 0x0002D8, "Member 'ABP_Status_C::Target_Is_Valid' has a wrong offset!");
static_assert(offsetof(ABP_Status_C, Is_Skeletal_Event) == 0x0002D9, "Member 'ABP_Status_C::Is_Skeletal_Event' has a wrong offset!");
static_assert(offsetof(ABP_Status_C, Targeted_Static_Mesh_) == 0x0002E0, "Member 'ABP_Status_C::Targeted_Static_Mesh_' has a wrong offset!");
static_assert(offsetof(ABP_Status_C, Targeted_Skeletal_Mesh) == 0x0002E8, "Member 'ABP_Status_C::Targeted_Skeletal_Mesh' has a wrong offset!");
static_assert(offsetof(ABP_Status_C, Stop_Play_Called) == 0x0002F0, "Member 'ABP_Status_C::Stop_Play_Called' has a wrong offset!");
static_assert(offsetof(ABP_Status_C, Niagara_System_Is_Valid) == 0x0002F1, "Member 'ABP_Status_C::Niagara_System_Is_Valid' has a wrong offset!");
static_assert(offsetof(ABP_Status_C, Particle_Deactivated) == 0x0002F2, "Member 'ABP_Status_C::Particle_Deactivated' has a wrong offset!");
static_assert(offsetof(ABP_Status_C, Particle_Finished) == 0x0002F3, "Member 'ABP_Status_C::Particle_Finished' has a wrong offset!");
static_assert(offsetof(ABP_Status_C, Color_Array) == 0x0002F8, "Member 'ABP_Status_C::Color_Array' has a wrong offset!");
static_assert(offsetof(ABP_Status_C, Main_Color) == 0x000308, "Member 'ABP_Status_C::Main_Color' has a wrong offset!");
static_assert(offsetof(ABP_Status_C, Secondary_Color) == 0x000318, "Member 'ABP_Status_C::Secondary_Color' has a wrong offset!");
static_assert(offsetof(ABP_Status_C, Third_Color) == 0x000328, "Member 'ABP_Status_C::Third_Color' has a wrong offset!");
static_assert(offsetof(ABP_Status_C, Target_Static_Location) == 0x000338, "Member 'ABP_Status_C::Target_Static_Location' has a wrong offset!");
static_assert(offsetof(ABP_Status_C, Target_Is_Player) == 0x000350, "Member 'ABP_Status_C::Target_Is_Player' has a wrong offset!");
static_assert(offsetof(ABP_Status_C, Target_Player_Character) == 0x000358, "Member 'ABP_Status_C::Target_Player_Character' has a wrong offset!");
static_assert(offsetof(ABP_Status_C, Target_NPC_Character) == 0x000360, "Member 'ABP_Status_C::Target_NPC_Character' has a wrong offset!");

}

