#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TABP_HitReact

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "TABP_HitReact_structs.hpp"
#include "Altar_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass TABP_HitReact.TABP_HitReact_C
// 0x0500 (0x0940 - 0x0440)
class UTABP_HitReact_C final : public UVHitReactionKeyframeAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0440(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct TABP_HitReact::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                // 0x0448(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0458(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0460(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0468(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0488(0x00B8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0540(0x0080)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x05C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x05E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0610(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0638(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0660(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0680(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x06A8(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0770(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x07E0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0800(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0828(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0848(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0910(0x0020)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x0930(0x0010)()

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_TABP_HitReact_AnimGraphNode_TransitionResult_644C9FF44594CDF8D28105B8F4CD72C2();
	void ExecuteUbergraph_TABP_HitReact(int32 EntryPoint);
	void HitReactLayer(const struct FPoseLink& InPose, struct FPoseLink* HitReactLayer_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TABP_HitReact_C">();
	}
	static class UTABP_HitReact_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTABP_HitReact_C>();
	}
};
static_assert(alignof(UTABP_HitReact_C) == 0x000010, "Wrong alignment on UTABP_HitReact_C");
static_assert(sizeof(UTABP_HitReact_C) == 0x000940, "Wrong size on UTABP_HitReact_C");
static_assert(offsetof(UTABP_HitReact_C, UberGraphFrame) == 0x000440, "Member 'UTABP_HitReact_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTABP_HitReact_C, __AnimBlueprintMutables) == 0x000448, "Member 'UTABP_HitReact_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UTABP_HitReact_C, AnimBlueprintExtension_PropertyAccess) == 0x000458, "Member 'UTABP_HitReact_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UTABP_HitReact_C, AnimBlueprintExtension_Base) == 0x000460, "Member 'UTABP_HitReact_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UTABP_HitReact_C, AnimGraphNode_Root_1) == 0x000468, "Member 'UTABP_HitReact_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UTABP_HitReact_C, AnimGraphNode_LinkedInputPose) == 0x000488, "Member 'UTABP_HitReact_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UTABP_HitReact_C, AnimGraphNode_SaveCachedPose) == 0x000540, "Member 'UTABP_HitReact_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UTABP_HitReact_C, AnimGraphNode_TransitionResult_2) == 0x0005C0, "Member 'UTABP_HitReact_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UTABP_HitReact_C, AnimGraphNode_TransitionResult_1) == 0x0005E8, "Member 'UTABP_HitReact_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UTABP_HitReact_C, AnimGraphNode_TransitionResult) == 0x000610, "Member 'UTABP_HitReact_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UTABP_HitReact_C, AnimGraphNode_UseCachedPose_2) == 0x000638, "Member 'UTABP_HitReact_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UTABP_HitReact_C, AnimGraphNode_StateResult_2) == 0x000660, "Member 'UTABP_HitReact_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UTABP_HitReact_C, AnimGraphNode_UseCachedPose_1) == 0x000680, "Member 'UTABP_HitReact_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UTABP_HitReact_C, AnimGraphNode_ApplyAdditive) == 0x0006A8, "Member 'UTABP_HitReact_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UTABP_HitReact_C, AnimGraphNode_BlendSpacePlayer) == 0x000770, "Member 'UTABP_HitReact_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UTABP_HitReact_C, AnimGraphNode_StateResult_1) == 0x0007E0, "Member 'UTABP_HitReact_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UTABP_HitReact_C, AnimGraphNode_UseCachedPose) == 0x000800, "Member 'UTABP_HitReact_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UTABP_HitReact_C, AnimGraphNode_StateResult) == 0x000828, "Member 'UTABP_HitReact_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UTABP_HitReact_C, AnimGraphNode_StateMachine) == 0x000848, "Member 'UTABP_HitReact_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UTABP_HitReact_C, AnimGraphNode_Root) == 0x000910, "Member 'UTABP_HitReact_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UTABP_HitReact_C, AnimGraphNode_LocalRefPose) == 0x000930, "Member 'UTABP_HitReact_C::AnimGraphNode_LocalRefPose' has a wrong offset!");

}

