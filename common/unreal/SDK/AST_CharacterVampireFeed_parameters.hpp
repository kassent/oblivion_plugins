#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AST_CharacterVampireFeed

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AST_CharacterVampireFeed.AST_CharacterVampireFeed_C.ExecuteUbergraph_AST_CharacterVampireFeed
// 0x0040 (0x0040 - 0x0000)
struct AST_CharacterVampireFeed_C_ExecuteUbergraph_AST_CharacterVampireFeed final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVPawnAnimatedAction*                   CallFunc_PlayAnimatedAction_Action;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStateMachinePlayAnimatedAction*        CallFunc_PlayAnimatedAction_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AST_CharacterVampireFeed_C_ExecuteUbergraph_AST_CharacterVampireFeed) == 0x000008, "Wrong alignment on AST_CharacterVampireFeed_C_ExecuteUbergraph_AST_CharacterVampireFeed");
static_assert(sizeof(AST_CharacterVampireFeed_C_ExecuteUbergraph_AST_CharacterVampireFeed) == 0x000040, "Wrong size on AST_CharacterVampireFeed_C_ExecuteUbergraph_AST_CharacterVampireFeed");
static_assert(offsetof(AST_CharacterVampireFeed_C_ExecuteUbergraph_AST_CharacterVampireFeed, EntryPoint) == 0x000000, "Member 'AST_CharacterVampireFeed_C_ExecuteUbergraph_AST_CharacterVampireFeed::EntryPoint' has a wrong offset!");
static_assert(offsetof(AST_CharacterVampireFeed_C_ExecuteUbergraph_AST_CharacterVampireFeed, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'AST_CharacterVampireFeed_C_ExecuteUbergraph_AST_CharacterVampireFeed::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AST_CharacterVampireFeed_C_ExecuteUbergraph_AST_CharacterVampireFeed, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'AST_CharacterVampireFeed_C_ExecuteUbergraph_AST_CharacterVampireFeed::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(AST_CharacterVampireFeed_C_ExecuteUbergraph_AST_CharacterVampireFeed, CallFunc_PlayAnimatedAction_Action) == 0x000028, "Member 'AST_CharacterVampireFeed_C_ExecuteUbergraph_AST_CharacterVampireFeed::CallFunc_PlayAnimatedAction_Action' has a wrong offset!");
static_assert(offsetof(AST_CharacterVampireFeed_C_ExecuteUbergraph_AST_CharacterVampireFeed, CallFunc_PlayAnimatedAction_ReturnValue) == 0x000030, "Member 'AST_CharacterVampireFeed_C_ExecuteUbergraph_AST_CharacterVampireFeed::CallFunc_PlayAnimatedAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterVampireFeed_C_ExecuteUbergraph_AST_CharacterVampireFeed, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'AST_CharacterVampireFeed_C_ExecuteUbergraph_AST_CharacterVampireFeed::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function AST_CharacterVampireFeed.AST_CharacterVampireFeed_C.SetupFeedDockingData
// 0x0120 (0x0120 - 0x0000)
struct AST_CharacterVampireFeed_C_SetupFeedDockingData final
{
public:
	class UVDockingPairingComponent*              DockingComponent;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVDockingPairingComponent*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0020(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          K2Node_DynamicCast_AsAnim_Sequence;                // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AST_CharacterVampireFeed_C_SetupFeedDockingData) == 0x000008, "Wrong alignment on AST_CharacterVampireFeed_C_SetupFeedDockingData");
static_assert(sizeof(AST_CharacterVampireFeed_C_SetupFeedDockingData) == 0x000120, "Wrong size on AST_CharacterVampireFeed_C_SetupFeedDockingData");
static_assert(offsetof(AST_CharacterVampireFeed_C_SetupFeedDockingData, DockingComponent) == 0x000000, "Member 'AST_CharacterVampireFeed_C_SetupFeedDockingData::DockingComponent' has a wrong offset!");
static_assert(offsetof(AST_CharacterVampireFeed_C_SetupFeedDockingData, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'AST_CharacterVampireFeed_C_SetupFeedDockingData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterVampireFeed_C_SetupFeedDockingData, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'AST_CharacterVampireFeed_C_SetupFeedDockingData::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterVampireFeed_C_SetupFeedDockingData, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000018, "Member 'AST_CharacterVampireFeed_C_SetupFeedDockingData::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterVampireFeed_C_SetupFeedDockingData, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000020, "Member 'AST_CharacterVampireFeed_C_SetupFeedDockingData::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AST_CharacterVampireFeed_C_SetupFeedDockingData, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000108, "Member 'AST_CharacterVampireFeed_C_SetupFeedDockingData::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterVampireFeed_C_SetupFeedDockingData, K2Node_DynamicCast_AsAnim_Sequence) == 0x000110, "Member 'AST_CharacterVampireFeed_C_SetupFeedDockingData::K2Node_DynamicCast_AsAnim_Sequence' has a wrong offset!");
static_assert(offsetof(AST_CharacterVampireFeed_C_SetupFeedDockingData, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'AST_CharacterVampireFeed_C_SetupFeedDockingData::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

