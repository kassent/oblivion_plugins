#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TargetActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TargetActor.BP_TargetActor_C
// 0x0048 (0x0368 - 0x0320)
class ABP_TargetActor_C final : public APawn
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDirectionalLightComponent*             DirectionalLight_B;                                // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDirectionalLightComponent*             DirectionalLight_A;                                // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               SceneCaptureComponent2D;                           // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm;                                         // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSM_;                                             // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseWorldLight;                                     // 0x0361(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Evt_ChangeLightChannel(bool UseWorldLight_0);
	void Evt_InitalCameraAndLight(bool IsSM__0);
	void Evt_SpawnCenter(bool IsSM__0, bool Initial);
	void Evt_UpdateCamera(float RotationAdd_Z, float RotationAdd_Y, double ArmLengthAdd, double Offset_X, double Offset_Y, float Rotation_Light);
	void ExecuteUbergraph_BP_TargetActor(int32 EntryPoint);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TargetActor_C">();
	}
	static class ABP_TargetActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TargetActor_C>();
	}
};
static_assert(alignof(ABP_TargetActor_C) == 0x000008, "Wrong alignment on ABP_TargetActor_C");
static_assert(sizeof(ABP_TargetActor_C) == 0x000368, "Wrong size on ABP_TargetActor_C");
static_assert(offsetof(ABP_TargetActor_C, UberGraphFrame) == 0x000320, "Member 'ABP_TargetActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_TargetActor_C, SkeletalMesh) == 0x000328, "Member 'ABP_TargetActor_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_TargetActor_C, DirectionalLight_B) == 0x000330, "Member 'ABP_TargetActor_C::DirectionalLight_B' has a wrong offset!");
static_assert(offsetof(ABP_TargetActor_C, DirectionalLight_A) == 0x000338, "Member 'ABP_TargetActor_C::DirectionalLight_A' has a wrong offset!");
static_assert(offsetof(ABP_TargetActor_C, SceneCaptureComponent2D) == 0x000340, "Member 'ABP_TargetActor_C::SceneCaptureComponent2D' has a wrong offset!");
static_assert(offsetof(ABP_TargetActor_C, SpringArm) == 0x000348, "Member 'ABP_TargetActor_C::SpringArm' has a wrong offset!");
static_assert(offsetof(ABP_TargetActor_C, StaticMesh) == 0x000350, "Member 'ABP_TargetActor_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_TargetActor_C, DefaultSceneRoot) == 0x000358, "Member 'ABP_TargetActor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_TargetActor_C, IsSM_) == 0x000360, "Member 'ABP_TargetActor_C::IsSM_' has a wrong offset!");
static_assert(offsetof(ABP_TargetActor_C, UseWorldLight) == 0x000361, "Member 'ABP_TargetActor_C::UseWorldLight' has a wrong offset!");

}

