#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VMisc_ConditionalStatic

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "S_StaticMiscIdentifier_structs.hpp"
#include "Altar_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_VMisc_ConditionalStatic.BP_VMisc_ConditionalStatic_C
// 0x0020 (0x0378 - 0x0358)
class ABP_VMisc_ConditionalStatic_C : public AVMisc
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0358(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<struct FS_StaticMiscIdentifier>        StaticLocations;                                   // 0x0360(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         LocationTolerance;                                 // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_VMisc_ConditionalStatic_TESRefComponent_K2Node_ComponentBoundEvent_0_VPairingInitializationDelegate__DelegateSignature();
	void CheckForStatic(bool* bFound, struct FVector* FoundLocation);
	void ExecuteUbergraph_BP_VMisc_ConditionalStatic(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_VMisc_ConditionalStatic_C">();
	}
	static class ABP_VMisc_ConditionalStatic_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_VMisc_ConditionalStatic_C>();
	}
};
static_assert(alignof(ABP_VMisc_ConditionalStatic_C) == 0x000008, "Wrong alignment on ABP_VMisc_ConditionalStatic_C");
static_assert(sizeof(ABP_VMisc_ConditionalStatic_C) == 0x000378, "Wrong size on ABP_VMisc_ConditionalStatic_C");
static_assert(offsetof(ABP_VMisc_ConditionalStatic_C, UberGraphFrame) == 0x000358, "Member 'ABP_VMisc_ConditionalStatic_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_VMisc_ConditionalStatic_C, StaticLocations) == 0x000360, "Member 'ABP_VMisc_ConditionalStatic_C::StaticLocations' has a wrong offset!");
static_assert(offsetof(ABP_VMisc_ConditionalStatic_C, LocationTolerance) == 0x000370, "Member 'ABP_VMisc_ConditionalStatic_C::LocationTolerance' has a wrong offset!");

}

