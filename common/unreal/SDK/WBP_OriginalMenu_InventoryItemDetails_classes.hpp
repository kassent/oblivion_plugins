#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_OriginalMenu_InventoryItemDetails

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "Altar_structs.hpp"
#include "Altar_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_OriginalMenu_InventoryItemDetails.WBP_OriginalMenu_InventoryItemDetails_C
// 0x08F8 (0x0DC0 - 0x04C8)
class UWBP_OriginalMenu_InventoryItemDetails_C final : public UVAltarWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVInventoryMenuViewModel*               VInventoryMenuViewModel;                           // 0x04D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, DuplicateTransient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UVItemDetailsViewModel*                 VItemDetailsViewModel;                             // 0x04D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, DuplicateTransient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UVItemEffectsViewModel*                 VItemEffectsViewModel;                             // 0x04E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, DuplicateTransient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       InventoryDetailsFadeInOut;                         // 0x04E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SkillFadeInOut;                                    // 0x04F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SpecificSwitcherFadeInOut;                         // 0x04F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MainContentFadeInOut;                              // 0x0500(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_ModernPrefab_Button_C*             inv_details_action_button;                         // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               inv_details_action_button_overlay;                 // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           inv_details_canvas;                                // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AltarTextBlock_C*                  inv_details_count;                                 // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OriginalImageTile_C*               inv_details_item_background;                       // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OriginalMenu_InventoryMainContent_C* inv_details_main_content;                        // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AltarTextBlock_C*                  inv_details_name;                                  // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AltarTextBlock_C*                  inv_details_name_seperator;                        // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OriginalMenu_InventoryItemPreview_C* inv_details_preview;                             // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           inv_details_preview_maincontent_verticalbox;       // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModernMenu_StatsPage3_Details_C*   inv_details_skill;                                 // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        inv_details_specific_switcher;                     // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         inv_details_subtabs_button_horizontalbox;          // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OriginalMenu_InventoryItemDetailsSubTabsButton_C* inv_details_subtabs_buttons_tab1;   // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OriginalMenu_InventoryItemDetailsSubTabsButton_C* inv_details_subtabs_buttons_tab2;   // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OriginalMenu_InventoryItemDetailsSubTabsButton_C* inv_details_subtabs_buttons_tab3;   // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OriginalMenu_InventoryDetails_Tooltip_C* inv_details_tooltip;                         // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<EFormID, class FText>                    FormIDToActionButtonText;                          // 0x0590(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EOriginalInventoryMenuBookType, class FText> BookTypeToActionButtonText;                    // 0x05E0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   ActionTextEquip;                                   // 0x0630(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   ActionTextUnequip;                                 // 0x0648(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   DefaultActionTextHammer;                           // 0x0660(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Is_Light_Armor;                                    // 0x0678(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOriginalInventoryMenuArmorClothPart          NewArmorPart;                                      // 0x0679(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67A[0x6];                                      // 0x067A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DefaultArmorLightText;                             // 0x0680(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   DefaultArmorHeavyText;                             // 0x0698(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EOriginalInventoryMenuArmorClothPart, class FText> DefaultArmorPartText;                    // 0x06B0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EFormID, class FText>                    FormIDToDefaultDescription;                        // 0x0700(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EOriginalInventoryMenuArmorClothPart, class FText> DefaultClothPartDescription;             // 0x0750(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EOriginalInventoryMenuBookType, class FText> DefaultBookTypeDescription;                    // 0x07A0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EOriginalInventoryMenuPotionType, class FText> DefaultPotionTypeDescription;                // 0x07F0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   DefaultHammerDescription;                          // 0x0840(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void()>              OnActionClicked;                                   // 0x0858(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   DefaultActionTextWelkynd;                          // 0x0868(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UTESForm*                               CurrentForm;                                       // 0x0880(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class AActor* NewActor)> SendNewItemActor;                         // 0x0888(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   DefaultWelkyndStoneInfoText;                       // 0x0898(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   DefaultActionTextVarlaStone;                       // 0x08B0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   WeaponDescriptionTextFormat;                       // 0x08C8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<struct FGameplayTag, class FText>        WeaponSizeToTextMap;                               // 0x08E0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<struct FGameplayTag, class FText>        WeaponTypeToTextMap;                               // 0x0930(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<struct FGameplayTag, class FText>        WeaponSkillToTextMap;                              // 0x0980(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         NbSubTabs;                                         // 0x09D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentSubTabIndex;                                // 0x09D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EFormID, int32>                          FormIDToNumberOfSubTabs;                           // 0x09D8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EFormID, int32>                          FormIDToSpecificDetailsIndex;                      // 0x0A28(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EOriginalInventoryMenuBookType, int32>   BookTypeToNumberOfSubTabs;                         // 0x0A78(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   DefaultVarlaStoneInfoText;                         // 0x0AC8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   DefaultSoulgemDescription;                         // 0x0AE0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   SoulgemEmptyDescription;                           // 0x0AF8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   SoulgemEmptyText;                                  // 0x0B10(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   SoulgemFilledText;                                 // 0x0B28(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsActionDisplayed;                                 // 0x0B40(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDetailsPanelOpen;                                // 0x0B41(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceToHideDetails;                                // 0x0B42(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B43[0x5];                                      // 0x0B43(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool IsVisible)> DetailsPanelVisibilityChanged;                    // 0x0B48(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          HoveredItemHasEffects;                             // 0x0B58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B59[0x7];                                      // 0x0B59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DefaultUsableStoneDescription;                     // 0x0B60(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsHoveredItemStack;                                // 0x0B78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B79[0x7];                                      // 0x0B79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            LeftBackgroundBrush;                               // 0x0B80(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              LeftBackgroundPosition;                            // 0x0C50(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            RightBackgroundBrush;                              // 0x0C60(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              RightBackgroundPosition;                           // 0x0D30(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnSubTabsSwitched;                                 // 0x0D40(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          LastIsDetailsOpen;                                 // 0x0D50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D51[0x7];                                      // 0x0D51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOriginalInventoryMenuItemProperties   Item_Hovered;                                      // 0x0D58(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   PreviewLocationContext;                            // 0x0DA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInContainer;                                     // 0x0DB0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WBP_OriginalMenu_InventoryItemDetails_inv_details_action_button_K2Node_ComponentBoundEvent_11_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_OriginalMenu_InventoryItemDetails_inv_details_actionbutton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_OriginalMenu_InventoryItemDetails_inv_details_subtabs_buttons_tab1_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_OriginalMenu_InventoryItemDetails_inv_details_subtabs_buttons_tab1_K2Node_ComponentBoundEvent_8_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_OriginalMenu_InventoryItemDetails_inv_details_subtabs_buttons_tab2_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_OriginalMenu_InventoryItemDetails_inv_details_subtabs_buttons_tab2_K2Node_ComponentBoundEvent_9_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_OriginalMenu_InventoryItemDetails_inv_details_subtabs_buttons_tab3_K2Node_ComponentBoundEvent_10_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_OriginalMenu_InventoryItemDetails_inv_details_subtabs_buttons_tab3_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_OriginalMenu_InventoryItemDetails_inv_preview_K2Node_ComponentBoundEvent_4_SendNewItemActor__DelegateSignature(class AActor* NewActor);
	void CancelHoldPreviewMode();
	void Change_Visibility_Of_Object(bool IsMenuOpen);
	void ChangePreviewVisibilityOfObject(bool ShouldBeHidden);
	void ChangeSpecificDetailsForHoveredItem(class UTESForm* ItemTESForm);
	void ChangeSpecificDetailsWithFormID(int64 FormID, bool* IsHandled);
	void ChangeSpecificDetailsWithFormType(EFormID FormType);
	void ChangeVisibilityItemDetailsPanel(bool ShouldDisplay, bool InstantAnim);
	void Construct();
	void Display_Item_Renderer(bool ShouldHideItemRenderer);
	void ExecuteUbergraph_WBP_OriginalMenu_InventoryItemDetails(int32 EntryPoint);
	void HideAllSubTabsWidgets();
	void HideTooltip();
	void IsExceptionSubTab(int32 SubTabIndex, bool* Value);
	void OnHideAnimationEnd();
	void SetActionButtonText(EFormID FormType, bool IsEquiped);
	void SetActionButtonVisibility(ESlateVisibility NewVisibility);
	void SetActiveSubTabWidgets(int32 SubTabIndex, bool bInstantAnim);
	void SetArmorDescription(class FText* NewDescription);
	void SetCountText(int32 ItemCount);
	void SetForceToHideDetails(bool Value);
	void SetHasEffects(class UTESForm* form, int32 Status);
	void SetItemSkillInformations(const struct FOriginalInventoryMenuItemSkillInformations& NewSkillInfos);
	void SetNumberOfSubTabs(int32 NewNbSubTabs);
	void SetPageSide(bool IsRight);
	void StartHoldPreviewMode();
	void SwitchPreview(bool ForceEventCall, bool CloseInventoryPreview, bool InstantAnim);
	void SwitchSubTabs(class UPanelWidget* ButtonsParent, int32 NewActiveIndex, bool bInstantAnim);
	void ThisIsForPluginCompliance(bool Test);
	void ToggleDetails(bool ToTheRight);
	void UpdateActionButton(EFormID FormType);
	void UpdateArmorPart(EOriginalInventoryMenuArmorClothPart NewPart);
	void UpdateBookDetails(EOriginalInventoryMenuBookType BookType);
	void UpdateClothPart(EOriginalInventoryMenuArmorClothPart NewClothPart);
	void UpdateHoveredItemProperties(const struct FOriginalInventoryMenuItemProperties& InItemHovered);
	void UpdateIsLightAmor(bool IsLightArmor);
	void UpdateNumberOfSubTabs(class UTESForm* form);
	void UpdatePotionType(EOriginalInventoryMenuPotionType NewType);
	void UpdateSkillInformations(const struct FOriginalInventoryMenuItemSkillInformations& NewInfos);
	void UpdateSoulgemCapacity(int32 NewCapacity);
	void UpdateSoulgemLevel(const class FText& newLevel);
	void UpdateSoulgemLevelText();
	void UpdateSoulgemMaxCapacity(int32 NewMaxCapacity);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_OriginalMenu_InventoryItemDetails_C">();
	}
	static class UWBP_OriginalMenu_InventoryItemDetails_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_OriginalMenu_InventoryItemDetails_C>();
	}
};
static_assert(alignof(UWBP_OriginalMenu_InventoryItemDetails_C) == 0x000010, "Wrong alignment on UWBP_OriginalMenu_InventoryItemDetails_C");
static_assert(sizeof(UWBP_OriginalMenu_InventoryItemDetails_C) == 0x000DC0, "Wrong size on UWBP_OriginalMenu_InventoryItemDetails_C");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, UberGraphFrame) == 0x0004C8, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, VInventoryMenuViewModel) == 0x0004D0, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::VInventoryMenuViewModel' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, VItemDetailsViewModel) == 0x0004D8, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::VItemDetailsViewModel' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, VItemEffectsViewModel) == 0x0004E0, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::VItemEffectsViewModel' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, InventoryDetailsFadeInOut) == 0x0004E8, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::InventoryDetailsFadeInOut' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, SkillFadeInOut) == 0x0004F0, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::SkillFadeInOut' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, SpecificSwitcherFadeInOut) == 0x0004F8, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::SpecificSwitcherFadeInOut' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, MainContentFadeInOut) == 0x000500, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::MainContentFadeInOut' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, inv_details_action_button) == 0x000508, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::inv_details_action_button' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, inv_details_action_button_overlay) == 0x000510, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::inv_details_action_button_overlay' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, inv_details_canvas) == 0x000518, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::inv_details_canvas' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, inv_details_count) == 0x000520, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::inv_details_count' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, inv_details_item_background) == 0x000528, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::inv_details_item_background' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, inv_details_main_content) == 0x000530, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::inv_details_main_content' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, inv_details_name) == 0x000538, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::inv_details_name' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, inv_details_name_seperator) == 0x000540, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::inv_details_name_seperator' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, inv_details_preview) == 0x000548, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::inv_details_preview' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, inv_details_preview_maincontent_verticalbox) == 0x000550, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::inv_details_preview_maincontent_verticalbox' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, inv_details_skill) == 0x000558, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::inv_details_skill' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, inv_details_specific_switcher) == 0x000560, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::inv_details_specific_switcher' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, inv_details_subtabs_button_horizontalbox) == 0x000568, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::inv_details_subtabs_button_horizontalbox' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, inv_details_subtabs_buttons_tab1) == 0x000570, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::inv_details_subtabs_buttons_tab1' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, inv_details_subtabs_buttons_tab2) == 0x000578, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::inv_details_subtabs_buttons_tab2' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, inv_details_subtabs_buttons_tab3) == 0x000580, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::inv_details_subtabs_buttons_tab3' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, inv_details_tooltip) == 0x000588, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::inv_details_tooltip' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, FormIDToActionButtonText) == 0x000590, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::FormIDToActionButtonText' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, BookTypeToActionButtonText) == 0x0005E0, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::BookTypeToActionButtonText' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, ActionTextEquip) == 0x000630, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::ActionTextEquip' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, ActionTextUnequip) == 0x000648, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::ActionTextUnequip' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, DefaultActionTextHammer) == 0x000660, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::DefaultActionTextHammer' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, Is_Light_Armor) == 0x000678, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::Is_Light_Armor' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, NewArmorPart) == 0x000679, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::NewArmorPart' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, DefaultArmorLightText) == 0x000680, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::DefaultArmorLightText' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, DefaultArmorHeavyText) == 0x000698, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::DefaultArmorHeavyText' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, DefaultArmorPartText) == 0x0006B0, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::DefaultArmorPartText' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, FormIDToDefaultDescription) == 0x000700, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::FormIDToDefaultDescription' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, DefaultClothPartDescription) == 0x000750, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::DefaultClothPartDescription' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, DefaultBookTypeDescription) == 0x0007A0, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::DefaultBookTypeDescription' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, DefaultPotionTypeDescription) == 0x0007F0, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::DefaultPotionTypeDescription' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, DefaultHammerDescription) == 0x000840, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::DefaultHammerDescription' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, OnActionClicked) == 0x000858, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::OnActionClicked' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, DefaultActionTextWelkynd) == 0x000868, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::DefaultActionTextWelkynd' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, CurrentForm) == 0x000880, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::CurrentForm' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, SendNewItemActor) == 0x000888, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::SendNewItemActor' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, DefaultWelkyndStoneInfoText) == 0x000898, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::DefaultWelkyndStoneInfoText' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, DefaultActionTextVarlaStone) == 0x0008B0, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::DefaultActionTextVarlaStone' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, WeaponDescriptionTextFormat) == 0x0008C8, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::WeaponDescriptionTextFormat' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, WeaponSizeToTextMap) == 0x0008E0, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::WeaponSizeToTextMap' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, WeaponTypeToTextMap) == 0x000930, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::WeaponTypeToTextMap' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, WeaponSkillToTextMap) == 0x000980, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::WeaponSkillToTextMap' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, NbSubTabs) == 0x0009D0, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::NbSubTabs' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, CurrentSubTabIndex) == 0x0009D4, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::CurrentSubTabIndex' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, FormIDToNumberOfSubTabs) == 0x0009D8, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::FormIDToNumberOfSubTabs' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, FormIDToSpecificDetailsIndex) == 0x000A28, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::FormIDToSpecificDetailsIndex' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, BookTypeToNumberOfSubTabs) == 0x000A78, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::BookTypeToNumberOfSubTabs' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, DefaultVarlaStoneInfoText) == 0x000AC8, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::DefaultVarlaStoneInfoText' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, DefaultSoulgemDescription) == 0x000AE0, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::DefaultSoulgemDescription' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, SoulgemEmptyDescription) == 0x000AF8, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::SoulgemEmptyDescription' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, SoulgemEmptyText) == 0x000B10, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::SoulgemEmptyText' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, SoulgemFilledText) == 0x000B28, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::SoulgemFilledText' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, IsActionDisplayed) == 0x000B40, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::IsActionDisplayed' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, IsDetailsPanelOpen) == 0x000B41, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::IsDetailsPanelOpen' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, ForceToHideDetails) == 0x000B42, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::ForceToHideDetails' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, DetailsPanelVisibilityChanged) == 0x000B48, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::DetailsPanelVisibilityChanged' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, HoveredItemHasEffects) == 0x000B58, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::HoveredItemHasEffects' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, DefaultUsableStoneDescription) == 0x000B60, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::DefaultUsableStoneDescription' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, IsHoveredItemStack) == 0x000B78, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::IsHoveredItemStack' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, LeftBackgroundBrush) == 0x000B80, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::LeftBackgroundBrush' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, LeftBackgroundPosition) == 0x000C50, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::LeftBackgroundPosition' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, RightBackgroundBrush) == 0x000C60, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::RightBackgroundBrush' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, RightBackgroundPosition) == 0x000D30, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::RightBackgroundPosition' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, OnSubTabsSwitched) == 0x000D40, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::OnSubTabsSwitched' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, LastIsDetailsOpen) == 0x000D50, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::LastIsDetailsOpen' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, Item_Hovered) == 0x000D58, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::Item_Hovered' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, PreviewLocationContext) == 0x000DA8, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::PreviewLocationContext' has a wrong offset!");
static_assert(offsetof(UWBP_OriginalMenu_InventoryItemDetails_C, IsInContainer) == 0x000DB0, "Member 'UWBP_OriginalMenu_InventoryItemDetails_C::IsInContainer' has a wrong offset!");

}

