#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Original_ImageAndText

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Original_ImageAndText.WBP_Original_ImageAndText_C
// 0x0198 (0x0480 - 0x02E8)
class UWBP_Original_ImageAndText_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_OriginalImageTile_C*               Image;                                             // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               ImageSizeBox;                                      // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AltarTextBlock_C*                  Text;                                              // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint8                                         Pad_308[0x8];                                      // 0x0308(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            DefaultImage;                                      // 0x0310(0x00D0)(Edit, BlueprintVisible)
	struct FVector2D                              DefaultImageSize;                                  // 0x03E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   DefaultText;                                       // 0x03F0(0x0018)(Edit, BlueprintVisible)
	struct FSlateColor                            DefaultColorOpacity;                               // 0x0408(0x0014)(Edit, BlueprintVisible)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         DefaultFont;                                       // 0x0420(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Original_ImageAndText(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void UpdateImage(const struct FSlateBrush& NewImage);
	void UpdateImageSize(const struct FVector2D& NewSize);
	void UpdateText(const class FText& NewText);
	void UpdateTextApperance(const struct FSlateColor& NewColorOpacity, const struct FSlateFontInfo& NewFont);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Original_ImageAndText_C">();
	}
	static class UWBP_Original_ImageAndText_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Original_ImageAndText_C>();
	}
};
static_assert(alignof(UWBP_Original_ImageAndText_C) == 0x000010, "Wrong alignment on UWBP_Original_ImageAndText_C");
static_assert(sizeof(UWBP_Original_ImageAndText_C) == 0x000480, "Wrong size on UWBP_Original_ImageAndText_C");
static_assert(offsetof(UWBP_Original_ImageAndText_C, UberGraphFrame) == 0x0002E8, "Member 'UWBP_Original_ImageAndText_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Original_ImageAndText_C, Image) == 0x0002F0, "Member 'UWBP_Original_ImageAndText_C::Image' has a wrong offset!");
static_assert(offsetof(UWBP_Original_ImageAndText_C, ImageSizeBox) == 0x0002F8, "Member 'UWBP_Original_ImageAndText_C::ImageSizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_Original_ImageAndText_C, Text) == 0x000300, "Member 'UWBP_Original_ImageAndText_C::Text' has a wrong offset!");
static_assert(offsetof(UWBP_Original_ImageAndText_C, DefaultImage) == 0x000310, "Member 'UWBP_Original_ImageAndText_C::DefaultImage' has a wrong offset!");
static_assert(offsetof(UWBP_Original_ImageAndText_C, DefaultImageSize) == 0x0003E0, "Member 'UWBP_Original_ImageAndText_C::DefaultImageSize' has a wrong offset!");
static_assert(offsetof(UWBP_Original_ImageAndText_C, DefaultText) == 0x0003F0, "Member 'UWBP_Original_ImageAndText_C::DefaultText' has a wrong offset!");
static_assert(offsetof(UWBP_Original_ImageAndText_C, DefaultColorOpacity) == 0x000408, "Member 'UWBP_Original_ImageAndText_C::DefaultColorOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_Original_ImageAndText_C, DefaultFont) == 0x000420, "Member 'UWBP_Original_ImageAndText_C::DefaultFont' has a wrong offset!");

}

