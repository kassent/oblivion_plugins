#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PairedPawnLocomotionDebugInfo

#include "Basic.hpp"

#include "UMG_classes.hpp"
#include "Altar_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PairedPawnLocomotionDebugInfo.WBP_PairedPawnLocomotionDebugInfo_C
// 0x00A0 (0x0360 - 0x02C0)
class UWBP_PairedPawnLocomotionDebugInfo_C final : public UUserWidget
{
public:
	class UTextBlock*                             CurrentGaitValue;                                  // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CurrentMoveComponentStatus;                        // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CurrentMoveModeValue_1;                            // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             GameplayTagsValue;                                 // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             GameplayTagsValue_1;                               // 0x02E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HighestReachableGaitValue;                         // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MaxFlySpeedValue;                                  // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MaxGroundRunSpeedValue;                            // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MaxGroundSprintSpeedValue;                         // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MaxGroundTrotSpeedValue;                           // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MaxGroundWalkSpeedValue;                           // 0x0310(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MaxSwimRunSpeedValue;                              // 0x0318(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MaxSwimWalkSpeedValue;                             // 0x0320(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MoveInputValue;                                    // 0x0328(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ObvAcrobaticsValue;                                // 0x0330(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ObvAnimActionValue;                                // 0x0338(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ObvAthleticsValue;                                 // 0x0340(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ObvSpeedValue;                                     // 0x0348(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SpeedValue;                                        // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             WidgetTitlePawnName;                               // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	class FText Get_WidgetTitle_Text();
	class FText Get_SpeedValue_Text();
	class FText Get_ObvSpeedValue_Text();
	class FText Get_ObvAthleticsValue_Text();
	class FText Get_ObvAnimActionValue_Text();
	class FText Get_ObvAcrobaticsValue_Text();
	class FText Get_MaxSwimWalkSpeedValue_Text();
	class FText Get_MaxSwimRunSpeedValue_Text();
	class FText Get_MaxGroundWalkSpeedValue_Text();
	class FText Get_MaxGroundTrotSpeedValue_Text();
	class FText Get_MaxGroundSprintSpeedValue_Text();
	class FText Get_MaxGroundRunSpeedValue_Text();
	class FText Get_MaxFlySpeedValue_Text();
	class FText Get_HighestReachableGaitValue_Text();
	class FText Get_GameplayTagsValue_Text();
	class FText Get_CurrentMoveModeValue_Text();
	class FText Get_CurrentMoveInput_Text();
	class FText Get_CurrentMoveComponentStatus_Text();
	struct FSlateColor Get_CurrentMoveComponentStatus_ColorAndOpacity();
	class FText Get_CurrentGaitValue_Text();
	class FText Get_BufferedInputTagsValue_Text();

	void RoundFloatDecimals(double FloatVal, int32 DecimalDigits, double* RoundedFloat) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PairedPawnLocomotionDebugInfo_C">();
	}
	static class UWBP_PairedPawnLocomotionDebugInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PairedPawnLocomotionDebugInfo_C>();
	}
};
static_assert(alignof(UWBP_PairedPawnLocomotionDebugInfo_C) == 0x000008, "Wrong alignment on UWBP_PairedPawnLocomotionDebugInfo_C");
static_assert(sizeof(UWBP_PairedPawnLocomotionDebugInfo_C) == 0x000360, "Wrong size on UWBP_PairedPawnLocomotionDebugInfo_C");
static_assert(offsetof(UWBP_PairedPawnLocomotionDebugInfo_C, CurrentGaitValue) == 0x0002C0, "Member 'UWBP_PairedPawnLocomotionDebugInfo_C::CurrentGaitValue' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnLocomotionDebugInfo_C, CurrentMoveComponentStatus) == 0x0002C8, "Member 'UWBP_PairedPawnLocomotionDebugInfo_C::CurrentMoveComponentStatus' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnLocomotionDebugInfo_C, CurrentMoveModeValue_1) == 0x0002D0, "Member 'UWBP_PairedPawnLocomotionDebugInfo_C::CurrentMoveModeValue_1' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnLocomotionDebugInfo_C, GameplayTagsValue) == 0x0002D8, "Member 'UWBP_PairedPawnLocomotionDebugInfo_C::GameplayTagsValue' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnLocomotionDebugInfo_C, GameplayTagsValue_1) == 0x0002E0, "Member 'UWBP_PairedPawnLocomotionDebugInfo_C::GameplayTagsValue_1' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnLocomotionDebugInfo_C, HighestReachableGaitValue) == 0x0002E8, "Member 'UWBP_PairedPawnLocomotionDebugInfo_C::HighestReachableGaitValue' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnLocomotionDebugInfo_C, MaxFlySpeedValue) == 0x0002F0, "Member 'UWBP_PairedPawnLocomotionDebugInfo_C::MaxFlySpeedValue' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnLocomotionDebugInfo_C, MaxGroundRunSpeedValue) == 0x0002F8, "Member 'UWBP_PairedPawnLocomotionDebugInfo_C::MaxGroundRunSpeedValue' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnLocomotionDebugInfo_C, MaxGroundSprintSpeedValue) == 0x000300, "Member 'UWBP_PairedPawnLocomotionDebugInfo_C::MaxGroundSprintSpeedValue' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnLocomotionDebugInfo_C, MaxGroundTrotSpeedValue) == 0x000308, "Member 'UWBP_PairedPawnLocomotionDebugInfo_C::MaxGroundTrotSpeedValue' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnLocomotionDebugInfo_C, MaxGroundWalkSpeedValue) == 0x000310, "Member 'UWBP_PairedPawnLocomotionDebugInfo_C::MaxGroundWalkSpeedValue' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnLocomotionDebugInfo_C, MaxSwimRunSpeedValue) == 0x000318, "Member 'UWBP_PairedPawnLocomotionDebugInfo_C::MaxSwimRunSpeedValue' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnLocomotionDebugInfo_C, MaxSwimWalkSpeedValue) == 0x000320, "Member 'UWBP_PairedPawnLocomotionDebugInfo_C::MaxSwimWalkSpeedValue' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnLocomotionDebugInfo_C, MoveInputValue) == 0x000328, "Member 'UWBP_PairedPawnLocomotionDebugInfo_C::MoveInputValue' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnLocomotionDebugInfo_C, ObvAcrobaticsValue) == 0x000330, "Member 'UWBP_PairedPawnLocomotionDebugInfo_C::ObvAcrobaticsValue' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnLocomotionDebugInfo_C, ObvAnimActionValue) == 0x000338, "Member 'UWBP_PairedPawnLocomotionDebugInfo_C::ObvAnimActionValue' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnLocomotionDebugInfo_C, ObvAthleticsValue) == 0x000340, "Member 'UWBP_PairedPawnLocomotionDebugInfo_C::ObvAthleticsValue' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnLocomotionDebugInfo_C, ObvSpeedValue) == 0x000348, "Member 'UWBP_PairedPawnLocomotionDebugInfo_C::ObvSpeedValue' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnLocomotionDebugInfo_C, SpeedValue) == 0x000350, "Member 'UWBP_PairedPawnLocomotionDebugInfo_C::SpeedValue' has a wrong offset!");
static_assert(offsetof(UWBP_PairedPawnLocomotionDebugInfo_C, WidgetTitlePawnName) == 0x000358, "Member 'UWBP_PairedPawnLocomotionDebugInfo_C::WidgetTitlePawnName' has a wrong offset!");

}

