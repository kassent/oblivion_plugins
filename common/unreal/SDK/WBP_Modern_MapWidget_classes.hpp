#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Modern_MapWidget

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CommonInput_structs.hpp"
#include "Altar_structs.hpp"
#include "Altar_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Modern_MapWidget.WBP_Modern_MapWidget_C
// 0x0158 (0x08E0 - 0x0788)
class UWBP_Modern_MapWidget_C final : public UVModern_NavigableMapWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0788(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVFooterViewModel*                      VFooterViewModel;                                  // 0x0790(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, DuplicateTransient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UVSleepWaitMenuViewModel*               VSleepWaitMenuViewModel;                           // 0x0798(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, DuplicateTransient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       QuestDisplayFadeOut;                               // 0x07A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MapAreaFadeOut;                                    // 0x07A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FiltersFadeOut;                                    // 0x07B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_Modern_MapActiveQuestDisplay_C*    ActiveQuestDisplay;                                // 0x07B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAnimatableRetainerBox*                 IconFilterEffect;                                  // 0x07C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Modern_MapPlayerDetails_C*         MapAreaDateTime;                                   // 0x07C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OriginalImageTile_C*               MapImage;                                          // 0x07D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           View;                                              // 0x07D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Modern_MapSmoothZoomSlider_C*      ZoomSliderSmooth;                                  // 0x07E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(const class FString& IconAddress)> IconClickedDispatcher;          // 0x07E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(const struct FVector2D& position)> PlayerMarkerDispatcher;         // 0x07F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsNavigatingOnFilter;                              // 0x0808(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_809[0x7];                                      // 0x0809(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FVector2D& VirtualCursorPosition)> RequestChangeMapDispatcher; // 0x0810(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsWorldMap;                                        // 0x0820(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_821[0x3];                                      // 0x0821(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Number_Of_Dots;                                    // 0x0824(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLegacyMapMenuIconProperties           PlayerIcon;                                        // 0x0828(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              RequestSleepWaitMenu;                              // 0x0878(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bAreDetailsHidden;                                 // 0x0888(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_889[0x3];                                      // 0x0889(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ToggleDetailsCooldownDuration;                     // 0x088C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsToggleDetailsOnCooldown;                        // 0x0890(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInFadeAnimation;                                // 0x0891(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_892[0x6];                                      // 0x0892(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UWBP_Modern_MapPage_C>   ModernMapPage;                                     // 0x0898(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, InstancedReference, HasGetValueTypeHash)
	int32                                         PreviousZOrder;                                    // 0x08C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStartedZoomIn;                                    // 0x08C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsUsingWheel;                                     // 0x08C5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMapOpenedClassicly;                               // 0x08C6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSetInitIcons;                                     // 0x08C7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isInGameMenu;                                      // 0x08C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FromSwapping;                                      // 0x08C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CA[0x2];                                      // 0x08CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                BorderOffset;                                      // 0x08CC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void UpdateBorderWidthOnZoom(float Zoom);
	void SetZoomSliderEnabled(bool InIsEnabled);
	struct FVector2D GetCorrectedMousePosition();
	bool AudioZoomCheckZoomIn();
	void AudioPlaySFXZoomIn();
	bool AudioZoomCheckZoomOut();
	void AudioPlaySFXZoomOut();
	void AdaptCoordsToWideScreen(const struct FVector2D& Pos, struct FVector2D* NewPos);
	void HandleZoomSmoothChanged(double NewValue);
	bool CanUseInput();
	void PluginCompilation(bool NewParam);
	void UpdateFooter(bool bInFilterMode);
	void InitFooter(class UWBP_Modern_Menu_Player_Footer_C* Footer);
	void ToggleDetails();
	void SetDefaultMapDetailValues();
	void ShowDetails();
	void HideDetails();
	void ShowIconFilter(bool bInIsVisible);
	void GetCenterPlayerPosition(struct FVector2D* CenterPosition);
	void SetFilterFocusState(bool NewIsNavigatingOnFilter);
	void TriggerZoomOutInput();
	void TriggerZoomInInput();
	void TriggerCenterOnPlayer();
	void UpdateQuestDisplay(const struct FLegacyMapMenuQuestProperties& QuestData);
	void InitializeFilter();
	void SetMousePositionToCursorPosition();
	void TriggerToggleFilterModeInput();
	void ToggleAllFilterInput();
	void TriggerMapMovementInput(const struct FVector2D& DirectionVector);
	void TriggerIconSelectInput();
	void TriggerPlayerMarkerInput();
	void InitializeSlider();
	void UpdateMapBrush(const class UObject* Map, const struct FVector2D& Size);
	void OnIconClicked(const class FString& IconAddress);
	void OnIconUnhovered(class UWBP_Modern_MapIcon_C* Icon);
	void OnIconHovered(class UWBP_Modern_MapIcon_C* Icon);
	void Setup_Legacy_Map_Icon(class UCommonUserWidget* Icon, const struct FLegacyMapMenuIconProperties& Data);
	void InpActEvt_IA_UI_Specific_Map_Movement_K2Node_EnhancedInputActionEvent_18(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Map_PlayerMarker_K2Node_EnhancedInputActionEvent_17(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Map_CenterOnPlayer_K2Node_EnhancedInputActionEvent_16(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Map_ZoomIn_K2Node_EnhancedInputActionEvent_15(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Map_ZoomIn_K2Node_EnhancedInputActionEvent_14(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Map_ZoomIn_K2Node_EnhancedInputActionEvent_13(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Map_ZoomIn_K2Node_EnhancedInputActionEvent_12(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Map_ZoomOut_K2Node_EnhancedInputActionEvent_11(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Map_ZoomOut_K2Node_EnhancedInputActionEvent_10(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Map_ZoomOut_K2Node_EnhancedInputActionEvent_9(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Map_ZoomOut_K2Node_EnhancedInputActionEvent_8(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Map_ToggleFilterMode_K2Node_EnhancedInputActionEvent_7(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Map_ActivateAllFilter_K2Node_EnhancedInputActionEvent_6(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Map_SleepWaitMenu_K2Node_EnhancedInputActionEvent_5(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Map_ToggleDetails_K2Node_EnhancedInputActionEvent_4(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void Finished_0D4004AB4432A98E562C498FBF3C7BDC();
	void Finished_46BB16CB48B132F974927F9B0F73A290();
	void Finished_7DA045224B977D96B7602CB3FE52C507();
	void Finished_0A4D7BC2493526EA396B4B8139B1879A();
	void Finished_3135C62D461DB19E05845D9F66403C3E();
	void Finished_BEB95DDD47A6BD948424FD855BCB499A();
	void InpActEvt_IA_UI_Specific_Map_HideShowDetails_K2Node_EnhancedInputActionEvent_3(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Map_MouseDrag_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Map_MouseDrag_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UI_Specific_Map_MouseDrag_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void BP_OnTirggeringActionCommited();
	void UpdateAreaDateTime(const class FText& Text);
	void OnFocus();
	void UnbindIconDelegates();
	void OnMouseUsedOnSlider();
	void BndEvt__WBP_MapWidget_MapImage_K2Node_ComponentBoundEvent_1_HoverDelegate__DelegateSignature(class UUserWidget* Target, const struct FGeometry& InGeometry, const struct FPointerEvent& InMouseEvent);
	void BndEvt__WBP_MapWidget_MapImage_K2Node_ComponentBoundEvent_4_MouseEventDelegate__DelegateSignature(class UUserWidget* Target, const struct FGeometry& InGeometry, const struct FPointerEvent& InMouseEvent);
	void Destruct();
	void OnMapSetup(const class UObject* MapBrushObject, const struct FVector2D& OriginalMapSize);
	void OnSyncMouseWithCursorRequested();
	void OnIconCreated(class UCommonUserWidget* NewMapIcon, const struct FLegacyMapMenuIconProperties& Data);
	void OnCursorHoverIcon(class UCommonUserWidget* HoveredIcon);
	void OnCursorUnhoverIcon(class UCommonUserWidget* UnhoveredIcon);
	void OnPlayerMarkerRequested();
	void OnMapInputMethodChanged(ECommonInputType NewInputType);
	void BndEvt__WBP_Modern_MapWidget_MapIconFilter_K2Node_ComponentBoundEvent_6_OnFilterFocussed__DelegateSignature(bool IsFocus);
	void HideQuestDisplayWithAnimation();
	void HideMapAreaWithAniamtion();
	void HideFiltersWithAnimation();
	void ShowQuestDisplayWithAnimation();
	void ShowMapAreaWithAnimation();
	void ShowFilterWithAnimation();
	void HandleToggleDetailsCooldown();
	void BndEvt__WBP_Modern_MapWidget_ZoomSliderSmooth_K2Node_ComponentBoundEvent_7_OnZoomLevelChangedDelegate__DelegateSignature(float sliderValue);
	void OnLocalMapButtonClicked();
	void Construct();
	void OnZoomChanged(float NewZoom);
	void ExecuteUbergraph_WBP_Modern_MapWidget(int32 EntryPoint);

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Modern_MapWidget_C">();
	}
	static class UWBP_Modern_MapWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Modern_MapWidget_C>();
	}
};
static_assert(alignof(UWBP_Modern_MapWidget_C) == 0x000008, "Wrong alignment on UWBP_Modern_MapWidget_C");
static_assert(sizeof(UWBP_Modern_MapWidget_C) == 0x0008E0, "Wrong size on UWBP_Modern_MapWidget_C");
static_assert(offsetof(UWBP_Modern_MapWidget_C, UberGraphFrame) == 0x000788, "Member 'UWBP_Modern_MapWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, VFooterViewModel) == 0x000790, "Member 'UWBP_Modern_MapWidget_C::VFooterViewModel' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, VSleepWaitMenuViewModel) == 0x000798, "Member 'UWBP_Modern_MapWidget_C::VSleepWaitMenuViewModel' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, QuestDisplayFadeOut) == 0x0007A0, "Member 'UWBP_Modern_MapWidget_C::QuestDisplayFadeOut' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, MapAreaFadeOut) == 0x0007A8, "Member 'UWBP_Modern_MapWidget_C::MapAreaFadeOut' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, FiltersFadeOut) == 0x0007B0, "Member 'UWBP_Modern_MapWidget_C::FiltersFadeOut' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, ActiveQuestDisplay) == 0x0007B8, "Member 'UWBP_Modern_MapWidget_C::ActiveQuestDisplay' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, IconFilterEffect) == 0x0007C0, "Member 'UWBP_Modern_MapWidget_C::IconFilterEffect' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, MapAreaDateTime) == 0x0007C8, "Member 'UWBP_Modern_MapWidget_C::MapAreaDateTime' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, MapImage) == 0x0007D0, "Member 'UWBP_Modern_MapWidget_C::MapImage' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, View) == 0x0007D8, "Member 'UWBP_Modern_MapWidget_C::View' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, ZoomSliderSmooth) == 0x0007E0, "Member 'UWBP_Modern_MapWidget_C::ZoomSliderSmooth' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, IconClickedDispatcher) == 0x0007E8, "Member 'UWBP_Modern_MapWidget_C::IconClickedDispatcher' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, PlayerMarkerDispatcher) == 0x0007F8, "Member 'UWBP_Modern_MapWidget_C::PlayerMarkerDispatcher' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, IsNavigatingOnFilter) == 0x000808, "Member 'UWBP_Modern_MapWidget_C::IsNavigatingOnFilter' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, RequestChangeMapDispatcher) == 0x000810, "Member 'UWBP_Modern_MapWidget_C::RequestChangeMapDispatcher' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, IsWorldMap) == 0x000820, "Member 'UWBP_Modern_MapWidget_C::IsWorldMap' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, Number_Of_Dots) == 0x000824, "Member 'UWBP_Modern_MapWidget_C::Number_Of_Dots' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, PlayerIcon) == 0x000828, "Member 'UWBP_Modern_MapWidget_C::PlayerIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, RequestSleepWaitMenu) == 0x000878, "Member 'UWBP_Modern_MapWidget_C::RequestSleepWaitMenu' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, bAreDetailsHidden) == 0x000888, "Member 'UWBP_Modern_MapWidget_C::bAreDetailsHidden' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, ToggleDetailsCooldownDuration) == 0x00088C, "Member 'UWBP_Modern_MapWidget_C::ToggleDetailsCooldownDuration' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, bIsToggleDetailsOnCooldown) == 0x000890, "Member 'UWBP_Modern_MapWidget_C::bIsToggleDetailsOnCooldown' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, bIsInFadeAnimation) == 0x000891, "Member 'UWBP_Modern_MapWidget_C::bIsInFadeAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, ModernMapPage) == 0x000898, "Member 'UWBP_Modern_MapWidget_C::ModernMapPage' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, PreviousZOrder) == 0x0008C0, "Member 'UWBP_Modern_MapWidget_C::PreviousZOrder' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, bStartedZoomIn) == 0x0008C4, "Member 'UWBP_Modern_MapWidget_C::bStartedZoomIn' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, bIsUsingWheel) == 0x0008C5, "Member 'UWBP_Modern_MapWidget_C::bIsUsingWheel' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, bMapOpenedClassicly) == 0x0008C6, "Member 'UWBP_Modern_MapWidget_C::bMapOpenedClassicly' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, bSetInitIcons) == 0x0008C7, "Member 'UWBP_Modern_MapWidget_C::bSetInitIcons' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, isInGameMenu) == 0x0008C8, "Member 'UWBP_Modern_MapWidget_C::isInGameMenu' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, FromSwapping) == 0x0008C9, "Member 'UWBP_Modern_MapWidget_C::FromSwapping' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapWidget_C, BorderOffset) == 0x0008CC, "Member 'UWBP_Modern_MapWidget_C::BorderOffset' has a wrong offset!");

}

