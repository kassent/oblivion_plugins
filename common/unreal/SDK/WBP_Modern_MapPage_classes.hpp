#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Modern_MapPage

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Altar_structs.hpp"
#include "Altar_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Modern_MapPage.WBP_Modern_MapPage_C
// 0x0128 (0x05F0 - 0x04C8)
class UWBP_Modern_MapPage_C final : public UVLegacyMapMenuMapPage
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVMapMenuViewModel*                     VMapMenuViewModel;                                 // 0x04D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, DuplicateTransient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UVMapPageViewModel*                     VMapPageViewModel;                                 // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, Transient, DuplicateTransient, RepSkip, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UWBP_Modern_MapWidget_C*                MapWidget;                                         // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ELegacyMapMenuPage                            Page;                                              // 0x04E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              LastMousePosition;                                 // 0x04F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMouseButtonHeld;                                 // 0x0500(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              LastCursorPosition;                                // 0x0508(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_LegacyMenu_MapIcon_C*              LastHoveredIcon;                                   // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_LegacyMenu_MapIcon_C*              LastIconClicked;                                   // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CursorSensitivity;                                 // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              TumbstickDeadZone;                                 // 0x0530(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsIconClicked;                                     // 0x0540(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FVector2D& VirtualCurorPosition)> RequestMapChangeDispatcher; // 0x0548(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(int32 KeyID, bool NewVisibility)> IconHoverVisibility;             // 0x0558(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FVector2D                              MainWorldMapSizeOverride;                          // 0x0568(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              DLCWorldMapSizeOverride;                           // 0x0578(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LocalMapSizeOverride;                              // 0x0588(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              SleepWaitMenuRequested;                            // 0x0598(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FVector                                OblivionWorldMarkerPosition;                       // 0x05A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldUpdateZoomOnMapReset;                        // 0x05C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C1[0x7];                                      // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterial>               MainWorldMaterial;                                 // 0x05C8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash)

public:
	void BndEvt__WBP_OriginalMenu_MapPage_Updated_MapWidget_K2Node_ComponentBoundEvent_0_RequestChangeMapDispatcher__DelegateSignature(const struct FVector2D& VirtualCursorPosition);
	void ClearFogData();
	void Construct();
	void CreateSleepWaitMenu();
	void Destruct();
	void ExecuteUbergraph_WBP_Modern_MapPage(int32 EntryPoint);
	void Fog_Setup();
	void FogPart();
	void HandleOnMapRequestChangeMap(const struct FVector2D& VirtualCursorPosition);
	void HandleSleepWaitRequest();
	void InitFooter(class UWBP_Modern_Menu_Player_Footer_C* Footer);
	void InitializeMap();
	void MapPart();
	void On_Update_Active_Quest(const struct FLegacyMapMenuQuestProperties& NewActiveQuest);
	void OnFocus();
	void OnIconClickedEvent(const class FString& IconAddress);
	void OnMapClicked(const struct FVector2D& MapPosition);
	void ResetMapTransform();
	void SendPlayerMarkerHandler(const struct FVector2D& MapPosition);
	void SetViewModelReference(class UVMapPageViewModel* ViewModel);
	void SetVMapPageViewModel(class UVMapPageViewModel* ViewModel);
	void Sync_Virtual_Cursor_Position(const struct FVector2D& NewVirtualCursorPosition);
	void Update_Icons(TArray<struct FLegacyMapMenuIconProperties>& NewIcons);
	void UpdateActiveQuest(const struct FLegacyMapMenuQuestProperties& NewActiveQuestData);
	void UpdateAreaDateTime(const class FText& Text);
	void UpdateHasTriedToFastTravel(bool NewValue);
	void UpdateLocalMapProperties(const struct FLegacyMapMenuLocalMapProperties& Properties);
	void UpdateMapPosition(const struct FVector2D& Value);
	void UpdatePlayerMarkerPosition(const struct FVector2D& PlayerMarkerPosition);
	void UpdateWorldMapProperties(const struct FLegacyMapMenuWorldMapProperties& Properties);
	void UpdateZoom(double NewZoom);

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Modern_MapPage_C">();
	}
	static class UWBP_Modern_MapPage_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Modern_MapPage_C>();
	}
};
static_assert(alignof(UWBP_Modern_MapPage_C) == 0x000008, "Wrong alignment on UWBP_Modern_MapPage_C");
static_assert(sizeof(UWBP_Modern_MapPage_C) == 0x0005F0, "Wrong size on UWBP_Modern_MapPage_C");
static_assert(offsetof(UWBP_Modern_MapPage_C, UberGraphFrame) == 0x0004C8, "Member 'UWBP_Modern_MapPage_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapPage_C, VMapMenuViewModel) == 0x0004D0, "Member 'UWBP_Modern_MapPage_C::VMapMenuViewModel' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapPage_C, VMapPageViewModel) == 0x0004D8, "Member 'UWBP_Modern_MapPage_C::VMapPageViewModel' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapPage_C, MapWidget) == 0x0004E0, "Member 'UWBP_Modern_MapPage_C::MapWidget' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapPage_C, Page) == 0x0004E8, "Member 'UWBP_Modern_MapPage_C::Page' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapPage_C, LastMousePosition) == 0x0004F0, "Member 'UWBP_Modern_MapPage_C::LastMousePosition' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapPage_C, IsMouseButtonHeld) == 0x000500, "Member 'UWBP_Modern_MapPage_C::IsMouseButtonHeld' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapPage_C, LastCursorPosition) == 0x000508, "Member 'UWBP_Modern_MapPage_C::LastCursorPosition' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapPage_C, LastHoveredIcon) == 0x000518, "Member 'UWBP_Modern_MapPage_C::LastHoveredIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapPage_C, LastIconClicked) == 0x000520, "Member 'UWBP_Modern_MapPage_C::LastIconClicked' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapPage_C, CursorSensitivity) == 0x000528, "Member 'UWBP_Modern_MapPage_C::CursorSensitivity' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapPage_C, TumbstickDeadZone) == 0x000530, "Member 'UWBP_Modern_MapPage_C::TumbstickDeadZone' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapPage_C, IsIconClicked) == 0x000540, "Member 'UWBP_Modern_MapPage_C::IsIconClicked' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapPage_C, RequestMapChangeDispatcher) == 0x000548, "Member 'UWBP_Modern_MapPage_C::RequestMapChangeDispatcher' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapPage_C, IconHoverVisibility) == 0x000558, "Member 'UWBP_Modern_MapPage_C::IconHoverVisibility' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapPage_C, MainWorldMapSizeOverride) == 0x000568, "Member 'UWBP_Modern_MapPage_C::MainWorldMapSizeOverride' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapPage_C, DLCWorldMapSizeOverride) == 0x000578, "Member 'UWBP_Modern_MapPage_C::DLCWorldMapSizeOverride' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapPage_C, LocalMapSizeOverride) == 0x000588, "Member 'UWBP_Modern_MapPage_C::LocalMapSizeOverride' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapPage_C, SleepWaitMenuRequested) == 0x000598, "Member 'UWBP_Modern_MapPage_C::SleepWaitMenuRequested' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapPage_C, OblivionWorldMarkerPosition) == 0x0005A8, "Member 'UWBP_Modern_MapPage_C::OblivionWorldMarkerPosition' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapPage_C, ShouldUpdateZoomOnMapReset) == 0x0005C0, "Member 'UWBP_Modern_MapPage_C::ShouldUpdateZoomOnMapReset' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_MapPage_C, MainWorldMaterial) == 0x0005C8, "Member 'UWBP_Modern_MapPage_C::MainWorldMaterial' has a wrong offset!");

}

