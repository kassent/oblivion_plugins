#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BloodImpact

#include "Basic.hpp"

#include "BP_BloodImpact_classes.hpp"
#include "BP_BloodImpact_parameters.hpp"


namespace SDK
{

// Function BP_BloodImpact.BP_BloodImpact_C.Activate FPV Blood PP
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BloodImpact_C::Activate_FPV_Blood_PP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "Activate FPV Blood PP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BloodImpact.BP_BloodImpact_C.Activate FPV Distortion PP
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BloodImpact_C::Activate_FPV_Distortion_PP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "Activate FPV Distortion PP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BloodImpact.BP_BloodImpact_C.BindControllerMappingSwitch
// (BlueprintCallable, BlueprintEvent)

void ABP_BloodImpact_C::BindControllerMappingSwitch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "BindControllerMappingSwitch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BloodImpact.BP_BloodImpact_C.Blood PP Activate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_Fading                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BloodImpact_C::Blood_PP_Activate(bool Is_Fading)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "Blood PP Activate");

	Params::BP_BloodImpact_C_Blood_PP_Activate Parms{};

	Parms.Is_Fading = Is_Fading;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BloodImpact.BP_BloodImpact_C.Blood PP Deactivate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_Fading                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Fast                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BloodImpact_C::Blood_PP_Deactivate(bool Is_Fading, bool Is_Fast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "Blood PP Deactivate");

	Params::BP_BloodImpact_C_Blood_PP_Deactivate Parms{};

	Parms.Is_Fading = Is_Fading;
	Parms.Is_Fast = Is_Fast;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BloodImpact.BP_BloodImpact_C.Blood PP Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_BloodImpact_C::Blood_PP_Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "Blood PP Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BloodImpact.BP_BloodImpact_C.Blood PP Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_BloodImpact_C::Blood_PP_Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "Blood PP Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BloodImpact.BP_BloodImpact_C.BndEvt__BP_BloodImpact_BloodSpray VFX_K2Node_ComponentBoundEvent_0_OnNiagaraSystemFinished__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UNiagaraComponent*                PSystem                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_BloodImpact_C::BndEvt__BP_BloodImpact_BloodSpray_VFX_K2Node_ComponentBoundEvent_0_OnNiagaraSystemFinished__DelegateSignature(class UNiagaraComponent* PSystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "BndEvt__BP_BloodImpact_BloodSpray VFX_K2Node_ComponentBoundEvent_0_OnNiagaraSystemFinished__DelegateSignature");

	Params::BP_BloodImpact_C_BndEvt__BP_BloodImpact_BloodSpray_VFX_K2Node_ComponentBoundEvent_0_OnNiagaraSystemFinished__DelegateSignature Parms{};

	Parms.PSystem = PSystem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BloodImpact.BP_BloodImpact_C.Calculate PP Screen Position
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BloodImpact_C::Calculate_PP_Screen_Position()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "Calculate PP Screen Position");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BloodImpact.BP_BloodImpact_C.Calculate Simplified Niagara Data
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BloodImpact_C::Calculate_Simplified_Niagara_Data()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "Calculate Simplified Niagara Data");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BloodImpact.BP_BloodImpact_C.Call Fist Blood Event
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EVBloodColor                            Blood_Color_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EVHitSourceType                         Hit_Source_Type                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BloodImpact_C::Call_Fist_Blood_Event(EVBloodColor Blood_Color_0, EVHitSourceType Hit_Source_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "Call Fist Blood Event");

	Params::BP_BloodImpact_C_Call_Fist_Blood_Event Parms{};

	Parms.Blood_Color_0 = Blood_Color_0;
	Parms.Hit_Source_Type = Hit_Source_Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BloodImpact.BP_BloodImpact_C.Call Weapon Blood Event
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EVBloodColor                            Blood_Color_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BloodImpact_C::Call_Weapon_Blood_Event(EVBloodColor Blood_Color_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "Call Weapon Blood Event");

	Params::BP_BloodImpact_C_Call_Weapon_Blood_Event Parms{};

	Parms.Blood_Color_0 = Blood_Color_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BloodImpact.BP_BloodImpact_C.Distortion PP Activate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_Fading                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BloodImpact_C::Distortion_PP_Activate(bool Is_Fading)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "Distortion PP Activate");

	Params::BP_BloodImpact_C_Distortion_PP_Activate Parms{};

	Parms.Is_Fading = Is_Fading;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BloodImpact.BP_BloodImpact_C.Distortion PP Deactivate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_Fading                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BloodImpact_C::Distortion_PP_Deactivate(bool Is_Fading)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "Distortion PP Deactivate");

	Params::BP_BloodImpact_C_Distortion_PP_Deactivate Parms{};

	Parms.Is_Fading = Is_Fading;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BloodImpact.BP_BloodImpact_C.Distortion PP Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_BloodImpact_C::Distortion_PP_Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "Distortion PP Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BloodImpact.BP_BloodImpact_C.Distortion PP Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_BloodImpact_C::Distortion_PP_Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "Distortion PP Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BloodImpact.BP_BloodImpact_C.End Tick
// (BlueprintCallable, BlueprintEvent)

void ABP_BloodImpact_C::End_Tick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "End Tick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BloodImpact.BP_BloodImpact_C.ExecuteUbergraph_BP_BloodImpact
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BloodImpact_C::ExecuteUbergraph_BP_BloodImpact(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "ExecuteUbergraph_BP_BloodImpact");

	Params::BP_BloodImpact_C_ExecuteUbergraph_BP_BloodImpact Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BloodImpact.BP_BloodImpact_C.OnChangeFirstPerson
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsFirstPerson                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BloodImpact_C::OnChangeFirstPerson(bool bIsFirstPerson)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "OnChangeFirstPerson");

	Params::BP_BloodImpact_C_OnChangeFirstPerson Parms{};

	Parms.bIsFirstPerson = bIsFirstPerson;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BloodImpact.BP_BloodImpact_C.OnStartPlay
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damages                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EVBloodColor                            BloodColor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsUsingWeapon                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const class AActor*                     Attacker                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   TargetMaxHP                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDoesBeginInFirstPerson                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EVHitSourceType                         HitSourceType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UStaticMeshComponent*       WeaponComp                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FVector_NetQuantizeNormal& ImpactNormal                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// EVHitSourceWeaponType                   HitWeaponType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitDirection                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BloodImpact_C::OnStartPlay(float Damages, EVBloodColor BloodColor, bool bIsUsingWeapon, class AActor* Target, const class AActor* Attacker, float TargetMaxHP, bool bDoesBeginInFirstPerson, EVHitSourceType HitSourceType, const class UStaticMeshComponent* WeaponComp, const struct FVector_NetQuantizeNormal& ImpactNormal, EVHitSourceWeaponType HitWeaponType, const struct FVector& HitDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "OnStartPlay");

	Params::BP_BloodImpact_C_OnStartPlay Parms{};

	Parms.Damages = Damages;
	Parms.BloodColor = BloodColor;
	Parms.bIsUsingWeapon = bIsUsingWeapon;
	Parms.Target = Target;
	Parms.Attacker = Attacker;
	Parms.TargetMaxHP = TargetMaxHP;
	Parms.bDoesBeginInFirstPerson = bDoesBeginInFirstPerson;
	Parms.HitSourceType = HitSourceType;
	Parms.WeaponComp = WeaponComp;
	Parms.ImpactNormal = std::move(ImpactNormal);
	Parms.HitWeaponType = HitWeaponType;
	Parms.HitDirection = std::move(HitDirection);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BloodImpact.BP_BloodImpact_C.OnSwitchToGameMappings
// (BlueprintCallable, BlueprintEvent)

void ABP_BloodImpact_C::OnSwitchToGameMappings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "OnSwitchToGameMappings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BloodImpact.BP_BloodImpact_C.OnSwitchToUIMappings
// (BlueprintCallable, BlueprintEvent)

void ABP_BloodImpact_C::OnSwitchToUIMappings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "OnSwitchToUIMappings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BloodImpact.BP_BloodImpact_C.Preset Decal Dynamic Material
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BloodImpact_C::Preset_Decal_Dynamic_Material()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "Preset Decal Dynamic Material");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BloodImpact.BP_BloodImpact_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_BloodImpact_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BloodImpact.BP_BloodImpact_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_BloodImpact_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BloodImpact.BP_BloodImpact_C.ReceiveParticleData
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FBasicParticleData>&Data                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UNiagaraSystem*                   NiagaraSystem                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   SimulationPositionOffset                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BloodImpact_C::ReceiveParticleData(const TArray<struct FBasicParticleData>& Data, class UNiagaraSystem* NiagaraSystem, const struct FVector& SimulationPositionOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "ReceiveParticleData");

	Params::BP_BloodImpact_C_ReceiveParticleData Parms{};

	Parms.Data = std::move(Data);
	Parms.NiagaraSystem = NiagaraSystem;
	Parms.SimulationPositionOffset = std::move(SimulationPositionOffset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BloodImpact.BP_BloodImpact_C.Send Random Offsets To Blood PP
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BloodImpact_C::Send_Random_Offsets_To_Blood_PP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "Send Random Offsets To Blood PP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BloodImpact.BP_BloodImpact_C.Send Random Offsets To Distortion PP
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BloodImpact_C::Send_Random_Offsets_To_Distortion_PP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "Send Random Offsets To Distortion PP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BloodImpact.BP_BloodImpact_C.Setup Blood Niagara Systems & Variables
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BloodImpact_C::Setup_Blood_Niagara_Systems___Variables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "Setup Blood Niagara Systems & Variables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BloodImpact.BP_BloodImpact_C.Spawn Blood Decal
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BloodImpact_C::Spawn_Blood_Decal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "Spawn Blood Decal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BloodImpact.BP_BloodImpact_C.Stop Blood PP
// (BlueprintCallable, BlueprintEvent)

void ABP_BloodImpact_C::Stop_Blood_PP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "Stop Blood PP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BloodImpact.BP_BloodImpact_C.Stop Distortion PP
// (BlueprintCallable, BlueprintEvent)

void ABP_BloodImpact_C::Stop_Distortion_PP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "Stop Distortion PP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BloodImpact.BP_BloodImpact_C.Store Data From Blood Event
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Event_Damages                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   Event_Blood_Color                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Event_Is_Weapon                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Event_Target_Actor                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Event_Attacker_Actor                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  EventTarget_Max_HP                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Event_Does_Begin_in_FPV                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EVHitSourceType                         Event_Hit_Source_Type                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMeshComponent*             Event_Weapon_Mesh                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FVector_NetQuantizeNormal& Event_Impact_Normal                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// EVHitSourceWeaponType                   Event_Hit_Weapon_Type                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Event_Hit_Direction                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BloodImpact_C::Store_Data_From_Blood_Event(double Event_Damages, uint8 Event_Blood_Color, bool Event_Is_Weapon, class AActor* Event_Target_Actor, class AActor* Event_Attacker_Actor, double EventTarget_Max_HP, bool Event_Does_Begin_in_FPV, EVHitSourceType Event_Hit_Source_Type, class UStaticMeshComponent* Event_Weapon_Mesh, const struct FVector_NetQuantizeNormal& Event_Impact_Normal, EVHitSourceWeaponType Event_Hit_Weapon_Type, const struct FVector& Event_Hit_Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "Store Data From Blood Event");

	Params::BP_BloodImpact_C_Store_Data_From_Blood_Event Parms{};

	Parms.Event_Damages = Event_Damages;
	Parms.Event_Blood_Color = Event_Blood_Color;
	Parms.Event_Is_Weapon = Event_Is_Weapon;
	Parms.Event_Target_Actor = Event_Target_Actor;
	Parms.Event_Attacker_Actor = Event_Attacker_Actor;
	Parms.EventTarget_Max_HP = EventTarget_Max_HP;
	Parms.Event_Does_Begin_in_FPV = Event_Does_Begin_in_FPV;
	Parms.Event_Hit_Source_Type = Event_Hit_Source_Type;
	Parms.Event_Weapon_Mesh = Event_Weapon_Mesh;
	Parms.Event_Impact_Normal = std::move(Event_Impact_Normal);
	Parms.Event_Hit_Weapon_Type = Event_Hit_Weapon_Type;
	Parms.Event_Hit_Direction = std::move(Event_Hit_Direction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BloodImpact.BP_BloodImpact_C.Store Particle Colision Data
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Normal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BloodImpact_C::Store_Particle_Colision_Data(const struct FVector& position, const struct FVector& Normal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "Store Particle Colision Data");

	Params::BP_BloodImpact_C_Store_Particle_Colision_Data Parms{};

	Parms.position = std::move(position);
	Parms.Normal = std::move(Normal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BloodImpact.BP_BloodImpact_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_BloodImpact_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BloodImpact_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

