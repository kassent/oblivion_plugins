#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ASM_CharacterLocomotionSneaking

#include "Basic.hpp"


namespace SDK::Params
{

// Function ASM_CharacterLocomotionSneaking.ASM_CharacterLocomotionSneaking_C.ExecuteUbergraph_ASM_CharacterLocomotionSneaking
// 0x0030 (0x0030 - 0x0000)
struct ASM_CharacterLocomotionSneaking_C_ExecuteUbergraph_ASM_CharacterLocomotionSneaking final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVStateMachineComponent*                CallFunc_GetOwningStateMachineComponent_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AVPairedPawn*                           K2Node_DynamicCast_AsVPaired_Pawn;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ASM_CharacterLocomotionSneaking_C_ExecuteUbergraph_ASM_CharacterLocomotionSneaking) == 0x000008, "Wrong alignment on ASM_CharacterLocomotionSneaking_C_ExecuteUbergraph_ASM_CharacterLocomotionSneaking");
static_assert(sizeof(ASM_CharacterLocomotionSneaking_C_ExecuteUbergraph_ASM_CharacterLocomotionSneaking) == 0x000030, "Wrong size on ASM_CharacterLocomotionSneaking_C_ExecuteUbergraph_ASM_CharacterLocomotionSneaking");
static_assert(offsetof(ASM_CharacterLocomotionSneaking_C_ExecuteUbergraph_ASM_CharacterLocomotionSneaking, EntryPoint) == 0x000000, "Member 'ASM_CharacterLocomotionSneaking_C_ExecuteUbergraph_ASM_CharacterLocomotionSneaking::EntryPoint' has a wrong offset!");
static_assert(offsetof(ASM_CharacterLocomotionSneaking_C_ExecuteUbergraph_ASM_CharacterLocomotionSneaking, CallFunc_GetOwningStateMachineComponent_ReturnValue) == 0x000008, "Member 'ASM_CharacterLocomotionSneaking_C_ExecuteUbergraph_ASM_CharacterLocomotionSneaking::CallFunc_GetOwningStateMachineComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ASM_CharacterLocomotionSneaking_C_ExecuteUbergraph_ASM_CharacterLocomotionSneaking, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ASM_CharacterLocomotionSneaking_C_ExecuteUbergraph_ASM_CharacterLocomotionSneaking::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ASM_CharacterLocomotionSneaking_C_ExecuteUbergraph_ASM_CharacterLocomotionSneaking, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'ASM_CharacterLocomotionSneaking_C_ExecuteUbergraph_ASM_CharacterLocomotionSneaking::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ASM_CharacterLocomotionSneaking_C_ExecuteUbergraph_ASM_CharacterLocomotionSneaking, K2Node_DynamicCast_AsVPaired_Pawn) == 0x000020, "Member 'ASM_CharacterLocomotionSneaking_C_ExecuteUbergraph_ASM_CharacterLocomotionSneaking::K2Node_DynamicCast_AsVPaired_Pawn' has a wrong offset!");
static_assert(offsetof(ASM_CharacterLocomotionSneaking_C_ExecuteUbergraph_ASM_CharacterLocomotionSneaking, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ASM_CharacterLocomotionSneaking_C_ExecuteUbergraph_ASM_CharacterLocomotionSneaking::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

