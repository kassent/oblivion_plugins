#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Modern_MapPage

#include "Basic.hpp"

#include "Altar_structs.hpp"
#include "Slate_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.BndEvt__WBP_OriginalMenu_MapPage_Updated_MapWidget_K2Node_ComponentBoundEvent_0_RequestChangeMapDispatcher__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_Modern_MapPage_C_BndEvt__WBP_OriginalMenu_MapPage_Updated_MapWidget_K2Node_ComponentBoundEvent_0_RequestChangeMapDispatcher__DelegateSignature final
{
public:
	struct FVector2D                              VirtualCursorPosition;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapPage_C_BndEvt__WBP_OriginalMenu_MapPage_Updated_MapWidget_K2Node_ComponentBoundEvent_0_RequestChangeMapDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Modern_MapPage_C_BndEvt__WBP_OriginalMenu_MapPage_Updated_MapWidget_K2Node_ComponentBoundEvent_0_RequestChangeMapDispatcher__DelegateSignature");
static_assert(sizeof(WBP_Modern_MapPage_C_BndEvt__WBP_OriginalMenu_MapPage_Updated_MapWidget_K2Node_ComponentBoundEvent_0_RequestChangeMapDispatcher__DelegateSignature) == 0x000010, "Wrong size on WBP_Modern_MapPage_C_BndEvt__WBP_OriginalMenu_MapPage_Updated_MapWidget_K2Node_ComponentBoundEvent_0_RequestChangeMapDispatcher__DelegateSignature");
static_assert(offsetof(WBP_Modern_MapPage_C_BndEvt__WBP_OriginalMenu_MapPage_Updated_MapWidget_K2Node_ComponentBoundEvent_0_RequestChangeMapDispatcher__DelegateSignature, VirtualCursorPosition) == 0x000000, "Member 'WBP_Modern_MapPage_C_BndEvt__WBP_OriginalMenu_MapPage_Updated_MapWidget_K2Node_ComponentBoundEvent_0_RequestChangeMapDispatcher__DelegateSignature::VirtualCursorPosition' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.ClearFogData
// 0x0002 (0x0002 - 0x0000)
struct WBP_Modern_MapPage_C_ClearFogData final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapPage_C_ClearFogData) == 0x000001, "Wrong alignment on WBP_Modern_MapPage_C_ClearFogData");
static_assert(sizeof(WBP_Modern_MapPage_C_ClearFogData) == 0x000002, "Wrong size on WBP_Modern_MapPage_C_ClearFogData");
static_assert(offsetof(WBP_Modern_MapPage_C_ClearFogData, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_Modern_MapPage_C_ClearFogData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_ClearFogData, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'WBP_Modern_MapPage_C_ClearFogData::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.ExecuteUbergraph_WBP_Modern_MapPage
// 0x0198 (0x0198 - 0x0000)
struct WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVUINavigationGlobalSubsystem*          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& IconAddress)> K2Node_CreateDelegate_OutputDelegate;          // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FVector2D& position)> K2Node_CreateDelegate_OutputDelegate_1;        // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVMapPageViewModel*                     K2Node_CustomEvent_Viewmodel;                      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_IconAddress;                    // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& IconAddress)> K2Node_CreateDelegate_OutputDelegate_2;        // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_MapPosition;                    // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_VirtualCursorPosition;  // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Text;                           // 0x0078(0x0018)()
	TDelegate<void(const struct FVector2D& position)> K2Node_CreateDelegate_OutputDelegate_3;        // 0x0090(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLegacyMapMenuQuestProperties          K2Node_CustomEvent_NewActiveQuestData;             // 0x00A0(0x0098)(ConstParm)
	TScriptInterface<class IVEnhancedInputNavigable> CallFunc_NavigateToWidget_Widget_CastInput;     // 0x0138(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0148(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0158(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UWBP_Modern_MapPage_C>   CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0170(0x0028)(InstancedReference, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage) == 0x000008, "Wrong alignment on WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage");
static_assert(sizeof(WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage) == 0x000198, "Wrong size on WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage");
static_assert(offsetof(WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage, EntryPoint) == 0x000000, "Member 'WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage, K2Node_CustomEvent_Viewmodel) == 0x000030, "Member 'WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage::K2Node_CustomEvent_Viewmodel' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage, K2Node_CustomEvent_IconAddress) == 0x000038, "Member 'WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage::K2Node_CustomEvent_IconAddress' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage, K2Node_CreateDelegate_OutputDelegate_2) == 0x000048, "Member 'WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage, K2Node_CustomEvent_MapPosition) == 0x000058, "Member 'WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage::K2Node_CustomEvent_MapPosition' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage, K2Node_ComponentBoundEvent_VirtualCursorPosition) == 0x000068, "Member 'WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage::K2Node_ComponentBoundEvent_VirtualCursorPosition' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage, K2Node_CustomEvent_Text) == 0x000078, "Member 'WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage, K2Node_CreateDelegate_OutputDelegate_3) == 0x000090, "Member 'WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage, K2Node_CustomEvent_NewActiveQuestData) == 0x0000A0, "Member 'WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage::K2Node_CustomEvent_NewActiveQuestData' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage, CallFunc_NavigateToWidget_Widget_CastInput) == 0x000138, "Member 'WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage::CallFunc_NavigateToWidget_Widget_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage, K2Node_CreateDelegate_OutputDelegate_4) == 0x000148, "Member 'WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage, K2Node_CreateDelegate_OutputDelegate_5) == 0x000158, "Member 'WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage, CallFunc_Not_PreBool_ReturnValue) == 0x000168, "Member 'WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage, CallFunc_Not_PreBool_ReturnValue_1) == 0x000169, "Member 'WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000170, "Member 'WBP_Modern_MapPage_C_ExecuteUbergraph_WBP_Modern_MapPage::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.Fog Setup
// 0x0002 (0x0002 - 0x0000)
struct WBP_Modern_MapPage_C_Fog_Setup final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapPage_C_Fog_Setup) == 0x000001, "Wrong alignment on WBP_Modern_MapPage_C_Fog_Setup");
static_assert(sizeof(WBP_Modern_MapPage_C_Fog_Setup) == 0x000002, "Wrong size on WBP_Modern_MapPage_C_Fog_Setup");
static_assert(offsetof(WBP_Modern_MapPage_C_Fog_Setup, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_Modern_MapPage_C_Fog_Setup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_Fog_Setup, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'WBP_Modern_MapPage_C_Fog_Setup::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.FogPart
// 0x0010 (0x0010 - 0x0000)
struct WBP_Modern_MapPage_C_FogPart final
{
public:
	class UMaterial*                              CallFunc_LoadFogMaterial_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_LoadFogRenderTarget_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapPage_C_FogPart) == 0x000008, "Wrong alignment on WBP_Modern_MapPage_C_FogPart");
static_assert(sizeof(WBP_Modern_MapPage_C_FogPart) == 0x000010, "Wrong size on WBP_Modern_MapPage_C_FogPart");
static_assert(offsetof(WBP_Modern_MapPage_C_FogPart, CallFunc_LoadFogMaterial_ReturnValue) == 0x000000, "Member 'WBP_Modern_MapPage_C_FogPart::CallFunc_LoadFogMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_FogPart, CallFunc_LoadFogRenderTarget_ReturnValue) == 0x000008, "Member 'WBP_Modern_MapPage_C_FogPart::CallFunc_LoadFogRenderTarget_ReturnValue' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.HandleOnMapRequestChangeMap
// 0x0010 (0x0010 - 0x0000)
struct WBP_Modern_MapPage_C_HandleOnMapRequestChangeMap final
{
public:
	struct FVector2D                              VirtualCursorPosition;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapPage_C_HandleOnMapRequestChangeMap) == 0x000008, "Wrong alignment on WBP_Modern_MapPage_C_HandleOnMapRequestChangeMap");
static_assert(sizeof(WBP_Modern_MapPage_C_HandleOnMapRequestChangeMap) == 0x000010, "Wrong size on WBP_Modern_MapPage_C_HandleOnMapRequestChangeMap");
static_assert(offsetof(WBP_Modern_MapPage_C_HandleOnMapRequestChangeMap, VirtualCursorPosition) == 0x000000, "Member 'WBP_Modern_MapPage_C_HandleOnMapRequestChangeMap::VirtualCursorPosition' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.InitFooter
// 0x0008 (0x0008 - 0x0000)
struct WBP_Modern_MapPage_C_InitFooter final
{
public:
	class UWBP_Modern_Menu_Player_Footer_C*       Footer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapPage_C_InitFooter) == 0x000008, "Wrong alignment on WBP_Modern_MapPage_C_InitFooter");
static_assert(sizeof(WBP_Modern_MapPage_C_InitFooter) == 0x000008, "Wrong size on WBP_Modern_MapPage_C_InitFooter");
static_assert(offsetof(WBP_Modern_MapPage_C_InitFooter, Footer) == 0x000000, "Member 'WBP_Modern_MapPage_C_InitFooter::Footer' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.InitializeMap
// 0x00F0 (0x00F0 - 0x0000)
struct WBP_Modern_MapPage_C_InitializeMap final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_LoadLocalMapMaterial_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              K2Node_DynamicCast_AsMaterial;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVMapPageViewModel*                     CallFunc_GetWorldMapMenuViewModel_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLegacyMapMenuWorldMapProperties       CallFunc_GetWorldMapProperties_ReturnValue;        // 0x0030(0x0020)(ConstParm, NoDestructor)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLegacyMapMenuLocalMapProperties       K2Node_MakeStruct_LegacyMapMenuLocalMapProperties; // 0x0060(0x0028)(NoDestructor)
	class UVMapPageViewModel*                     CallFunc_GetWorldMapMenuViewModel_ReturnValue_1;   // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FVector2D& VirtualCursorPosition)> K2Node_CreateDelegate_OutputDelegate; // 0x0090(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLegacyMapMenuWorldMapProperties       CallFunc_GetWorldMapProperties_ReturnValue_1;      // 0x00A0(0x0020)(ConstParm, NoDestructor)
	class UObject*                                K2Node_Select_Default_1;                           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FLegacyMapMenuWorldMapProperties       K2Node_MakeStruct_LegacyMapMenuWorldMapProperties; // 0x00C8(0x0020)(NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapPage_C_InitializeMap) == 0x000008, "Wrong alignment on WBP_Modern_MapPage_C_InitializeMap");
static_assert(sizeof(WBP_Modern_MapPage_C_InitializeMap) == 0x0000F0, "Wrong size on WBP_Modern_MapPage_C_InitializeMap");
static_assert(offsetof(WBP_Modern_MapPage_C_InitializeMap, Temp_bool_Variable) == 0x000000, "Member 'WBP_Modern_MapPage_C_InitializeMap::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_InitializeMap, Temp_bool_Variable_1) == 0x000001, "Member 'WBP_Modern_MapPage_C_InitializeMap::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_InitializeMap, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000008, "Member 'WBP_Modern_MapPage_C_InitializeMap::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_InitializeMap, CallFunc_LoadLocalMapMaterial_ReturnValue) == 0x000010, "Member 'WBP_Modern_MapPage_C_InitializeMap::CallFunc_LoadLocalMapMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_InitializeMap, K2Node_DynamicCast_AsMaterial) == 0x000018, "Member 'WBP_Modern_MapPage_C_InitializeMap::K2Node_DynamicCast_AsMaterial' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_InitializeMap, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_Modern_MapPage_C_InitializeMap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_InitializeMap, CallFunc_GetWorldMapMenuViewModel_ReturnValue) == 0x000028, "Member 'WBP_Modern_MapPage_C_InitializeMap::CallFunc_GetWorldMapMenuViewModel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_InitializeMap, CallFunc_GetWorldMapProperties_ReturnValue) == 0x000030, "Member 'WBP_Modern_MapPage_C_InitializeMap::CallFunc_GetWorldMapProperties_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_InitializeMap, K2Node_Select_Default) == 0x000050, "Member 'WBP_Modern_MapPage_C_InitializeMap::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_InitializeMap, K2Node_MakeStruct_LegacyMapMenuLocalMapProperties) == 0x000060, "Member 'WBP_Modern_MapPage_C_InitializeMap::K2Node_MakeStruct_LegacyMapMenuLocalMapProperties' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_InitializeMap, CallFunc_GetWorldMapMenuViewModel_ReturnValue_1) == 0x000088, "Member 'WBP_Modern_MapPage_C_InitializeMap::CallFunc_GetWorldMapMenuViewModel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_InitializeMap, K2Node_CreateDelegate_OutputDelegate) == 0x000090, "Member 'WBP_Modern_MapPage_C_InitializeMap::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_InitializeMap, CallFunc_GetWorldMapProperties_ReturnValue_1) == 0x0000A0, "Member 'WBP_Modern_MapPage_C_InitializeMap::CallFunc_GetWorldMapProperties_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_InitializeMap, K2Node_Select_Default_1) == 0x0000C0, "Member 'WBP_Modern_MapPage_C_InitializeMap::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_InitializeMap, K2Node_MakeStruct_LegacyMapMenuWorldMapProperties) == 0x0000C8, "Member 'WBP_Modern_MapPage_C_InitializeMap::K2Node_MakeStruct_LegacyMapMenuWorldMapProperties' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_InitializeMap, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E8, "Member 'WBP_Modern_MapPage_C_InitializeMap::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.MapPart
// 0x0038 (0x0038 - 0x0000)
struct WBP_Modern_MapPage_C_MapPart final
{
public:
	class UMaterial*                              CallFunc_GetLocalMapSobelMaterial_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              CallFunc_LoadLocalMapSobelMaterial_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_LoadLocalMapMaterial_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_GetSecondPassRenderTarget_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_LoadSecondPassRenderTarget_ReturnValue;   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapPage_C_MapPart) == 0x000008, "Wrong alignment on WBP_Modern_MapPage_C_MapPart");
static_assert(sizeof(WBP_Modern_MapPage_C_MapPart) == 0x000038, "Wrong size on WBP_Modern_MapPage_C_MapPart");
static_assert(offsetof(WBP_Modern_MapPage_C_MapPart, CallFunc_GetLocalMapSobelMaterial_ReturnValue) == 0x000000, "Member 'WBP_Modern_MapPage_C_MapPart::CallFunc_GetLocalMapSobelMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_MapPart, CallFunc_LoadLocalMapSobelMaterial_ReturnValue) == 0x000008, "Member 'WBP_Modern_MapPage_C_MapPart::CallFunc_LoadLocalMapSobelMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_MapPart, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_Modern_MapPage_C_MapPart::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_MapPart, CallFunc_LoadLocalMapMaterial_ReturnValue) == 0x000018, "Member 'WBP_Modern_MapPage_C_MapPart::CallFunc_LoadLocalMapMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_MapPart, CallFunc_GetSecondPassRenderTarget_ReturnValue) == 0x000020, "Member 'WBP_Modern_MapPage_C_MapPart::CallFunc_GetSecondPassRenderTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_MapPart, CallFunc_LoadSecondPassRenderTarget_ReturnValue) == 0x000028, "Member 'WBP_Modern_MapPage_C_MapPart::CallFunc_LoadSecondPassRenderTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_MapPart, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'WBP_Modern_MapPage_C_MapPart::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_MapPart, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'WBP_Modern_MapPage_C_MapPart::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.On Update Active Quest
// 0x0098 (0x0098 - 0x0000)
struct WBP_Modern_MapPage_C_On_Update_Active_Quest final
{
public:
	struct FLegacyMapMenuQuestProperties          NewActiveQuest;                                    // 0x0000(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Modern_MapPage_C_On_Update_Active_Quest) == 0x000008, "Wrong alignment on WBP_Modern_MapPage_C_On_Update_Active_Quest");
static_assert(sizeof(WBP_Modern_MapPage_C_On_Update_Active_Quest) == 0x000098, "Wrong size on WBP_Modern_MapPage_C_On_Update_Active_Quest");
static_assert(offsetof(WBP_Modern_MapPage_C_On_Update_Active_Quest, NewActiveQuest) == 0x000000, "Member 'WBP_Modern_MapPage_C_On_Update_Active_Quest::NewActiveQuest' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.OnIconClickedEvent
// 0x0010 (0x0010 - 0x0000)
struct WBP_Modern_MapPage_C_OnIconClickedEvent final
{
public:
	class FString                                 IconAddress;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapPage_C_OnIconClickedEvent) == 0x000008, "Wrong alignment on WBP_Modern_MapPage_C_OnIconClickedEvent");
static_assert(sizeof(WBP_Modern_MapPage_C_OnIconClickedEvent) == 0x000010, "Wrong size on WBP_Modern_MapPage_C_OnIconClickedEvent");
static_assert(offsetof(WBP_Modern_MapPage_C_OnIconClickedEvent, IconAddress) == 0x000000, "Member 'WBP_Modern_MapPage_C_OnIconClickedEvent::IconAddress' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.OnMapClicked
// 0x0010 (0x0010 - 0x0000)
struct WBP_Modern_MapPage_C_OnMapClicked final
{
public:
	struct FVector2D                              MapPosition;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapPage_C_OnMapClicked) == 0x000008, "Wrong alignment on WBP_Modern_MapPage_C_OnMapClicked");
static_assert(sizeof(WBP_Modern_MapPage_C_OnMapClicked) == 0x000010, "Wrong size on WBP_Modern_MapPage_C_OnMapClicked");
static_assert(offsetof(WBP_Modern_MapPage_C_OnMapClicked, MapPosition) == 0x000000, "Member 'WBP_Modern_MapPage_C_OnMapClicked::MapPosition' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.ResetMapTransform
// 0x0050 (0x0050 - 0x0000)
struct WBP_Modern_MapPage_C_ResetMapTransform final
{
public:
	float                                         TEST_CurrentZoom;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0010(0x0020)(NoDestructor)
	struct FVector2D                              CallFunc_GetOriginalMapSize_ReturnValue;           // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapPage_C_ResetMapTransform) == 0x000008, "Wrong alignment on WBP_Modern_MapPage_C_ResetMapTransform");
static_assert(sizeof(WBP_Modern_MapPage_C_ResetMapTransform) == 0x000050, "Wrong size on WBP_Modern_MapPage_C_ResetMapTransform");
static_assert(offsetof(WBP_Modern_MapPage_C_ResetMapTransform, TEST_CurrentZoom) == 0x000000, "Member 'WBP_Modern_MapPage_C_ResetMapTransform::TEST_CurrentZoom' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_ResetMapTransform, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'WBP_Modern_MapPage_C_ResetMapTransform::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_ResetMapTransform, K2Node_MakeStruct_Anchors) == 0x000010, "Member 'WBP_Modern_MapPage_C_ResetMapTransform::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_ResetMapTransform, CallFunc_GetOriginalMapSize_ReturnValue) == 0x000030, "Member 'WBP_Modern_MapPage_C_ResetMapTransform::CallFunc_GetOriginalMapSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_ResetMapTransform, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000040, "Member 'WBP_Modern_MapPage_C_ResetMapTransform::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_ResetMapTransform, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000048, "Member 'WBP_Modern_MapPage_C_ResetMapTransform::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.SendPlayerMarkerHandler
// 0x0060 (0x0060 - 0x0000)
struct WBP_Modern_MapPage_C_SendPlayerMarkerHandler final
{
public:
	struct FVector2D                              MapPosition;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector3f                              CallFunc_LocalMapToOblivionWorld_ReturnValue;      // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_VariableSet_OblivionWorldMarkerPosition_ImplicitCast; // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapPage_C_SendPlayerMarkerHandler) == 0x000008, "Wrong alignment on WBP_Modern_MapPage_C_SendPlayerMarkerHandler");
static_assert(sizeof(WBP_Modern_MapPage_C_SendPlayerMarkerHandler) == 0x000060, "Wrong size on WBP_Modern_MapPage_C_SendPlayerMarkerHandler");
static_assert(offsetof(WBP_Modern_MapPage_C_SendPlayerMarkerHandler, MapPosition) == 0x000000, "Member 'WBP_Modern_MapPage_C_SendPlayerMarkerHandler::MapPosition' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_SendPlayerMarkerHandler, CallFunc_BreakVector_X) == 0x000010, "Member 'WBP_Modern_MapPage_C_SendPlayerMarkerHandler::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_SendPlayerMarkerHandler, CallFunc_BreakVector_Y) == 0x000018, "Member 'WBP_Modern_MapPage_C_SendPlayerMarkerHandler::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_SendPlayerMarkerHandler, CallFunc_BreakVector_Z) == 0x000020, "Member 'WBP_Modern_MapPage_C_SendPlayerMarkerHandler::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_SendPlayerMarkerHandler, CallFunc_MakeVector2D_ReturnValue) == 0x000028, "Member 'WBP_Modern_MapPage_C_SendPlayerMarkerHandler::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_SendPlayerMarkerHandler, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000038, "Member 'WBP_Modern_MapPage_C_SendPlayerMarkerHandler::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_SendPlayerMarkerHandler, CallFunc_LocalMapToOblivionWorld_ReturnValue) == 0x00003C, "Member 'WBP_Modern_MapPage_C_SendPlayerMarkerHandler::CallFunc_LocalMapToOblivionWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_SendPlayerMarkerHandler, K2Node_VariableSet_OblivionWorldMarkerPosition_ImplicitCast) == 0x000048, "Member 'WBP_Modern_MapPage_C_SendPlayerMarkerHandler::K2Node_VariableSet_OblivionWorldMarkerPosition_ImplicitCast' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.SetViewModelReference
// 0x0008 (0x0008 - 0x0000)
struct WBP_Modern_MapPage_C_SetViewModelReference final
{
public:
	class UVMapPageViewModel*                     ViewModel;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapPage_C_SetViewModelReference) == 0x000008, "Wrong alignment on WBP_Modern_MapPage_C_SetViewModelReference");
static_assert(sizeof(WBP_Modern_MapPage_C_SetViewModelReference) == 0x000008, "Wrong size on WBP_Modern_MapPage_C_SetViewModelReference");
static_assert(offsetof(WBP_Modern_MapPage_C_SetViewModelReference, ViewModel) == 0x000000, "Member 'WBP_Modern_MapPage_C_SetViewModelReference::ViewModel' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.SetVMapPageViewModel
// 0x0028 (0x0028 - 0x0000)
struct WBP_Modern_MapPage_C_SetVMapPageViewModel final
{
public:
	class UVMapPageViewModel*                     ViewModel;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMVVMView*                              CallFunc_GetExtension_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class INotifyFieldValueChanged> CallFunc_SetViewModel_ViewModel_CastInput;      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetViewModel_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapPage_C_SetVMapPageViewModel) == 0x000008, "Wrong alignment on WBP_Modern_MapPage_C_SetVMapPageViewModel");
static_assert(sizeof(WBP_Modern_MapPage_C_SetVMapPageViewModel) == 0x000028, "Wrong size on WBP_Modern_MapPage_C_SetVMapPageViewModel");
static_assert(offsetof(WBP_Modern_MapPage_C_SetVMapPageViewModel, ViewModel) == 0x000000, "Member 'WBP_Modern_MapPage_C_SetVMapPageViewModel::ViewModel' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_SetVMapPageViewModel, CallFunc_GetExtension_ReturnValue) == 0x000008, "Member 'WBP_Modern_MapPage_C_SetVMapPageViewModel::CallFunc_GetExtension_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_SetVMapPageViewModel, CallFunc_SetViewModel_ViewModel_CastInput) == 0x000010, "Member 'WBP_Modern_MapPage_C_SetVMapPageViewModel::CallFunc_SetViewModel_ViewModel_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_SetVMapPageViewModel, CallFunc_SetViewModel_ReturnValue) == 0x000020, "Member 'WBP_Modern_MapPage_C_SetVMapPageViewModel::CallFunc_SetViewModel_ReturnValue' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.Sync Virtual Cursor Position
// 0x0010 (0x0010 - 0x0000)
struct WBP_Modern_MapPage_C_Sync_Virtual_Cursor_Position final
{
public:
	struct FVector2D                              NewVirtualCursorPosition;                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapPage_C_Sync_Virtual_Cursor_Position) == 0x000008, "Wrong alignment on WBP_Modern_MapPage_C_Sync_Virtual_Cursor_Position");
static_assert(sizeof(WBP_Modern_MapPage_C_Sync_Virtual_Cursor_Position) == 0x000010, "Wrong size on WBP_Modern_MapPage_C_Sync_Virtual_Cursor_Position");
static_assert(offsetof(WBP_Modern_MapPage_C_Sync_Virtual_Cursor_Position, NewVirtualCursorPosition) == 0x000000, "Member 'WBP_Modern_MapPage_C_Sync_Virtual_Cursor_Position::NewVirtualCursorPosition' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.Update Icons
// 0x0078 (0x0078 - 0x0000)
struct WBP_Modern_MapPage_C_Update_Icons final
{
public:
	TArray<struct FLegacyMapMenuIconProperties>   NewIcons;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UWBP_LegacyMenu_MapIcon_C*              LocalNewIcon;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       Local_CurrentIconWidget;                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FLegacyMapMenuIconProperties           Local_CurrentIcon;                                 // 0x0020(0x0050)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_GetLockingUpdatesDuringDelayedFastTravel_ReturnValue; // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapPage_C_Update_Icons) == 0x000008, "Wrong alignment on WBP_Modern_MapPage_C_Update_Icons");
static_assert(sizeof(WBP_Modern_MapPage_C_Update_Icons) == 0x000078, "Wrong size on WBP_Modern_MapPage_C_Update_Icons");
static_assert(offsetof(WBP_Modern_MapPage_C_Update_Icons, NewIcons) == 0x000000, "Member 'WBP_Modern_MapPage_C_Update_Icons::NewIcons' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_Update_Icons, LocalNewIcon) == 0x000010, "Member 'WBP_Modern_MapPage_C_Update_Icons::LocalNewIcon' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_Update_Icons, Local_CurrentIconWidget) == 0x000018, "Member 'WBP_Modern_MapPage_C_Update_Icons::Local_CurrentIconWidget' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_Update_Icons, Local_CurrentIcon) == 0x000020, "Member 'WBP_Modern_MapPage_C_Update_Icons::Local_CurrentIcon' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_Update_Icons, CallFunc_GetLockingUpdatesDuringDelayedFastTravel_ReturnValue) == 0x000070, "Member 'WBP_Modern_MapPage_C_Update_Icons::CallFunc_GetLockingUpdatesDuringDelayedFastTravel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_Update_Icons, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'WBP_Modern_MapPage_C_Update_Icons::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_Update_Icons, CallFunc_Not_PreBool_ReturnValue) == 0x000072, "Member 'WBP_Modern_MapPage_C_Update_Icons::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_Update_Icons, CallFunc_Not_PreBool_ReturnValue_1) == 0x000073, "Member 'WBP_Modern_MapPage_C_Update_Icons::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.UpdateActiveQuest
// 0x0098 (0x0098 - 0x0000)
struct WBP_Modern_MapPage_C_UpdateActiveQuest final
{
public:
	struct FLegacyMapMenuQuestProperties          NewActiveQuestData;                                // 0x0000(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Modern_MapPage_C_UpdateActiveQuest) == 0x000008, "Wrong alignment on WBP_Modern_MapPage_C_UpdateActiveQuest");
static_assert(sizeof(WBP_Modern_MapPage_C_UpdateActiveQuest) == 0x000098, "Wrong size on WBP_Modern_MapPage_C_UpdateActiveQuest");
static_assert(offsetof(WBP_Modern_MapPage_C_UpdateActiveQuest, NewActiveQuestData) == 0x000000, "Member 'WBP_Modern_MapPage_C_UpdateActiveQuest::NewActiveQuestData' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.UpdateAreaDateTime
// 0x0018 (0x0018 - 0x0000)
struct WBP_Modern_MapPage_C_UpdateAreaDateTime final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Modern_MapPage_C_UpdateAreaDateTime) == 0x000008, "Wrong alignment on WBP_Modern_MapPage_C_UpdateAreaDateTime");
static_assert(sizeof(WBP_Modern_MapPage_C_UpdateAreaDateTime) == 0x000018, "Wrong size on WBP_Modern_MapPage_C_UpdateAreaDateTime");
static_assert(offsetof(WBP_Modern_MapPage_C_UpdateAreaDateTime, Text) == 0x000000, "Member 'WBP_Modern_MapPage_C_UpdateAreaDateTime::Text' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.UpdateHasTriedToFastTravel
// 0x0001 (0x0001 - 0x0000)
struct WBP_Modern_MapPage_C_UpdateHasTriedToFastTravel final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapPage_C_UpdateHasTriedToFastTravel) == 0x000001, "Wrong alignment on WBP_Modern_MapPage_C_UpdateHasTriedToFastTravel");
static_assert(sizeof(WBP_Modern_MapPage_C_UpdateHasTriedToFastTravel) == 0x000001, "Wrong size on WBP_Modern_MapPage_C_UpdateHasTriedToFastTravel");
static_assert(offsetof(WBP_Modern_MapPage_C_UpdateHasTriedToFastTravel, NewValue) == 0x000000, "Member 'WBP_Modern_MapPage_C_UpdateHasTriedToFastTravel::NewValue' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.UpdateLocalMapProperties
// 0x0028 (0x0028 - 0x0000)
struct WBP_Modern_MapPage_C_UpdateLocalMapProperties final
{
public:
	struct FLegacyMapMenuLocalMapProperties       Properties;                                        // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_Modern_MapPage_C_UpdateLocalMapProperties) == 0x000008, "Wrong alignment on WBP_Modern_MapPage_C_UpdateLocalMapProperties");
static_assert(sizeof(WBP_Modern_MapPage_C_UpdateLocalMapProperties) == 0x000028, "Wrong size on WBP_Modern_MapPage_C_UpdateLocalMapProperties");
static_assert(offsetof(WBP_Modern_MapPage_C_UpdateLocalMapProperties, Properties) == 0x000000, "Member 'WBP_Modern_MapPage_C_UpdateLocalMapProperties::Properties' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.UpdateMapPosition
// 0x0078 (0x0078 - 0x0000)
struct WBP_Modern_MapPage_C_UpdateMapPosition final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLockingUpdatesDuringDelayedFastTravel_ReturnValue; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetOriginalMapSize_ReturnValue;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentZoomValue_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_DoubleToVector2D_ReturnValue;        // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector2D_InDouble_ImplicitCast; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapPage_C_UpdateMapPosition) == 0x000008, "Wrong alignment on WBP_Modern_MapPage_C_UpdateMapPosition");
static_assert(sizeof(WBP_Modern_MapPage_C_UpdateMapPosition) == 0x000078, "Wrong size on WBP_Modern_MapPage_C_UpdateMapPosition");
static_assert(offsetof(WBP_Modern_MapPage_C_UpdateMapPosition, Value) == 0x000000, "Member 'WBP_Modern_MapPage_C_UpdateMapPosition::Value' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_UpdateMapPosition, CallFunc_GetLockingUpdatesDuringDelayedFastTravel_ReturnValue) == 0x000010, "Member 'WBP_Modern_MapPage_C_UpdateMapPosition::CallFunc_GetLockingUpdatesDuringDelayedFastTravel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_UpdateMapPosition, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'WBP_Modern_MapPage_C_UpdateMapPosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_UpdateMapPosition, CallFunc_GetOriginalMapSize_ReturnValue) == 0x000018, "Member 'WBP_Modern_MapPage_C_UpdateMapPosition::CallFunc_GetOriginalMapSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_UpdateMapPosition, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x000028, "Member 'WBP_Modern_MapPage_C_UpdateMapPosition::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_UpdateMapPosition, CallFunc_GetCurrentZoomValue_ReturnValue) == 0x000038, "Member 'WBP_Modern_MapPage_C_UpdateMapPosition::CallFunc_GetCurrentZoomValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_UpdateMapPosition, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000040, "Member 'WBP_Modern_MapPage_C_UpdateMapPosition::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_UpdateMapPosition, CallFunc_Conv_DoubleToVector2D_ReturnValue) == 0x000050, "Member 'WBP_Modern_MapPage_C_UpdateMapPosition::CallFunc_Conv_DoubleToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_UpdateMapPosition, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000060, "Member 'WBP_Modern_MapPage_C_UpdateMapPosition::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_UpdateMapPosition, CallFunc_Conv_DoubleToVector2D_InDouble_ImplicitCast) == 0x000070, "Member 'WBP_Modern_MapPage_C_UpdateMapPosition::CallFunc_Conv_DoubleToVector2D_InDouble_ImplicitCast' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.UpdatePlayerMarkerPosition
// 0x0018 (0x0018 - 0x0000)
struct WBP_Modern_MapPage_C_UpdatePlayerMarkerPosition final
{
public:
	struct FVector2D                              PlayerMarkerPosition;                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELegacyMapMenuIcon                            PlayerMarkerEnum;                                  // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapPage_C_UpdatePlayerMarkerPosition) == 0x000008, "Wrong alignment on WBP_Modern_MapPage_C_UpdatePlayerMarkerPosition");
static_assert(sizeof(WBP_Modern_MapPage_C_UpdatePlayerMarkerPosition) == 0x000018, "Wrong size on WBP_Modern_MapPage_C_UpdatePlayerMarkerPosition");
static_assert(offsetof(WBP_Modern_MapPage_C_UpdatePlayerMarkerPosition, PlayerMarkerPosition) == 0x000000, "Member 'WBP_Modern_MapPage_C_UpdatePlayerMarkerPosition::PlayerMarkerPosition' has a wrong offset!");
static_assert(offsetof(WBP_Modern_MapPage_C_UpdatePlayerMarkerPosition, PlayerMarkerEnum) == 0x000010, "Member 'WBP_Modern_MapPage_C_UpdatePlayerMarkerPosition::PlayerMarkerEnum' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.UpdateWorldMapProperties
// 0x0020 (0x0020 - 0x0000)
struct WBP_Modern_MapPage_C_UpdateWorldMapProperties final
{
public:
	struct FLegacyMapMenuWorldMapProperties       Properties;                                        // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_Modern_MapPage_C_UpdateWorldMapProperties) == 0x000008, "Wrong alignment on WBP_Modern_MapPage_C_UpdateWorldMapProperties");
static_assert(sizeof(WBP_Modern_MapPage_C_UpdateWorldMapProperties) == 0x000020, "Wrong size on WBP_Modern_MapPage_C_UpdateWorldMapProperties");
static_assert(offsetof(WBP_Modern_MapPage_C_UpdateWorldMapProperties, Properties) == 0x000000, "Member 'WBP_Modern_MapPage_C_UpdateWorldMapProperties::Properties' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.UpdateZoom
// 0x0008 (0x0008 - 0x0000)
struct WBP_Modern_MapPage_C_UpdateZoom final
{
public:
	double                                        NewZoom;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapPage_C_UpdateZoom) == 0x000008, "Wrong alignment on WBP_Modern_MapPage_C_UpdateZoom");
static_assert(sizeof(WBP_Modern_MapPage_C_UpdateZoom) == 0x000008, "Wrong size on WBP_Modern_MapPage_C_UpdateZoom");
static_assert(offsetof(WBP_Modern_MapPage_C_UpdateZoom, NewZoom) == 0x000000, "Member 'WBP_Modern_MapPage_C_UpdateZoom::NewZoom' has a wrong offset!");

// Function WBP_Modern_MapPage.WBP_Modern_MapPage_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_Modern_MapPage_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Modern_MapPage_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_Modern_MapPage_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_Modern_MapPage_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WBP_Modern_MapPage_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_Modern_MapPage_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_Modern_MapPage_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

