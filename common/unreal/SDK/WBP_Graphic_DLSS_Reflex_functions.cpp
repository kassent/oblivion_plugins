#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Graphic_DLSS_Reflex

#include "Basic.hpp"

#include "WBP_Graphic_DLSS_Reflex_classes.hpp"
#include "WBP_Graphic_DLSS_Reflex_parameters.hpp"


namespace SDK
{

// Function WBP_Graphic_DLSS_Reflex.WBP_Graphic_DLSS_Reflex_C.BindRefreshDelegate
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_Graphic_DLSS_Reflex_C::BindRefreshDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Graphic_DLSS_Reflex_C", "BindRefreshDelegate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Graphic_DLSS_Reflex.WBP_Graphic_DLSS_Reflex_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_Graphic_DLSS_Reflex_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Graphic_DLSS_Reflex_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Graphic_DLSS_Reflex.WBP_Graphic_DLSS_Reflex_C.ExecuteUbergraph_WBP_Graphic_DLSS_Reflex
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Graphic_DLSS_Reflex_C::ExecuteUbergraph_WBP_Graphic_DLSS_Reflex(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Graphic_DLSS_Reflex_C", "ExecuteUbergraph_WBP_Graphic_DLSS_Reflex");

	Params::WBP_Graphic_DLSS_Reflex_C_ExecuteUbergraph_WBP_Graphic_DLSS_Reflex Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Graphic_DLSS_Reflex.WBP_Graphic_DLSS_Reflex_C.Get System Reflex Mode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  Refelex_Mode_Index                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString*                          Reflex_Mode_Name                                       (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UWBP_Graphic_DLSS_Reflex_C::Get_System_Reflex_Mode(int32* Refelex_Mode_Index, class FString* Reflex_Mode_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Graphic_DLSS_Reflex_C", "Get System Reflex Mode");

	Params::WBP_Graphic_DLSS_Reflex_C_Get_System_Reflex_Mode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Refelex_Mode_Index != nullptr)
		*Refelex_Mode_Index = Parms.Refelex_Mode_Index;

	if (Reflex_Mode_Name != nullptr)
		*Reflex_Mode_Name = std::move(Parms.Reflex_Mode_Name);
}


// Function WBP_Graphic_DLSS_Reflex.WBP_Graphic_DLSS_Reflex_C.OnRefresh
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_Graphic_DLSS_Reflex_C::OnRefresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Graphic_DLSS_Reflex_C", "OnRefresh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Graphic_DLSS_Reflex.WBP_Graphic_DLSS_Reflex_C.Reflex Mode Change Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    SelectedItem                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ESelectInfo                             SelectionType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Graphic_DLSS_Reflex_C::Reflex_Mode_Change_Event(const class FString& SelectedItem, ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Graphic_DLSS_Reflex_C", "Reflex Mode Change Event");

	Params::WBP_Graphic_DLSS_Reflex_C_Reflex_Mode_Change_Event Parms{};

	Parms.SelectedItem = std::move(SelectedItem);
	Parms.SelectionType = SelectionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Graphic_DLSS_Reflex.WBP_Graphic_DLSS_Reflex_C.Refresh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Graphic_DLSS_Reflex_C::Refresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Graphic_DLSS_Reflex_C", "Refresh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Graphic_DLSS_Reflex.WBP_Graphic_DLSS_Reflex_C.Refresh Reflex Mode
// (BlueprintCallable, BlueprintEvent)

void UWBP_Graphic_DLSS_Reflex_C::Refresh_Reflex_Mode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Graphic_DLSS_Reflex_C", "Refresh Reflex Mode");

	UObject::ProcessEvent(Func, nullptr);
}

}

