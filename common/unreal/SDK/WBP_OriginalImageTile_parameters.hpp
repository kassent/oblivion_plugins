#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_OriginalImageTile

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Altar_structs.hpp"


namespace SDK::Params
{

// Function WBP_OriginalImageTile.WBP_OriginalImageTile_C.ExecuteUbergraph_WBP_OriginalImageTile
// 0x0490 (0x0490 - 0x0000)
struct WBP_OriginalImageTile_C_ExecuteUbergraph_WBP_OriginalImageTile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_GetModifiedBrush_Brush;                   // 0x0010(0x00D0)()
	struct FImageCorrectionData                   K2Node_MakeStruct_ImageCorrectionData;             // 0x00E0(0x00F0)()
	struct FImageCorrectionData                   K2Node_Event_Value;                                // 0x01D0(0x00F0)(ConstParm)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0xF];                                      // 0x02C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_GetModifiedBrush_Brush_1;                 // 0x02D0(0x00D0)()
	struct FImageCorrectionData                   K2Node_MakeStruct_ImageCorrectionData_1;           // 0x03A0(0x00F0)()
};
static_assert(alignof(WBP_OriginalImageTile_C_ExecuteUbergraph_WBP_OriginalImageTile) == 0x000010, "Wrong alignment on WBP_OriginalImageTile_C_ExecuteUbergraph_WBP_OriginalImageTile");
static_assert(sizeof(WBP_OriginalImageTile_C_ExecuteUbergraph_WBP_OriginalImageTile) == 0x000490, "Wrong size on WBP_OriginalImageTile_C_ExecuteUbergraph_WBP_OriginalImageTile");
static_assert(offsetof(WBP_OriginalImageTile_C_ExecuteUbergraph_WBP_OriginalImageTile, EntryPoint) == 0x000000, "Member 'WBP_OriginalImageTile_C_ExecuteUbergraph_WBP_OriginalImageTile::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_ExecuteUbergraph_WBP_OriginalImageTile, CallFunc_GetModifiedBrush_Brush) == 0x000010, "Member 'WBP_OriginalImageTile_C_ExecuteUbergraph_WBP_OriginalImageTile::CallFunc_GetModifiedBrush_Brush' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_ExecuteUbergraph_WBP_OriginalImageTile, K2Node_MakeStruct_ImageCorrectionData) == 0x0000E0, "Member 'WBP_OriginalImageTile_C_ExecuteUbergraph_WBP_OriginalImageTile::K2Node_MakeStruct_ImageCorrectionData' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_ExecuteUbergraph_WBP_OriginalImageTile, K2Node_Event_Value) == 0x0001D0, "Member 'WBP_OriginalImageTile_C_ExecuteUbergraph_WBP_OriginalImageTile::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_ExecuteUbergraph_WBP_OriginalImageTile, K2Node_Event_IsDesignTime) == 0x0002C0, "Member 'WBP_OriginalImageTile_C_ExecuteUbergraph_WBP_OriginalImageTile::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_ExecuteUbergraph_WBP_OriginalImageTile, CallFunc_GetModifiedBrush_Brush_1) == 0x0002D0, "Member 'WBP_OriginalImageTile_C_ExecuteUbergraph_WBP_OriginalImageTile::CallFunc_GetModifiedBrush_Brush_1' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_ExecuteUbergraph_WBP_OriginalImageTile, K2Node_MakeStruct_ImageCorrectionData_1) == 0x0003A0, "Member 'WBP_OriginalImageTile_C_ExecuteUbergraph_WBP_OriginalImageTile::K2Node_MakeStruct_ImageCorrectionData_1' has a wrong offset!");

// Function WBP_OriginalImageTile.WBP_OriginalImageTile_C.GetModifiedBrush
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_OriginalImageTile_C_GetModifiedBrush final
{
public:
	struct FSlateBrush                            Brush_0;                                           // 0x0000(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00D0(0x00D0)()
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x01A0(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OriginalImageTile_C_GetModifiedBrush) == 0x000010, "Wrong alignment on WBP_OriginalImageTile_C_GetModifiedBrush");
static_assert(sizeof(WBP_OriginalImageTile_C_GetModifiedBrush) == 0x0001B0, "Wrong size on WBP_OriginalImageTile_C_GetModifiedBrush");
static_assert(offsetof(WBP_OriginalImageTile_C_GetModifiedBrush, Brush_0) == 0x000000, "Member 'WBP_OriginalImageTile_C_GetModifiedBrush::Brush_0' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_GetModifiedBrush, K2Node_MakeStruct_SlateBrush) == 0x0000D0, "Member 'WBP_OriginalImageTile_C_GetModifiedBrush::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_GetModifiedBrush, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x0001A0, "Member 'WBP_OriginalImageTile_C_GetModifiedBrush::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");

// Function WBP_OriginalImageTile.WBP_OriginalImageTile_C.OnCorrectionDataUpdated
// 0x00F0 (0x00F0 - 0x0000)
struct WBP_OriginalImageTile_C_OnCorrectionDataUpdated final
{
public:
	struct FImageCorrectionData                   Value;                                             // 0x0000(0x00F0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_OriginalImageTile_C_OnCorrectionDataUpdated) == 0x000010, "Wrong alignment on WBP_OriginalImageTile_C_OnCorrectionDataUpdated");
static_assert(sizeof(WBP_OriginalImageTile_C_OnCorrectionDataUpdated) == 0x0000F0, "Wrong size on WBP_OriginalImageTile_C_OnCorrectionDataUpdated");
static_assert(offsetof(WBP_OriginalImageTile_C_OnCorrectionDataUpdated, Value) == 0x000000, "Member 'WBP_OriginalImageTile_C_OnCorrectionDataUpdated::Value' has a wrong offset!");

// Function WBP_OriginalImageTile.WBP_OriginalImageTile_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_OriginalImageTile_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OriginalImageTile_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_OriginalImageTile_C_PreConstruct");
static_assert(sizeof(WBP_OriginalImageTile_C_PreConstruct) == 0x000001, "Wrong size on WBP_OriginalImageTile_C_PreConstruct");
static_assert(offsetof(WBP_OriginalImageTile_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_OriginalImageTile_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_OriginalImageTile.WBP_OriginalImageTile_C.UpdateImage
// 0x04F0 (0x04F0 - 0x0000)
struct WBP_OriginalImageTile_C_UpdateImage final
{
public:
	struct FSlateBrush                            Local_Brush;                                       // 0x0000(0x00D0)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FSlateBrush                            CallFunc_GetModifiedBrush_Brush;                   // 0x00D0(0x00D0)()
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A8[0x8];                                      // 0x01A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FImageCorrectionData                   CallFunc_GetCorrectionData_ReturnValue;            // 0x01B0(0x00F0)(ConstParm)
	struct FVector2D                              CallFunc_GetFixedOffsetPowerOfTwo_ReturnValue;     // 0x02A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x02B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FImageCorrectionData                   CallFunc_GetCorrectionData_ReturnValue_1;          // 0x02C0(0x00F0)(ConstParm)
	struct FImageCorrectionData                   CallFunc_GetCorrectionData_ReturnValue_2;          // 0x03B0(0x00F0)(ConstParm)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x04A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x04B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x04C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x04D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_MakeStruct_Right_ImplicitCast;              // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Bottom_ImplicitCast;             // 0x04EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OriginalImageTile_C_UpdateImage) == 0x000010, "Wrong alignment on WBP_OriginalImageTile_C_UpdateImage");
static_assert(sizeof(WBP_OriginalImageTile_C_UpdateImage) == 0x0004F0, "Wrong size on WBP_OriginalImageTile_C_UpdateImage");
static_assert(offsetof(WBP_OriginalImageTile_C_UpdateImage, Local_Brush) == 0x000000, "Member 'WBP_OriginalImageTile_C_UpdateImage::Local_Brush' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_UpdateImage, CallFunc_GetModifiedBrush_Brush) == 0x0000D0, "Member 'WBP_OriginalImageTile_C_UpdateImage::CallFunc_GetModifiedBrush_Brush' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_UpdateImage, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x0001A0, "Member 'WBP_OriginalImageTile_C_UpdateImage::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_UpdateImage, CallFunc_GetCorrectionData_ReturnValue) == 0x0001B0, "Member 'WBP_OriginalImageTile_C_UpdateImage::CallFunc_GetCorrectionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_UpdateImage, CallFunc_GetFixedOffsetPowerOfTwo_ReturnValue) == 0x0002A0, "Member 'WBP_OriginalImageTile_C_UpdateImage::CallFunc_GetFixedOffsetPowerOfTwo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_UpdateImage, K2Node_MakeStruct_Margin) == 0x0002B0, "Member 'WBP_OriginalImageTile_C_UpdateImage::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_UpdateImage, CallFunc_GetCorrectionData_ReturnValue_1) == 0x0002C0, "Member 'WBP_OriginalImageTile_C_UpdateImage::CallFunc_GetCorrectionData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_UpdateImage, CallFunc_GetCorrectionData_ReturnValue_2) == 0x0003B0, "Member 'WBP_OriginalImageTile_C_UpdateImage::CallFunc_GetCorrectionData_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_UpdateImage, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x0004A0, "Member 'WBP_OriginalImageTile_C_UpdateImage::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_UpdateImage, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0004B0, "Member 'WBP_OriginalImageTile_C_UpdateImage::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_UpdateImage, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x0004C0, "Member 'WBP_OriginalImageTile_C_UpdateImage::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_UpdateImage, CallFunc_BreakVector2D_X) == 0x0004C8, "Member 'WBP_OriginalImageTile_C_UpdateImage::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_UpdateImage, CallFunc_BreakVector2D_Y) == 0x0004D0, "Member 'WBP_OriginalImageTile_C_UpdateImage::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_UpdateImage, K2Node_MakeStruct_Margin_1) == 0x0004D8, "Member 'WBP_OriginalImageTile_C_UpdateImage::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_UpdateImage, K2Node_MakeStruct_Right_ImplicitCast) == 0x0004E8, "Member 'WBP_OriginalImageTile_C_UpdateImage::K2Node_MakeStruct_Right_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_UpdateImage, K2Node_MakeStruct_Bottom_ImplicitCast) == 0x0004EC, "Member 'WBP_OriginalImageTile_C_UpdateImage::K2Node_MakeStruct_Bottom_ImplicitCast' has a wrong offset!");

// Function WBP_OriginalImageTile.WBP_OriginalImageTile_C.UpdateInvalidation
// 0x0001 (0x0001 - 0x0000)
struct WBP_OriginalImageTile_C_UpdateInvalidation final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OriginalImageTile_C_UpdateInvalidation) == 0x000001, "Wrong alignment on WBP_OriginalImageTile_C_UpdateInvalidation");
static_assert(sizeof(WBP_OriginalImageTile_C_UpdateInvalidation) == 0x000001, "Wrong size on WBP_OriginalImageTile_C_UpdateInvalidation");
static_assert(offsetof(WBP_OriginalImageTile_C_UpdateInvalidation, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'WBP_OriginalImageTile_C_UpdateInvalidation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_OriginalImageTile.WBP_OriginalImageTile_C.UpdateSizer
// 0x0028 (0x0028 - 0x0000)
struct WBP_OriginalImageTile_C_UpdateSizer final
{
public:
	double                                        CallFunc_BreakVector2D_X;                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMinDesiredWidth_InMinDesiredWidth_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMinDesiredHeight_InMinDesiredHeight_ImplicitCast; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OriginalImageTile_C_UpdateSizer) == 0x000008, "Wrong alignment on WBP_OriginalImageTile_C_UpdateSizer");
static_assert(sizeof(WBP_OriginalImageTile_C_UpdateSizer) == 0x000028, "Wrong size on WBP_OriginalImageTile_C_UpdateSizer");
static_assert(offsetof(WBP_OriginalImageTile_C_UpdateSizer, CallFunc_BreakVector2D_X) == 0x000000, "Member 'WBP_OriginalImageTile_C_UpdateSizer::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_UpdateSizer, CallFunc_BreakVector2D_Y) == 0x000008, "Member 'WBP_OriginalImageTile_C_UpdateSizer::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_UpdateSizer, CallFunc_BreakVector2D_X_1) == 0x000010, "Member 'WBP_OriginalImageTile_C_UpdateSizer::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_UpdateSizer, CallFunc_BreakVector2D_Y_1) == 0x000018, "Member 'WBP_OriginalImageTile_C_UpdateSizer::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_UpdateSizer, CallFunc_SetMinDesiredWidth_InMinDesiredWidth_ImplicitCast) == 0x000020, "Member 'WBP_OriginalImageTile_C_UpdateSizer::CallFunc_SetMinDesiredWidth_InMinDesiredWidth_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_OriginalImageTile_C_UpdateSizer, CallFunc_SetMinDesiredHeight_InMinDesiredHeight_ImplicitCast) == 0x000024, "Member 'WBP_OriginalImageTile_C_UpdateSizer::CallFunc_SetMinDesiredHeight_InMinDesiredHeight_ImplicitCast' has a wrong offset!");

}

