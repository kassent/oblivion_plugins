#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BorderMovePlayer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Altar_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_BorderMovePlayer.WBP_BorderMovePlayer_C
// 0x00A8 (0x0570 - 0x04C8)
class UWBP_BorderMovePlayer_C final : public UVAltarWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Border;                                            // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        Delta_Move_Y;                                      // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Delta_Move_Z;                                      // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              New_Pos;                                           // 0x04E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Last_Pos;                                          // 0x04F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ThumbstickDeadZone;                                // 0x0508(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NewStickPos;                                       // 0x0518(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LastStickPos;                                      // 0x0528(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StickSensitivity;                                  // 0x0538(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C[0x4];                                      // 0x053C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Box_Preview_Inventory_C*            BoxBP;                                             // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AVOblivionPlayerCharacter*              OblivionPlayerCharacter;                           // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ActualCameraPosition;                              // 0x0550(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRotatingObject;                                  // 0x0568(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ClampToDeadZone(const struct FVector2D& ThumbstickInput, struct FVector2D* ClampedThumbstickInput);
	void Destruct();
	void ExecuteUbergraph_WBP_BorderMovePlayer(int32 EntryPoint);
	void Get_New_And_Last_Mouse_Pos();
	void GetNewDelta();
	void GetNewDirectionFromStick(const struct FVector2D& ThumbstickValue);
	void GetNewStickDelta();
	void Init_or_Enable_Box_Preview(const struct FFInventoryPreviewInitializationSettings& Settings);
	void IsRenderVisible(bool* IsVisible_0);
	void MoveCharacterToRoot();
	void OnInitialized();
	struct FEventReply OnMouseButtonDown_Border(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonUp_Border(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeftButtonReleased();
	void OnSynchronizeProperties();
	void ResetMouseControlDelta();
	void RotateActor(class USceneComponent* ActorToApplyRotation, double RotationSensitivity, bool Block_Y_Axis, bool Block_Z_Axis);
	void ShowInventoryItem(bool bShowItem);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UninitBoxVisibility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_BorderMovePlayer_C">();
	}
	static class UWBP_BorderMovePlayer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_BorderMovePlayer_C>();
	}
};
static_assert(alignof(UWBP_BorderMovePlayer_C) == 0x000008, "Wrong alignment on UWBP_BorderMovePlayer_C");
static_assert(sizeof(UWBP_BorderMovePlayer_C) == 0x000570, "Wrong size on UWBP_BorderMovePlayer_C");
static_assert(offsetof(UWBP_BorderMovePlayer_C, UberGraphFrame) == 0x0004C8, "Member 'UWBP_BorderMovePlayer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_BorderMovePlayer_C, Border) == 0x0004D0, "Member 'UWBP_BorderMovePlayer_C::Border' has a wrong offset!");
static_assert(offsetof(UWBP_BorderMovePlayer_C, Delta_Move_Y) == 0x0004D8, "Member 'UWBP_BorderMovePlayer_C::Delta_Move_Y' has a wrong offset!");
static_assert(offsetof(UWBP_BorderMovePlayer_C, Delta_Move_Z) == 0x0004E0, "Member 'UWBP_BorderMovePlayer_C::Delta_Move_Z' has a wrong offset!");
static_assert(offsetof(UWBP_BorderMovePlayer_C, New_Pos) == 0x0004E8, "Member 'UWBP_BorderMovePlayer_C::New_Pos' has a wrong offset!");
static_assert(offsetof(UWBP_BorderMovePlayer_C, Last_Pos) == 0x0004F8, "Member 'UWBP_BorderMovePlayer_C::Last_Pos' has a wrong offset!");
static_assert(offsetof(UWBP_BorderMovePlayer_C, ThumbstickDeadZone) == 0x000508, "Member 'UWBP_BorderMovePlayer_C::ThumbstickDeadZone' has a wrong offset!");
static_assert(offsetof(UWBP_BorderMovePlayer_C, NewStickPos) == 0x000518, "Member 'UWBP_BorderMovePlayer_C::NewStickPos' has a wrong offset!");
static_assert(offsetof(UWBP_BorderMovePlayer_C, LastStickPos) == 0x000528, "Member 'UWBP_BorderMovePlayer_C::LastStickPos' has a wrong offset!");
static_assert(offsetof(UWBP_BorderMovePlayer_C, StickSensitivity) == 0x000538, "Member 'UWBP_BorderMovePlayer_C::StickSensitivity' has a wrong offset!");
static_assert(offsetof(UWBP_BorderMovePlayer_C, BoxBP) == 0x000540, "Member 'UWBP_BorderMovePlayer_C::BoxBP' has a wrong offset!");
static_assert(offsetof(UWBP_BorderMovePlayer_C, OblivionPlayerCharacter) == 0x000548, "Member 'UWBP_BorderMovePlayer_C::OblivionPlayerCharacter' has a wrong offset!");
static_assert(offsetof(UWBP_BorderMovePlayer_C, ActualCameraPosition) == 0x000550, "Member 'UWBP_BorderMovePlayer_C::ActualCameraPosition' has a wrong offset!");
static_assert(offsetof(UWBP_BorderMovePlayer_C, IsRotatingObject) == 0x000568, "Member 'UWBP_BorderMovePlayer_C::IsRotatingObject' has a wrong offset!");

}

