#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AST_CharacterLocomotionInAir

#include "Basic.hpp"


namespace SDK::Params
{

// Function AST_CharacterLocomotionInAir.AST_CharacterLocomotionInAir_C.ExecuteUbergraph_AST_CharacterLocomotionInAir
// 0x0040 (0x0040 - 0x0000)
struct AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVStateMachineComponent*                CallFunc_GetOwningStateMachineComponent_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSizeXYSquared_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AVPairedPawn*                           K2Node_DynamicCast_AsVPaired_Pawn;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir) == 0x000008, "Wrong alignment on AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir");
static_assert(sizeof(AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir) == 0x000040, "Wrong size on AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir");
static_assert(offsetof(AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir, EntryPoint) == 0x000000, "Member 'AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir::EntryPoint' has a wrong offset!");
static_assert(offsetof(AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir, K2Node_Event_DeltaTime) == 0x000004, "Member 'AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir, CallFunc_GetOwningStateMachineComponent_ReturnValue) == 0x000008, "Member 'AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir::CallFunc_GetOwningStateMachineComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir, CallFunc_VSizeXYSquared_ReturnValue) == 0x000018, "Member 'AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir::CallFunc_VSizeXYSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000028, "Member 'AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir, K2Node_DynamicCast_AsVPaired_Pawn) == 0x000030, "Member 'AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir::K2Node_DynamicCast_AsVPaired_Pawn' has a wrong offset!");
static_assert(offsetof(AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000039, "Member 'AST_CharacterLocomotionInAir_C_ExecuteUbergraph_AST_CharacterLocomotionInAir::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function AST_CharacterLocomotionInAir.AST_CharacterLocomotionInAir_C.OnStateUpdate
// 0x0004 (0x0004 - 0x0000)
struct AST_CharacterLocomotionInAir_C_OnStateUpdate final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AST_CharacterLocomotionInAir_C_OnStateUpdate) == 0x000004, "Wrong alignment on AST_CharacterLocomotionInAir_C_OnStateUpdate");
static_assert(sizeof(AST_CharacterLocomotionInAir_C_OnStateUpdate) == 0x000004, "Wrong size on AST_CharacterLocomotionInAir_C_OnStateUpdate");
static_assert(offsetof(AST_CharacterLocomotionInAir_C_OnStateUpdate, DeltaTime) == 0x000000, "Member 'AST_CharacterLocomotionInAir_C_OnStateUpdate::DeltaTime' has a wrong offset!");

}

