#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TABP_Horse_Locomotion

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "TABP_Horse_Locomotion_structs.hpp"
#include "Altar_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass TABP_Horse_Locomotion.TABP_Horse_Locomotion_C
// 0x0910 (0x0FA0 - 0x0690)
class UTABP_Horse_Locomotion_C final : public UVGroundLocomotionHorseAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0690(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct TABP_Horse_Locomotion::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;        // 0x0698(0x0040)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x06D8(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x06E0(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x06E8(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0708(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0730(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0758(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0780(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x07A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x07D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x07F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0820(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0848(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0870(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0898(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x08C0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0908(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x0928(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0998(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x09B8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0A00(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x0A20(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0A90(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x0AB0(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0B20(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x0B40(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0BB0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0BD0(0x00C8)()
	struct FAnimNode_Sync                         AnimGraphNode_Sync;                                // 0x0C98(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0CC8(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0D38(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0D58(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0E20(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0E68(0x00F0)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose_1;                      // 0x0F58(0x0010)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0F68(0x0020)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x0F88(0x0010)()
	bool                                          K2Node_PropertyAccess_27;                          // 0x0F98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_23;                          // 0x0F99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_21;                          // 0x0F9A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_20;                          // 0x0F9B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_16;                          // 0x0F9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_15;                          // 0x0F9D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_7;                           // 0x0F9E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void ExecuteUbergraph_TABP_Horse_Locomotion(int32 EntryPoint);
	void StandingLayer(struct FPoseLink* StandingLayer_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TABP_Horse_Locomotion_C">();
	}
	static class UTABP_Horse_Locomotion_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTABP_Horse_Locomotion_C>();
	}
};
static_assert(alignof(UTABP_Horse_Locomotion_C) == 0x000010, "Wrong alignment on UTABP_Horse_Locomotion_C");
static_assert(sizeof(UTABP_Horse_Locomotion_C) == 0x000FA0, "Wrong size on UTABP_Horse_Locomotion_C");
static_assert(offsetof(UTABP_Horse_Locomotion_C, UberGraphFrame) == 0x000690, "Member 'UTABP_Horse_Locomotion_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, __AnimBlueprintMutables) == 0x000698, "Member 'UTABP_Horse_Locomotion_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimBlueprintExtension_PropertyAccess) == 0x0006D8, "Member 'UTABP_Horse_Locomotion_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimBlueprintExtension_Base) == 0x0006E0, "Member 'UTABP_Horse_Locomotion_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_Root_1) == 0x0006E8, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_TransitionResult_10) == 0x000708, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_TransitionResult_9) == 0x000730, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_TransitionResult_8) == 0x000758, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_TransitionResult_7) == 0x000780, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_TransitionResult_6) == 0x0007A8, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_TransitionResult_5) == 0x0007D0, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_TransitionResult_4) == 0x0007F8, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_TransitionResult_3) == 0x000820, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_TransitionResult_2) == 0x000848, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_TransitionResult_1) == 0x000870, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_TransitionResult) == 0x000898, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_SequencePlayer_1) == 0x0008C0, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_StateResult_6) == 0x000908, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_BlendSpacePlayer_4) == 0x000928, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_StateResult_5) == 0x000998, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_SequencePlayer) == 0x0009B8, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_StateResult_4) == 0x000A00, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_BlendSpacePlayer_3) == 0x000A20, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_StateResult_3) == 0x000A90, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_BlendSpacePlayer_2) == 0x000AB0, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_StateResult_2) == 0x000B20, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_BlendSpacePlayer_1) == 0x000B40, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_StateResult_1) == 0x000BB0, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_StateMachine_1) == 0x000BD0, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_Sync) == 0x000C98, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_Sync' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_BlendSpacePlayer) == 0x000CC8, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_StateResult) == 0x000D38, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_StateMachine) == 0x000D58, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_BlendListByBool) == 0x000E20, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_LayeredBoneBlend) == 0x000E68, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_LocalRefPose_1) == 0x000F58, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_LocalRefPose_1' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_Root) == 0x000F68, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, AnimGraphNode_LocalRefPose) == 0x000F88, "Member 'UTABP_Horse_Locomotion_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, K2Node_PropertyAccess_27) == 0x000F98, "Member 'UTABP_Horse_Locomotion_C::K2Node_PropertyAccess_27' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, K2Node_PropertyAccess_23) == 0x000F99, "Member 'UTABP_Horse_Locomotion_C::K2Node_PropertyAccess_23' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, K2Node_PropertyAccess_21) == 0x000F9A, "Member 'UTABP_Horse_Locomotion_C::K2Node_PropertyAccess_21' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, K2Node_PropertyAccess_20) == 0x000F9B, "Member 'UTABP_Horse_Locomotion_C::K2Node_PropertyAccess_20' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, K2Node_PropertyAccess_16) == 0x000F9C, "Member 'UTABP_Horse_Locomotion_C::K2Node_PropertyAccess_16' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, K2Node_PropertyAccess_15) == 0x000F9D, "Member 'UTABP_Horse_Locomotion_C::K2Node_PropertyAccess_15' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_C, K2Node_PropertyAccess_7) == 0x000F9E, "Member 'UTABP_Horse_Locomotion_C::K2Node_PropertyAccess_7' has a wrong offset!");

}

