#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OnlineSubsystemBethesdaNet

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "OnlineSubsystemBethesdaNet_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function OnlineSubsystemBethesdaNet.BethesdaNetEulaProcessCallProxy.AcceptEulaAndMoveNextForPlayer
// 0x0020 (0x0020 - 0x0000)
struct BethesdaNetEulaProcessCallProxy_AcceptEulaAndMoveNextForPlayer final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EulaDocId;                                         // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBethesdaNetEulaProcessCallProxy*       ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetEulaProcessCallProxy_AcceptEulaAndMoveNextForPlayer) == 0x000008, "Wrong alignment on BethesdaNetEulaProcessCallProxy_AcceptEulaAndMoveNextForPlayer");
static_assert(sizeof(BethesdaNetEulaProcessCallProxy_AcceptEulaAndMoveNextForPlayer) == 0x000020, "Wrong size on BethesdaNetEulaProcessCallProxy_AcceptEulaAndMoveNextForPlayer");
static_assert(offsetof(BethesdaNetEulaProcessCallProxy_AcceptEulaAndMoveNextForPlayer, WorldContextObject) == 0x000000, "Member 'BethesdaNetEulaProcessCallProxy_AcceptEulaAndMoveNextForPlayer::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BethesdaNetEulaProcessCallProxy_AcceptEulaAndMoveNextForPlayer, PlayerController) == 0x000008, "Member 'BethesdaNetEulaProcessCallProxy_AcceptEulaAndMoveNextForPlayer::PlayerController' has a wrong offset!");
static_assert(offsetof(BethesdaNetEulaProcessCallProxy_AcceptEulaAndMoveNextForPlayer, EulaDocId) == 0x000010, "Member 'BethesdaNetEulaProcessCallProxy_AcceptEulaAndMoveNextForPlayer::EulaDocId' has a wrong offset!");
static_assert(offsetof(BethesdaNetEulaProcessCallProxy_AcceptEulaAndMoveNextForPlayer, ReturnValue) == 0x000018, "Member 'BethesdaNetEulaProcessCallProxy_AcceptEulaAndMoveNextForPlayer::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetEulaProcessCallProxy.GetNextEulaForGame
// 0x0010 (0x0010 - 0x0000)
struct BethesdaNetEulaProcessCallProxy_GetNextEulaForGame final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBethesdaNetEulaProcessCallProxy*       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetEulaProcessCallProxy_GetNextEulaForGame) == 0x000008, "Wrong alignment on BethesdaNetEulaProcessCallProxy_GetNextEulaForGame");
static_assert(sizeof(BethesdaNetEulaProcessCallProxy_GetNextEulaForGame) == 0x000010, "Wrong size on BethesdaNetEulaProcessCallProxy_GetNextEulaForGame");
static_assert(offsetof(BethesdaNetEulaProcessCallProxy_GetNextEulaForGame, WorldContextObject) == 0x000000, "Member 'BethesdaNetEulaProcessCallProxy_GetNextEulaForGame::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BethesdaNetEulaProcessCallProxy_GetNextEulaForGame, ReturnValue) == 0x000008, "Member 'BethesdaNetEulaProcessCallProxy_GetNextEulaForGame::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetEulaProcessCallProxy.StartEulaProcessForGame
// 0x0010 (0x0010 - 0x0000)
struct BethesdaNetEulaProcessCallProxy_StartEulaProcessForGame final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBethesdaNetEulaProcessCallProxy*       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetEulaProcessCallProxy_StartEulaProcessForGame) == 0x000008, "Wrong alignment on BethesdaNetEulaProcessCallProxy_StartEulaProcessForGame");
static_assert(sizeof(BethesdaNetEulaProcessCallProxy_StartEulaProcessForGame) == 0x000010, "Wrong size on BethesdaNetEulaProcessCallProxy_StartEulaProcessForGame");
static_assert(offsetof(BethesdaNetEulaProcessCallProxy_StartEulaProcessForGame, WorldContextObject) == 0x000000, "Member 'BethesdaNetEulaProcessCallProxy_StartEulaProcessForGame::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BethesdaNetEulaProcessCallProxy_StartEulaProcessForGame, ReturnValue) == 0x000008, "Member 'BethesdaNetEulaProcessCallProxy_StartEulaProcessForGame::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetEulaProcessCallProxy.StartEulaProcessForPlayer
// 0x0018 (0x0018 - 0x0000)
struct BethesdaNetEulaProcessCallProxy_StartEulaProcessForPlayer final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBethesdaNetEulaProcessCallProxy*       ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetEulaProcessCallProxy_StartEulaProcessForPlayer) == 0x000008, "Wrong alignment on BethesdaNetEulaProcessCallProxy_StartEulaProcessForPlayer");
static_assert(sizeof(BethesdaNetEulaProcessCallProxy_StartEulaProcessForPlayer) == 0x000018, "Wrong size on BethesdaNetEulaProcessCallProxy_StartEulaProcessForPlayer");
static_assert(offsetof(BethesdaNetEulaProcessCallProxy_StartEulaProcessForPlayer, WorldContextObject) == 0x000000, "Member 'BethesdaNetEulaProcessCallProxy_StartEulaProcessForPlayer::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BethesdaNetEulaProcessCallProxy_StartEulaProcessForPlayer, PlayerController) == 0x000008, "Member 'BethesdaNetEulaProcessCallProxy_StartEulaProcessForPlayer::PlayerController' has a wrong offset!");
static_assert(offsetof(BethesdaNetEulaProcessCallProxy_StartEulaProcessForPlayer, ReturnValue) == 0x000010, "Member 'BethesdaNetEulaProcessCallProxy_StartEulaProcessForPlayer::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetFetchFirstPartyEmailCallProxy.FetchFirstPartyEmail
// 0x0018 (0x0018 - 0x0000)
struct BethesdaNetFetchFirstPartyEmailCallProxy_FetchFirstPartyEmail final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBethesdaNetFetchFirstPartyEmailCallProxy* ReturnValue;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetFetchFirstPartyEmailCallProxy_FetchFirstPartyEmail) == 0x000008, "Wrong alignment on BethesdaNetFetchFirstPartyEmailCallProxy_FetchFirstPartyEmail");
static_assert(sizeof(BethesdaNetFetchFirstPartyEmailCallProxy_FetchFirstPartyEmail) == 0x000018, "Wrong size on BethesdaNetFetchFirstPartyEmailCallProxy_FetchFirstPartyEmail");
static_assert(offsetof(BethesdaNetFetchFirstPartyEmailCallProxy_FetchFirstPartyEmail, WorldContextObject) == 0x000000, "Member 'BethesdaNetFetchFirstPartyEmailCallProxy_FetchFirstPartyEmail::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BethesdaNetFetchFirstPartyEmailCallProxy_FetchFirstPartyEmail, PlayerController) == 0x000008, "Member 'BethesdaNetFetchFirstPartyEmailCallProxy_FetchFirstPartyEmail::PlayerController' has a wrong offset!");
static_assert(offsetof(BethesdaNetFetchFirstPartyEmailCallProxy_FetchFirstPartyEmail, ReturnValue) == 0x000010, "Member 'BethesdaNetFetchFirstPartyEmailCallProxy_FetchFirstPartyEmail::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetLinkAccountCallProxy.LinkAccounts
// 0x0020 (0x0020 - 0x0000)
struct BethesdaNetLinkAccountCallProxy_LinkAccounts final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FirstPartySubsystemName;                           // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBethesdaNetLinkAccountCallProxy*       ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetLinkAccountCallProxy_LinkAccounts) == 0x000008, "Wrong alignment on BethesdaNetLinkAccountCallProxy_LinkAccounts");
static_assert(sizeof(BethesdaNetLinkAccountCallProxy_LinkAccounts) == 0x000020, "Wrong size on BethesdaNetLinkAccountCallProxy_LinkAccounts");
static_assert(offsetof(BethesdaNetLinkAccountCallProxy_LinkAccounts, WorldContextObject) == 0x000000, "Member 'BethesdaNetLinkAccountCallProxy_LinkAccounts::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BethesdaNetLinkAccountCallProxy_LinkAccounts, PlayerController) == 0x000008, "Member 'BethesdaNetLinkAccountCallProxy_LinkAccounts::PlayerController' has a wrong offset!");
static_assert(offsetof(BethesdaNetLinkAccountCallProxy_LinkAccounts, FirstPartySubsystemName) == 0x000010, "Member 'BethesdaNetLinkAccountCallProxy_LinkAccounts::FirstPartySubsystemName' has a wrong offset!");
static_assert(offsetof(BethesdaNetLinkAccountCallProxy_LinkAccounts, ReturnValue) == 0x000018, "Member 'BethesdaNetLinkAccountCallProxy_LinkAccounts::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetNewGameSessionCallProxy.StartNewGameSession
// 0x0020 (0x0020 - 0x0000)
struct BethesdaNetNewGameSessionCallProxy_StartNewGameSession final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PersistentUserId;                                  // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBethesdaNetNewGameSessionCallProxy*    ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetNewGameSessionCallProxy_StartNewGameSession) == 0x000008, "Wrong alignment on BethesdaNetNewGameSessionCallProxy_StartNewGameSession");
static_assert(sizeof(BethesdaNetNewGameSessionCallProxy_StartNewGameSession) == 0x000020, "Wrong size on BethesdaNetNewGameSessionCallProxy_StartNewGameSession");
static_assert(offsetof(BethesdaNetNewGameSessionCallProxy_StartNewGameSession, WorldContextObject) == 0x000000, "Member 'BethesdaNetNewGameSessionCallProxy_StartNewGameSession::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BethesdaNetNewGameSessionCallProxy_StartNewGameSession, PersistentUserId) == 0x000008, "Member 'BethesdaNetNewGameSessionCallProxy_StartNewGameSession::PersistentUserId' has a wrong offset!");
static_assert(offsetof(BethesdaNetNewGameSessionCallProxy_StartNewGameSession, ReturnValue) == 0x000018, "Member 'BethesdaNetNewGameSessionCallProxy_StartNewGameSession::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetQuickAccountCallProxy.QuickAccountCreate
// 0x0028 (0x0028 - 0x0000)
struct BethesdaNetQuickAccountCallProxy_QuickAccountCreate final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EmailAddress;                                      // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBethesdaNetQuickAccountCallProxy*      ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetQuickAccountCallProxy_QuickAccountCreate) == 0x000008, "Wrong alignment on BethesdaNetQuickAccountCallProxy_QuickAccountCreate");
static_assert(sizeof(BethesdaNetQuickAccountCallProxy_QuickAccountCreate) == 0x000028, "Wrong size on BethesdaNetQuickAccountCallProxy_QuickAccountCreate");
static_assert(offsetof(BethesdaNetQuickAccountCallProxy_QuickAccountCreate, WorldContextObject) == 0x000000, "Member 'BethesdaNetQuickAccountCallProxy_QuickAccountCreate::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BethesdaNetQuickAccountCallProxy_QuickAccountCreate, PlayerController) == 0x000008, "Member 'BethesdaNetQuickAccountCallProxy_QuickAccountCreate::PlayerController' has a wrong offset!");
static_assert(offsetof(BethesdaNetQuickAccountCallProxy_QuickAccountCreate, EmailAddress) == 0x000010, "Member 'BethesdaNetQuickAccountCallProxy_QuickAccountCreate::EmailAddress' has a wrong offset!");
static_assert(offsetof(BethesdaNetQuickAccountCallProxy_QuickAccountCreate, ReturnValue) == 0x000020, "Member 'BethesdaNetQuickAccountCallProxy_QuickAccountCreate::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.BeginAccountFlow
// 0x0048 (0x0048 - 0x0000)
struct BethesdaNetUIQuickAccountFlow_BeginAccountFlow final
{
public:
	int32                                         InLocalUserNum;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLatentActionInfo                      InLatentInfo;                                      // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	EBNetUIQuickAccountFlow                       OutResult;                                         // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   OutError;                                          // 0x0028(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	int32                                         InZOrder;                                          // 0x0040(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BethesdaNetUIQuickAccountFlow_BeginAccountFlow) == 0x000008, "Wrong alignment on BethesdaNetUIQuickAccountFlow_BeginAccountFlow");
static_assert(sizeof(BethesdaNetUIQuickAccountFlow_BeginAccountFlow) == 0x000048, "Wrong size on BethesdaNetUIQuickAccountFlow_BeginAccountFlow");
static_assert(offsetof(BethesdaNetUIQuickAccountFlow_BeginAccountFlow, InLocalUserNum) == 0x000000, "Member 'BethesdaNetUIQuickAccountFlow_BeginAccountFlow::InLocalUserNum' has a wrong offset!");
static_assert(offsetof(BethesdaNetUIQuickAccountFlow_BeginAccountFlow, InLatentInfo) == 0x000008, "Member 'BethesdaNetUIQuickAccountFlow_BeginAccountFlow::InLatentInfo' has a wrong offset!");
static_assert(offsetof(BethesdaNetUIQuickAccountFlow_BeginAccountFlow, OutResult) == 0x000020, "Member 'BethesdaNetUIQuickAccountFlow_BeginAccountFlow::OutResult' has a wrong offset!");
static_assert(offsetof(BethesdaNetUIQuickAccountFlow_BeginAccountFlow, OutError) == 0x000028, "Member 'BethesdaNetUIQuickAccountFlow_BeginAccountFlow::OutError' has a wrong offset!");
static_assert(offsetof(BethesdaNetUIQuickAccountFlow_BeginAccountFlow, InZOrder) == 0x000040, "Member 'BethesdaNetUIQuickAccountFlow_BeginAccountFlow::InZOrder' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.BeginAccountFlowLatentCallback
// 0x0020 (0x0020 - 0x0000)
struct BethesdaNetUIQuickAccountFlow_BeginAccountFlowLatentCallback final
{
public:
	int32                                         InLocalUserNum;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBNetUIQuickAccountFlow                       InResult;                                          // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   InError;                                           // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetUIQuickAccountFlow_BeginAccountFlowLatentCallback) == 0x000008, "Wrong alignment on BethesdaNetUIQuickAccountFlow_BeginAccountFlowLatentCallback");
static_assert(sizeof(BethesdaNetUIQuickAccountFlow_BeginAccountFlowLatentCallback) == 0x000020, "Wrong size on BethesdaNetUIQuickAccountFlow_BeginAccountFlowLatentCallback");
static_assert(offsetof(BethesdaNetUIQuickAccountFlow_BeginAccountFlowLatentCallback, InLocalUserNum) == 0x000000, "Member 'BethesdaNetUIQuickAccountFlow_BeginAccountFlowLatentCallback::InLocalUserNum' has a wrong offset!");
static_assert(offsetof(BethesdaNetUIQuickAccountFlow_BeginAccountFlowLatentCallback, InResult) == 0x000004, "Member 'BethesdaNetUIQuickAccountFlow_BeginAccountFlowLatentCallback::InResult' has a wrong offset!");
static_assert(offsetof(BethesdaNetUIQuickAccountFlow_BeginAccountFlowLatentCallback, InError) == 0x000008, "Member 'BethesdaNetUIQuickAccountFlow_BeginAccountFlowLatentCallback::InError' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnLoginScreenLoginButtonClicked
// 0x0030 (0x0030 - 0x0000)
struct BethesdaNetUIQuickAccountFlow_OnLoginScreenLoginButtonClicked final
{
public:
	class FText                                   UserName;                                          // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   Password;                                          // 0x0018(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetUIQuickAccountFlow_OnLoginScreenLoginButtonClicked) == 0x000008, "Wrong alignment on BethesdaNetUIQuickAccountFlow_OnLoginScreenLoginButtonClicked");
static_assert(sizeof(BethesdaNetUIQuickAccountFlow_OnLoginScreenLoginButtonClicked) == 0x000030, "Wrong size on BethesdaNetUIQuickAccountFlow_OnLoginScreenLoginButtonClicked");
static_assert(offsetof(BethesdaNetUIQuickAccountFlow_OnLoginScreenLoginButtonClicked, UserName) == 0x000000, "Member 'BethesdaNetUIQuickAccountFlow_OnLoginScreenLoginButtonClicked::UserName' has a wrong offset!");
static_assert(offsetof(BethesdaNetUIQuickAccountFlow_OnLoginScreenLoginButtonClicked, Password) == 0x000018, "Member 'BethesdaNetUIQuickAccountFlow_OnLoginScreenLoginButtonClicked::Password' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnQuickAccountScreenCreateAccountButtonClicked
// 0x0018 (0x0018 - 0x0000)
struct BethesdaNetUIQuickAccountFlow_OnQuickAccountScreenCreateAccountButtonClicked final
{
public:
	class FText                                   InEmail;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetUIQuickAccountFlow_OnQuickAccountScreenCreateAccountButtonClicked) == 0x000008, "Wrong alignment on BethesdaNetUIQuickAccountFlow_OnQuickAccountScreenCreateAccountButtonClicked");
static_assert(sizeof(BethesdaNetUIQuickAccountFlow_OnQuickAccountScreenCreateAccountButtonClicked) == 0x000018, "Wrong size on BethesdaNetUIQuickAccountFlow_OnQuickAccountScreenCreateAccountButtonClicked");
static_assert(offsetof(BethesdaNetUIQuickAccountFlow_OnQuickAccountScreenCreateAccountButtonClicked, InEmail) == 0x000000, "Member 'BethesdaNetUIQuickAccountFlow_OnQuickAccountScreenCreateAccountButtonClicked::InEmail' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetUIQuickAccountFlow.OnScreenExistsLoginButtonClicked
// 0x0030 (0x0030 - 0x0000)
struct BethesdaNetUIQuickAccountFlow_OnScreenExistsLoginButtonClicked final
{
public:
	class FText                                   UserName;                                          // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   Password;                                          // 0x0018(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetUIQuickAccountFlow_OnScreenExistsLoginButtonClicked) == 0x000008, "Wrong alignment on BethesdaNetUIQuickAccountFlow_OnScreenExistsLoginButtonClicked");
static_assert(sizeof(BethesdaNetUIQuickAccountFlow_OnScreenExistsLoginButtonClicked) == 0x000030, "Wrong size on BethesdaNetUIQuickAccountFlow_OnScreenExistsLoginButtonClicked");
static_assert(offsetof(BethesdaNetUIQuickAccountFlow_OnScreenExistsLoginButtonClicked, UserName) == 0x000000, "Member 'BethesdaNetUIQuickAccountFlow_OnScreenExistsLoginButtonClicked::UserName' has a wrong offset!");
static_assert(offsetof(BethesdaNetUIQuickAccountFlow_OnScreenExistsLoginButtonClicked, Password) == 0x000018, "Member 'BethesdaNetUIQuickAccountFlow_OnScreenExistsLoginButtonClicked::Password' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenBase.HandleExclusiveRightStickInput
// 0x0004 (0x0004 - 0x0000)
struct BethesdaNetUIScreenBase_HandleExclusiveRightStickInput final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetUIScreenBase_HandleExclusiveRightStickInput) == 0x000004, "Wrong alignment on BethesdaNetUIScreenBase_HandleExclusiveRightStickInput");
static_assert(sizeof(BethesdaNetUIScreenBase_HandleExclusiveRightStickInput) == 0x000004, "Wrong size on BethesdaNetUIScreenBase_HandleExclusiveRightStickInput");
static_assert(offsetof(BethesdaNetUIScreenBase_HandleExclusiveRightStickInput, Value) == 0x000000, "Member 'BethesdaNetUIScreenBase_HandleExclusiveRightStickInput::Value' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenBase.OnScreenCancel
// 0x0130 (0x0130 - 0x0000)
struct BethesdaNetUIScreenBase_OnScreenCancel final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetUIScreenBase_OnScreenCancel) == 0x000008, "Wrong alignment on BethesdaNetUIScreenBase_OnScreenCancel");
static_assert(sizeof(BethesdaNetUIScreenBase_OnScreenCancel) == 0x000130, "Wrong size on BethesdaNetUIScreenBase_OnScreenCancel");
static_assert(offsetof(BethesdaNetUIScreenBase_OnScreenCancel, MyGeometry) == 0x000000, "Member 'BethesdaNetUIScreenBase_OnScreenCancel::MyGeometry' has a wrong offset!");
static_assert(offsetof(BethesdaNetUIScreenBase_OnScreenCancel, InKeyEvent) == 0x000038, "Member 'BethesdaNetUIScreenBase_OnScreenCancel::InKeyEvent' has a wrong offset!");
static_assert(offsetof(BethesdaNetUIScreenBase_OnScreenCancel, ReturnValue) == 0x000078, "Member 'BethesdaNetUIScreenBase_OnScreenCancel::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenBase.OnScreenConfirm
// 0x0130 (0x0130 - 0x0000)
struct BethesdaNetUIScreenBase_OnScreenConfirm final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetUIScreenBase_OnScreenConfirm) == 0x000008, "Wrong alignment on BethesdaNetUIScreenBase_OnScreenConfirm");
static_assert(sizeof(BethesdaNetUIScreenBase_OnScreenConfirm) == 0x000130, "Wrong size on BethesdaNetUIScreenBase_OnScreenConfirm");
static_assert(offsetof(BethesdaNetUIScreenBase_OnScreenConfirm, MyGeometry) == 0x000000, "Member 'BethesdaNetUIScreenBase_OnScreenConfirm::MyGeometry' has a wrong offset!");
static_assert(offsetof(BethesdaNetUIScreenBase_OnScreenConfirm, InKeyEvent) == 0x000038, "Member 'BethesdaNetUIScreenBase_OnScreenConfirm::InKeyEvent' has a wrong offset!");
static_assert(offsetof(BethesdaNetUIScreenBase_OnScreenConfirm, ReturnValue) == 0x000078, "Member 'BethesdaNetUIScreenBase_OnScreenConfirm::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenAccountExists.LoginButtonClicked
// 0x0030 (0x0030 - 0x0000)
struct BethesdaNetUIScreenAccountExists_LoginButtonClicked final
{
public:
	class FText                                   UserName;                                          // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   Password;                                          // 0x0018(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetUIScreenAccountExists_LoginButtonClicked) == 0x000008, "Wrong alignment on BethesdaNetUIScreenAccountExists_LoginButtonClicked");
static_assert(sizeof(BethesdaNetUIScreenAccountExists_LoginButtonClicked) == 0x000030, "Wrong size on BethesdaNetUIScreenAccountExists_LoginButtonClicked");
static_assert(offsetof(BethesdaNetUIScreenAccountExists_LoginButtonClicked, UserName) == 0x000000, "Member 'BethesdaNetUIScreenAccountExists_LoginButtonClicked::UserName' has a wrong offset!");
static_assert(offsetof(BethesdaNetUIScreenAccountExists_LoginButtonClicked, Password) == 0x000018, "Member 'BethesdaNetUIScreenAccountExists_LoginButtonClicked::Password' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenAccountExists.SetError
// 0x0018 (0x0018 - 0x0000)
struct BethesdaNetUIScreenAccountExists_SetError final
{
public:
	class FText                                   InErrorMessage;                                    // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetUIScreenAccountExists_SetError) == 0x000008, "Wrong alignment on BethesdaNetUIScreenAccountExists_SetError");
static_assert(sizeof(BethesdaNetUIScreenAccountExists_SetError) == 0x000018, "Wrong size on BethesdaNetUIScreenAccountExists_SetError");
static_assert(offsetof(BethesdaNetUIScreenAccountExists_SetError, InErrorMessage) == 0x000000, "Member 'BethesdaNetUIScreenAccountExists_SetError::InErrorMessage' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenAgreements.SetInUpdatedMode
// 0x0001 (0x0001 - 0x0000)
struct BethesdaNetUIScreenAgreements_SetInUpdatedMode final
{
public:
	bool                                          bInUpdatedMode;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetUIScreenAgreements_SetInUpdatedMode) == 0x000001, "Wrong alignment on BethesdaNetUIScreenAgreements_SetInUpdatedMode");
static_assert(sizeof(BethesdaNetUIScreenAgreements_SetInUpdatedMode) == 0x000001, "Wrong size on BethesdaNetUIScreenAgreements_SetInUpdatedMode");
static_assert(offsetof(BethesdaNetUIScreenAgreements_SetInUpdatedMode, bInUpdatedMode) == 0x000000, "Member 'BethesdaNetUIScreenAgreements_SetInUpdatedMode::bInUpdatedMode' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenAgreements.SetLegalText
// 0x0020 (0x0020 - 0x0000)
struct BethesdaNetUIScreenAgreements_SetLegalText final
{
public:
	class FText                                   InLegalText;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bInPrivacyPolicy;                                  // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BethesdaNetUIScreenAgreements_SetLegalText) == 0x000008, "Wrong alignment on BethesdaNetUIScreenAgreements_SetLegalText");
static_assert(sizeof(BethesdaNetUIScreenAgreements_SetLegalText) == 0x000020, "Wrong size on BethesdaNetUIScreenAgreements_SetLegalText");
static_assert(offsetof(BethesdaNetUIScreenAgreements_SetLegalText, InLegalText) == 0x000000, "Member 'BethesdaNetUIScreenAgreements_SetLegalText::InLegalText' has a wrong offset!");
static_assert(offsetof(BethesdaNetUIScreenAgreements_SetLegalText, bInPrivacyPolicy) == 0x000018, "Member 'BethesdaNetUIScreenAgreements_SetLegalText::bInPrivacyPolicy' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenAgreements.IsInUpdatedMode
// 0x0001 (0x0001 - 0x0000)
struct BethesdaNetUIScreenAgreements_IsInUpdatedMode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetUIScreenAgreements_IsInUpdatedMode) == 0x000001, "Wrong alignment on BethesdaNetUIScreenAgreements_IsInUpdatedMode");
static_assert(sizeof(BethesdaNetUIScreenAgreements_IsInUpdatedMode) == 0x000001, "Wrong size on BethesdaNetUIScreenAgreements_IsInUpdatedMode");
static_assert(offsetof(BethesdaNetUIScreenAgreements_IsInUpdatedMode, ReturnValue) == 0x000000, "Member 'BethesdaNetUIScreenAgreements_IsInUpdatedMode::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenAgreements.IsSpinning
// 0x0001 (0x0001 - 0x0000)
struct BethesdaNetUIScreenAgreements_IsSpinning final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetUIScreenAgreements_IsSpinning) == 0x000001, "Wrong alignment on BethesdaNetUIScreenAgreements_IsSpinning");
static_assert(sizeof(BethesdaNetUIScreenAgreements_IsSpinning) == 0x000001, "Wrong size on BethesdaNetUIScreenAgreements_IsSpinning");
static_assert(offsetof(BethesdaNetUIScreenAgreements_IsSpinning, ReturnValue) == 0x000000, "Member 'BethesdaNetUIScreenAgreements_IsSpinning::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenError.SetConnectionError
// 0x0030 (0x0030 - 0x0000)
struct BethesdaNetUIScreenError_SetConnectionError final
{
public:
	class FText                                   InTitleText;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   InMessageText;                                     // 0x0018(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetUIScreenError_SetConnectionError) == 0x000008, "Wrong alignment on BethesdaNetUIScreenError_SetConnectionError");
static_assert(sizeof(BethesdaNetUIScreenError_SetConnectionError) == 0x000030, "Wrong size on BethesdaNetUIScreenError_SetConnectionError");
static_assert(offsetof(BethesdaNetUIScreenError_SetConnectionError, InTitleText) == 0x000000, "Member 'BethesdaNetUIScreenError_SetConnectionError::InTitleText' has a wrong offset!");
static_assert(offsetof(BethesdaNetUIScreenError_SetConnectionError, InMessageText) == 0x000018, "Member 'BethesdaNetUIScreenError_SetConnectionError::InMessageText' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenError.SetError
// 0x0040 (0x0040 - 0x0000)
struct BethesdaNetUIScreenError_SetError final
{
public:
	class FText                                   InTitleText;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   InMessageText;                                     // 0x0018(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 InErrorValue;                                      // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetUIScreenError_SetError) == 0x000008, "Wrong alignment on BethesdaNetUIScreenError_SetError");
static_assert(sizeof(BethesdaNetUIScreenError_SetError) == 0x000040, "Wrong size on BethesdaNetUIScreenError_SetError");
static_assert(offsetof(BethesdaNetUIScreenError_SetError, InTitleText) == 0x000000, "Member 'BethesdaNetUIScreenError_SetError::InTitleText' has a wrong offset!");
static_assert(offsetof(BethesdaNetUIScreenError_SetError, InMessageText) == 0x000018, "Member 'BethesdaNetUIScreenError_SetError::InMessageText' has a wrong offset!");
static_assert(offsetof(BethesdaNetUIScreenError_SetError, InErrorValue) == 0x000030, "Member 'BethesdaNetUIScreenError_SetError::InErrorValue' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenLogin.LoginButtonClicked
// 0x0030 (0x0030 - 0x0000)
struct BethesdaNetUIScreenLogin_LoginButtonClicked final
{
public:
	class FText                                   UserName;                                          // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   Password;                                          // 0x0018(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetUIScreenLogin_LoginButtonClicked) == 0x000008, "Wrong alignment on BethesdaNetUIScreenLogin_LoginButtonClicked");
static_assert(sizeof(BethesdaNetUIScreenLogin_LoginButtonClicked) == 0x000030, "Wrong size on BethesdaNetUIScreenLogin_LoginButtonClicked");
static_assert(offsetof(BethesdaNetUIScreenLogin_LoginButtonClicked, UserName) == 0x000000, "Member 'BethesdaNetUIScreenLogin_LoginButtonClicked::UserName' has a wrong offset!");
static_assert(offsetof(BethesdaNetUIScreenLogin_LoginButtonClicked, Password) == 0x000018, "Member 'BethesdaNetUIScreenLogin_LoginButtonClicked::Password' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenLogin.SetError
// 0x0018 (0x0018 - 0x0000)
struct BethesdaNetUIScreenLogin_SetError final
{
public:
	class FText                                   InError;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetUIScreenLogin_SetError) == 0x000008, "Wrong alignment on BethesdaNetUIScreenLogin_SetError");
static_assert(sizeof(BethesdaNetUIScreenLogin_SetError) == 0x000018, "Wrong size on BethesdaNetUIScreenLogin_SetError");
static_assert(offsetof(BethesdaNetUIScreenLogin_SetError, InError) == 0x000000, "Member 'BethesdaNetUIScreenLogin_SetError::InError' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenManagement.SetUserEmailAddress
// 0x0018 (0x0018 - 0x0000)
struct BethesdaNetUIScreenManagement_SetUserEmailAddress final
{
public:
	class FText                                   InEmailAddress;                                    // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetUIScreenManagement_SetUserEmailAddress) == 0x000008, "Wrong alignment on BethesdaNetUIScreenManagement_SetUserEmailAddress");
static_assert(sizeof(BethesdaNetUIScreenManagement_SetUserEmailAddress) == 0x000018, "Wrong size on BethesdaNetUIScreenManagement_SetUserEmailAddress");
static_assert(offsetof(BethesdaNetUIScreenManagement_SetUserEmailAddress, InEmailAddress) == 0x000000, "Member 'BethesdaNetUIScreenManagement_SetUserEmailAddress::InEmailAddress' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenQuickAccount.CreateAccountButtonClicked
// 0x0018 (0x0018 - 0x0000)
struct BethesdaNetUIScreenQuickAccount_CreateAccountButtonClicked final
{
public:
	class FText                                   InEmail;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetUIScreenQuickAccount_CreateAccountButtonClicked) == 0x000008, "Wrong alignment on BethesdaNetUIScreenQuickAccount_CreateAccountButtonClicked");
static_assert(sizeof(BethesdaNetUIScreenQuickAccount_CreateAccountButtonClicked) == 0x000018, "Wrong size on BethesdaNetUIScreenQuickAccount_CreateAccountButtonClicked");
static_assert(offsetof(BethesdaNetUIScreenQuickAccount_CreateAccountButtonClicked, InEmail) == 0x000000, "Member 'BethesdaNetUIScreenQuickAccount_CreateAccountButtonClicked::InEmail' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetUIScreenQuickAccount.SetFirstPartyEmail
// 0x0010 (0x0010 - 0x0000)
struct BethesdaNetUIScreenQuickAccount_SetFirstPartyEmail final
{
public:
	class FString                                 InEmail;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetUIScreenQuickAccount_SetFirstPartyEmail) == 0x000008, "Wrong alignment on BethesdaNetUIScreenQuickAccount_SetFirstPartyEmail");
static_assert(sizeof(BethesdaNetUIScreenQuickAccount_SetFirstPartyEmail) == 0x000010, "Wrong size on BethesdaNetUIScreenQuickAccount_SetFirstPartyEmail");
static_assert(offsetof(BethesdaNetUIScreenQuickAccount_SetFirstPartyEmail, InEmail) == 0x000000, "Member 'BethesdaNetUIScreenQuickAccount_SetFirstPartyEmail::InEmail' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetUIUserManagementFlow.BeginManagementFlow
// 0x0048 (0x0048 - 0x0000)
struct BethesdaNetUIUserManagementFlow_BeginManagementFlow final
{
public:
	int32                                         InLocalUserNum;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLatentActionInfo                      InLatentInfo;                                      // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	EBNetUIManagementFlow                         OutResult;                                         // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   OutError;                                          // 0x0028(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	int32                                         InZOrder;                                          // 0x0040(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BethesdaNetUIUserManagementFlow_BeginManagementFlow) == 0x000008, "Wrong alignment on BethesdaNetUIUserManagementFlow_BeginManagementFlow");
static_assert(sizeof(BethesdaNetUIUserManagementFlow_BeginManagementFlow) == 0x000048, "Wrong size on BethesdaNetUIUserManagementFlow_BeginManagementFlow");
static_assert(offsetof(BethesdaNetUIUserManagementFlow_BeginManagementFlow, InLocalUserNum) == 0x000000, "Member 'BethesdaNetUIUserManagementFlow_BeginManagementFlow::InLocalUserNum' has a wrong offset!");
static_assert(offsetof(BethesdaNetUIUserManagementFlow_BeginManagementFlow, InLatentInfo) == 0x000008, "Member 'BethesdaNetUIUserManagementFlow_BeginManagementFlow::InLatentInfo' has a wrong offset!");
static_assert(offsetof(BethesdaNetUIUserManagementFlow_BeginManagementFlow, OutResult) == 0x000020, "Member 'BethesdaNetUIUserManagementFlow_BeginManagementFlow::OutResult' has a wrong offset!");
static_assert(offsetof(BethesdaNetUIUserManagementFlow_BeginManagementFlow, OutError) == 0x000028, "Member 'BethesdaNetUIUserManagementFlow_BeginManagementFlow::OutError' has a wrong offset!");
static_assert(offsetof(BethesdaNetUIUserManagementFlow_BeginManagementFlow, InZOrder) == 0x000040, "Member 'BethesdaNetUIUserManagementFlow_BeginManagementFlow::InZOrder' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.BethesdaNetUIUserManagementFlow.BeginManagementFlowLatentCallback
// 0x0020 (0x0020 - 0x0000)
struct BethesdaNetUIUserManagementFlow_BeginManagementFlowLatentCallback final
{
public:
	int32                                         InLocalUserNum;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBNetUIManagementFlow                         InResult;                                          // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   InError;                                           // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BethesdaNetUIUserManagementFlow_BeginManagementFlowLatentCallback) == 0x000008, "Wrong alignment on BethesdaNetUIUserManagementFlow_BeginManagementFlowLatentCallback");
static_assert(sizeof(BethesdaNetUIUserManagementFlow_BeginManagementFlowLatentCallback) == 0x000020, "Wrong size on BethesdaNetUIUserManagementFlow_BeginManagementFlowLatentCallback");
static_assert(offsetof(BethesdaNetUIUserManagementFlow_BeginManagementFlowLatentCallback, InLocalUserNum) == 0x000000, "Member 'BethesdaNetUIUserManagementFlow_BeginManagementFlowLatentCallback::InLocalUserNum' has a wrong offset!");
static_assert(offsetof(BethesdaNetUIUserManagementFlow_BeginManagementFlowLatentCallback, InResult) == 0x000004, "Member 'BethesdaNetUIUserManagementFlow_BeginManagementFlowLatentCallback::InResult' has a wrong offset!");
static_assert(offsetof(BethesdaNetUIUserManagementFlow_BeginManagementFlowLatentCallback, InError) == 0x000008, "Member 'BethesdaNetUIUserManagementFlow_BeginManagementFlowLatentCallback::InError' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.OnlineSubsystemBethesdaNetBlueprintLibrary.GetAccountBUID
// 0x0018 (0x0018 - 0x0000)
struct OnlineSubsystemBethesdaNetBlueprintLibrary_GetAccountBUID final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineSubsystemBethesdaNetBlueprintLibrary_GetAccountBUID) == 0x000008, "Wrong alignment on OnlineSubsystemBethesdaNetBlueprintLibrary_GetAccountBUID");
static_assert(sizeof(OnlineSubsystemBethesdaNetBlueprintLibrary_GetAccountBUID) == 0x000018, "Wrong size on OnlineSubsystemBethesdaNetBlueprintLibrary_GetAccountBUID");
static_assert(offsetof(OnlineSubsystemBethesdaNetBlueprintLibrary_GetAccountBUID, LocalUserNum) == 0x000000, "Member 'OnlineSubsystemBethesdaNetBlueprintLibrary_GetAccountBUID::LocalUserNum' has a wrong offset!");
static_assert(offsetof(OnlineSubsystemBethesdaNetBlueprintLibrary_GetAccountBUID, ReturnValue) == 0x000008, "Member 'OnlineSubsystemBethesdaNetBlueprintLibrary_GetAccountBUID::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.OnlineSubsystemBethesdaNetBlueprintLibrary.GetLastErrorAsString
// 0x0010 (0x0010 - 0x0000)
struct OnlineSubsystemBethesdaNetBlueprintLibrary_GetLastErrorAsString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineSubsystemBethesdaNetBlueprintLibrary_GetLastErrorAsString) == 0x000008, "Wrong alignment on OnlineSubsystemBethesdaNetBlueprintLibrary_GetLastErrorAsString");
static_assert(sizeof(OnlineSubsystemBethesdaNetBlueprintLibrary_GetLastErrorAsString) == 0x000010, "Wrong size on OnlineSubsystemBethesdaNetBlueprintLibrary_GetLastErrorAsString");
static_assert(offsetof(OnlineSubsystemBethesdaNetBlueprintLibrary_GetLastErrorAsString, ReturnValue) == 0x000000, "Member 'OnlineSubsystemBethesdaNetBlueprintLibrary_GetLastErrorAsString::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.OnlineSubsystemBethesdaNetBlueprintLibrary.GetLastLoginResult
// 0x0001 (0x0001 - 0x0000)
struct OnlineSubsystemBethesdaNetBlueprintLibrary_GetLastLoginResult final
{
public:
	EBNetLoginResult                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineSubsystemBethesdaNetBlueprintLibrary_GetLastLoginResult) == 0x000001, "Wrong alignment on OnlineSubsystemBethesdaNetBlueprintLibrary_GetLastLoginResult");
static_assert(sizeof(OnlineSubsystemBethesdaNetBlueprintLibrary_GetLastLoginResult) == 0x000001, "Wrong size on OnlineSubsystemBethesdaNetBlueprintLibrary_GetLastLoginResult");
static_assert(offsetof(OnlineSubsystemBethesdaNetBlueprintLibrary_GetLastLoginResult, ReturnValue) == 0x000000, "Member 'OnlineSubsystemBethesdaNetBlueprintLibrary_GetLastLoginResult::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.OnlineSubsystemBethesdaNetBlueprintLibrary.GetLoggingPlatform
// 0x0001 (0x0001 - 0x0000)
struct OnlineSubsystemBethesdaNetBlueprintLibrary_GetLoggingPlatform final
{
public:
	EBNetLoggingPlatform                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineSubsystemBethesdaNetBlueprintLibrary_GetLoggingPlatform) == 0x000001, "Wrong alignment on OnlineSubsystemBethesdaNetBlueprintLibrary_GetLoggingPlatform");
static_assert(sizeof(OnlineSubsystemBethesdaNetBlueprintLibrary_GetLoggingPlatform) == 0x000001, "Wrong size on OnlineSubsystemBethesdaNetBlueprintLibrary_GetLoggingPlatform");
static_assert(offsetof(OnlineSubsystemBethesdaNetBlueprintLibrary_GetLoggingPlatform, ReturnValue) == 0x000000, "Member 'OnlineSubsystemBethesdaNetBlueprintLibrary_GetLoggingPlatform::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.OnlineSubsystemBethesdaNetBlueprintLibrary.GetPersistentUserId
// 0x0018 (0x0018 - 0x0000)
struct OnlineSubsystemBethesdaNetBlueprintLibrary_GetPersistentUserId final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineSubsystemBethesdaNetBlueprintLibrary_GetPersistentUserId) == 0x000008, "Wrong alignment on OnlineSubsystemBethesdaNetBlueprintLibrary_GetPersistentUserId");
static_assert(sizeof(OnlineSubsystemBethesdaNetBlueprintLibrary_GetPersistentUserId) == 0x000018, "Wrong size on OnlineSubsystemBethesdaNetBlueprintLibrary_GetPersistentUserId");
static_assert(offsetof(OnlineSubsystemBethesdaNetBlueprintLibrary_GetPersistentUserId, LocalUserNum) == 0x000000, "Member 'OnlineSubsystemBethesdaNetBlueprintLibrary_GetPersistentUserId::LocalUserNum' has a wrong offset!");
static_assert(offsetof(OnlineSubsystemBethesdaNetBlueprintLibrary_GetPersistentUserId, ReturnValue) == 0x000008, "Member 'OnlineSubsystemBethesdaNetBlueprintLibrary_GetPersistentUserId::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.OnlineSubsystemBethesdaNetBlueprintLibrary.GetPlatform
// 0x0001 (0x0001 - 0x0000)
struct OnlineSubsystemBethesdaNetBlueprintLibrary_GetPlatform final
{
public:
	EBNetPlatform                                 ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineSubsystemBethesdaNetBlueprintLibrary_GetPlatform) == 0x000001, "Wrong alignment on OnlineSubsystemBethesdaNetBlueprintLibrary_GetPlatform");
static_assert(sizeof(OnlineSubsystemBethesdaNetBlueprintLibrary_GetPlatform) == 0x000001, "Wrong size on OnlineSubsystemBethesdaNetBlueprintLibrary_GetPlatform");
static_assert(offsetof(OnlineSubsystemBethesdaNetBlueprintLibrary_GetPlatform, ReturnValue) == 0x000000, "Member 'OnlineSubsystemBethesdaNetBlueprintLibrary_GetPlatform::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.OnlineSubsystemBethesdaNetBlueprintLibrary.GetUserEmailAddress
// 0x0018 (0x0018 - 0x0000)
struct OnlineSubsystemBethesdaNetBlueprintLibrary_GetUserEmailAddress final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineSubsystemBethesdaNetBlueprintLibrary_GetUserEmailAddress) == 0x000008, "Wrong alignment on OnlineSubsystemBethesdaNetBlueprintLibrary_GetUserEmailAddress");
static_assert(sizeof(OnlineSubsystemBethesdaNetBlueprintLibrary_GetUserEmailAddress) == 0x000018, "Wrong size on OnlineSubsystemBethesdaNetBlueprintLibrary_GetUserEmailAddress");
static_assert(offsetof(OnlineSubsystemBethesdaNetBlueprintLibrary_GetUserEmailAddress, LocalUserNum) == 0x000000, "Member 'OnlineSubsystemBethesdaNetBlueprintLibrary_GetUserEmailAddress::LocalUserNum' has a wrong offset!");
static_assert(offsetof(OnlineSubsystemBethesdaNetBlueprintLibrary_GetUserEmailAddress, ReturnValue) == 0x000008, "Member 'OnlineSubsystemBethesdaNetBlueprintLibrary_GetUserEmailAddress::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemBethesdaNet.OnlineSubsystemBethesdaNetBlueprintLibrary.IsLastErrorAConnectionIssue
// 0x0001 (0x0001 - 0x0000)
struct OnlineSubsystemBethesdaNetBlueprintLibrary_IsLastErrorAConnectionIssue final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineSubsystemBethesdaNetBlueprintLibrary_IsLastErrorAConnectionIssue) == 0x000001, "Wrong alignment on OnlineSubsystemBethesdaNetBlueprintLibrary_IsLastErrorAConnectionIssue");
static_assert(sizeof(OnlineSubsystemBethesdaNetBlueprintLibrary_IsLastErrorAConnectionIssue) == 0x000001, "Wrong size on OnlineSubsystemBethesdaNetBlueprintLibrary_IsLastErrorAConnectionIssue");
static_assert(offsetof(OnlineSubsystemBethesdaNetBlueprintLibrary_IsLastErrorAConnectionIssue, ReturnValue) == 0x000000, "Member 'OnlineSubsystemBethesdaNetBlueprintLibrary_IsLastErrorAConnectionIssue::ReturnValue' has a wrong offset!");

}

