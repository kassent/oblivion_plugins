#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Behavior_PerformRightLeftAttackLoop

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Altar_structs.hpp"


namespace SDK::Params
{

// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.AttemptCancellation
// 0x0018 (0x0018 - 0x0000)
struct Behavior_PerformRightLeftAttackLoop_C_AttemptCancellation final
{
public:
	bool                                          CallFunc_ShouldCancelToOtherAction_ShouldCancel;   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AVPairedPawn*                           CallFunc_GetControlledPawn_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Behavior_PerformRightLeftAttackLoop_C_AttemptCancellation) == 0x000008, "Wrong alignment on Behavior_PerformRightLeftAttackLoop_C_AttemptCancellation");
static_assert(sizeof(Behavior_PerformRightLeftAttackLoop_C_AttemptCancellation) == 0x000018, "Wrong size on Behavior_PerformRightLeftAttackLoop_C_AttemptCancellation");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_AttemptCancellation, CallFunc_ShouldCancelToOtherAction_ShouldCancel) == 0x000000, "Member 'Behavior_PerformRightLeftAttackLoop_C_AttemptCancellation::CallFunc_ShouldCancelToOtherAction_ShouldCancel' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_AttemptCancellation, CallFunc_GetControlledPawn_ReturnValue) == 0x000008, "Member 'Behavior_PerformRightLeftAttackLoop_C_AttemptCancellation::CallFunc_GetControlledPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_AttemptCancellation, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'Behavior_PerformRightLeftAttackLoop_C_AttemptCancellation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_AttemptCancellation, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'Behavior_PerformRightLeftAttackLoop_C_AttemptCancellation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_AttemptCancellation, CallFunc_BooleanAND_ReturnValue_1) == 0x000012, "Member 'Behavior_PerformRightLeftAttackLoop_C_AttemptCancellation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.BindToActionEvents
// 0x0018 (0x0018 - 0x0000)
struct Behavior_PerformRightLeftAttackLoop_C_BindToActionEvents final
{
public:
	class UVPawnAnimatedAction*                   Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& EventTag, const class UAnimNotifyActionEventInfo* EventSource)> K2Node_CreateDelegate_OutputDelegate; // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Behavior_PerformRightLeftAttackLoop_C_BindToActionEvents) == 0x000008, "Wrong alignment on Behavior_PerformRightLeftAttackLoop_C_BindToActionEvents");
static_assert(sizeof(Behavior_PerformRightLeftAttackLoop_C_BindToActionEvents) == 0x000018, "Wrong size on Behavior_PerformRightLeftAttackLoop_C_BindToActionEvents");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_BindToActionEvents, Action) == 0x000000, "Member 'Behavior_PerformRightLeftAttackLoop_C_BindToActionEvents::Action' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_BindToActionEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Behavior_PerformRightLeftAttackLoop_C_BindToActionEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.EnterFollowThrough
// 0x0018 (0x0018 - 0x0000)
struct Behavior_PerformRightLeftAttackLoop_C_EnterFollowThrough final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVAnimGroup                                   Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVAnimGroup                                   Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AVPairedPawn*                           CallFunc_GetControlledPawn_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentAttackDirection_IsRightAttack;  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVAnimGroup                                   K2Node_Select_Default;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Behavior_PerformRightLeftAttackLoop_C_EnterFollowThrough) == 0x000008, "Wrong alignment on Behavior_PerformRightLeftAttackLoop_C_EnterFollowThrough");
static_assert(sizeof(Behavior_PerformRightLeftAttackLoop_C_EnterFollowThrough) == 0x000018, "Wrong size on Behavior_PerformRightLeftAttackLoop_C_EnterFollowThrough");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_EnterFollowThrough, Temp_bool_Variable) == 0x000000, "Member 'Behavior_PerformRightLeftAttackLoop_C_EnterFollowThrough::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_EnterFollowThrough, Temp_byte_Variable) == 0x000001, "Member 'Behavior_PerformRightLeftAttackLoop_C_EnterFollowThrough::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_EnterFollowThrough, Temp_byte_Variable_1) == 0x000002, "Member 'Behavior_PerformRightLeftAttackLoop_C_EnterFollowThrough::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_EnterFollowThrough, CallFunc_GetControlledPawn_ReturnValue) == 0x000008, "Member 'Behavior_PerformRightLeftAttackLoop_C_EnterFollowThrough::CallFunc_GetControlledPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_EnterFollowThrough, CallFunc_GetCurrentAttackDirection_IsRightAttack) == 0x000010, "Member 'Behavior_PerformRightLeftAttackLoop_C_EnterFollowThrough::CallFunc_GetCurrentAttackDirection_IsRightAttack' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_EnterFollowThrough, K2Node_Select_Default) == 0x000011, "Member 'Behavior_PerformRightLeftAttackLoop_C_EnterFollowThrough::K2Node_Select_Default' has a wrong offset!");

// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop
// 0x0128 (0x0128 - 0x0000)
struct Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVAnimGroup                                   Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVAnimGroup                                   Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVActionType                                  Temp_byte_Variable_2;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVActionType                                  Temp_byte_Variable_3;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVAnimGroup                                   Temp_byte_Variable_4;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVAnimGroup                                   Temp_byte_Variable_5;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentAttackDuration_ReturnValue;     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentAttackDirection_IsRightAttack;  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AVPairedPawn*                           CallFunc_GetControlledPawn_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AVPairedPawn*                           CallFunc_GetControlledPawn_ReturnValue_1;          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVPawnAnimatedAction*                   CallFunc_PlayDefaultAnimatedAction_Action;         // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStateMachinePlayAnimatedAction*        CallFunc_PlayDefaultAnimatedAction_ReturnValue;    // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedTime_ReturnValue;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AVPairedPawn*                           CallFunc_GetControlledPawn_ReturnValue_2;          // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentAttackDirection_IsRightAttack_1; // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVActionType                                  Temp_byte_Variable_6;                              // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVAnimGroup                                   K2Node_Select_Default;                             // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVPairedPawn*                           CallFunc_GetControlledPawn_ReturnValue_3;          // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentAttackDuration_ReturnValue_1;   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentAttackDirection_IsRightAttack_2; // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AVPairedPawn*                           CallFunc_GetControlledPawn_ReturnValue_4;          // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EVActionType                                  K2Node_Select_Default_1;                           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVPawnAnimatedAction*                   CallFunc_PlayDefaultAnimatedAction_Action_1;       // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStateMachinePlayAnimatedAction*        CallFunc_PlayDefaultAnimatedAction_ReturnValue_1;  // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AVPairedPawn*                           CallFunc_GetControlledPawn_ReturnValue_5;          // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetElapsedTime_ReturnValue_1;             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AVPairedPawn*                           CallFunc_GetControlledPawn_ReturnValue_6;          // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentAttackDirection_IsRightAttack_3; // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVAnimGroup                                   K2Node_Select_Default_2;                           // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVPairedPawn*                           CallFunc_GetControlledPawn_ReturnValue_7;          // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EVActionType                                  Temp_byte_Variable_7;                              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTime;                            // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVActionType                                  K2Node_Select_Default_3;                           // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AVPairedPawn*                           CallFunc_GetControlledPawn_ReturnValue_8;          // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInterrupted;                         // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AVPairedPawn*                           CallFunc_GetControlledPawn_ReturnValue_9;          // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AVPairedPawn*                           CallFunc_GetControlledPawn_ReturnValue_10;         // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_LatestAttackStartTime_ImplicitCast; // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_LatestAttackStartTime_ImplicitCast_1; // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop) == 0x000008, "Wrong alignment on Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop");
static_assert(sizeof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop) == 0x000128, "Wrong size on Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, EntryPoint) == 0x000000, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::EntryPoint' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, Temp_bool_Variable) == 0x000004, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, Temp_byte_Variable) == 0x000005, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, Temp_byte_Variable_1) == 0x000006, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, Temp_bool_Variable_1) == 0x000028, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, Temp_byte_Variable_2) == 0x000029, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, Temp_byte_Variable_3) == 0x00002A, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, Temp_bool_Variable_2) == 0x00002B, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, Temp_byte_Variable_4) == 0x00002C, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, Temp_byte_Variable_5) == 0x00002D, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, K2Node_CreateDelegate_OutputDelegate_3) == 0x000040, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_GetCurrentAttackDuration_ReturnValue) == 0x000050, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_GetCurrentAttackDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_GetCurrentAttackDirection_IsRightAttack) == 0x000054, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_GetCurrentAttackDirection_IsRightAttack' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_GetControlledPawn_ReturnValue) == 0x000058, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_GetControlledPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_GetControlledPawn_ReturnValue_1) == 0x000060, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_GetControlledPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_PlayDefaultAnimatedAction_Action) == 0x000068, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_PlayDefaultAnimatedAction_Action' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_PlayDefaultAnimatedAction_ReturnValue) == 0x000070, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_PlayDefaultAnimatedAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_GetElapsedTime_ReturnValue) == 0x000078, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_GetElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_IsValid_ReturnValue) == 0x00007C, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_GetControlledPawn_ReturnValue_2) == 0x000080, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_GetControlledPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_GetCurrentAttackDirection_IsRightAttack_1) == 0x000088, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_GetCurrentAttackDirection_IsRightAttack_1' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, Temp_byte_Variable_6) == 0x000089, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, K2Node_Select_Default) == 0x00008A, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_Not_PreBool_ReturnValue) == 0x00008B, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_GetControlledPawn_ReturnValue_3) == 0x000090, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_GetControlledPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_GetCurrentAttackDuration_ReturnValue_1) == 0x000098, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_GetCurrentAttackDuration_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_GetCurrentAttackDirection_IsRightAttack_2) == 0x00009C, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_GetCurrentAttackDirection_IsRightAttack_2' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_GetControlledPawn_ReturnValue_4) == 0x0000A0, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_GetControlledPawn_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, K2Node_Select_Default_1) == 0x0000A8, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_PlayDefaultAnimatedAction_Action_1) == 0x0000B0, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_PlayDefaultAnimatedAction_Action_1' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_PlayDefaultAnimatedAction_ReturnValue_1) == 0x0000B8, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_PlayDefaultAnimatedAction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_GetControlledPawn_ReturnValue_5) == 0x0000C0, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_GetControlledPawn_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_IsValid_ReturnValue_1) == 0x0000C8, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_GetElapsedTime_ReturnValue_1) == 0x0000CC, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_GetElapsedTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_GetControlledPawn_ReturnValue_6) == 0x0000D0, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_GetControlledPawn_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_GetCurrentAttackDirection_IsRightAttack_3) == 0x0000D8, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_GetCurrentAttackDirection_IsRightAttack_3' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, Temp_bool_Variable_3) == 0x0000D9, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, K2Node_Select_Default_2) == 0x0000DA, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000DB, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_GetControlledPawn_ReturnValue_7) == 0x0000E0, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_GetControlledPawn_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, Temp_byte_Variable_7) == 0x0000E8, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, K2Node_Event_DeltaTime) == 0x0000EC, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, K2Node_Select_Default_3) == 0x0000F0, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_GetControlledPawn_ReturnValue_8) == 0x0000F8, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_GetControlledPawn_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_BooleanAND_ReturnValue) == 0x000100, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, K2Node_Event_bInterrupted) == 0x000101, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::K2Node_Event_bInterrupted' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_GetControlledPawn_ReturnValue_9) == 0x000108, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_GetControlledPawn_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, CallFunc_GetControlledPawn_ReturnValue_10) == 0x000110, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::CallFunc_GetControlledPawn_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, K2Node_VariableSet_LatestAttackStartTime_ImplicitCast) == 0x000118, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::K2Node_VariableSet_LatestAttackStartTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop, K2Node_VariableSet_LatestAttackStartTime_ImplicitCast_1) == 0x000120, "Member 'Behavior_PerformRightLeftAttackLoop_C_ExecuteUbergraph_Behavior_PerformRightLeftAttackLoop::K2Node_VariableSet_LatestAttackStartTime_ImplicitCast_1' has a wrong offset!");

// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.GetCurrentAttackDirection
// 0x0018 (0x0018 - 0x0000)
struct Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackDirection final
{
public:
	bool                                          IsRightAttack;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AVPairedPawn*                           CallFunc_GetControlledPawn_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackDirection) == 0x000008, "Wrong alignment on Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackDirection");
static_assert(sizeof(Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackDirection) == 0x000018, "Wrong size on Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackDirection");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackDirection, IsRightAttack) == 0x000000, "Member 'Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackDirection::IsRightAttack' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackDirection, CallFunc_GetControlledPawn_ReturnValue) == 0x000008, "Member 'Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackDirection::CallFunc_GetControlledPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackDirection, CallFunc_HasTag_ReturnValue) == 0x000010, "Member 'Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackDirection::CallFunc_HasTag_ReturnValue' has a wrong offset!");

// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.GetCurrentAttackDuration
// 0x0018 (0x0018 - 0x0000)
struct Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVPairedPawn*                           CallFunc_GetControlledPawn_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActionStateDuration_ReturnValue;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackDuration) == 0x000008, "Wrong alignment on Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackDuration");
static_assert(sizeof(Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackDuration) == 0x000018, "Wrong size on Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackDuration");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackDuration, ReturnValue) == 0x000000, "Member 'Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackDuration::ReturnValue' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackDuration, CallFunc_GetControlledPawn_ReturnValue) == 0x000008, "Member 'Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackDuration::CallFunc_GetControlledPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackDuration, CallFunc_GetActionStateDuration_ReturnValue) == 0x000010, "Member 'Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackDuration::CallFunc_GetActionStateDuration_ReturnValue' has a wrong offset!");

// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.GetCurrentAttackTime
// 0x0020 (0x0020 - 0x0000)
struct Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackTime final
{
public:
	double                                        CurrentAttackTime;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedTime_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackTime) == 0x000008, "Wrong alignment on Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackTime");
static_assert(sizeof(Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackTime) == 0x000020, "Wrong size on Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackTime");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackTime, CurrentAttackTime) == 0x000000, "Member 'Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackTime::CurrentAttackTime' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackTime, CallFunc_GetElapsedTime_ReturnValue) == 0x000008, "Member 'Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackTime::CallFunc_GetElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackTime, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackTime::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackTime, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000018, "Member 'Behavior_PerformRightLeftAttackLoop_C_GetCurrentAttackTime::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.HandleAttackActionEvent
// 0x0018 (0x0018 - 0x0000)
struct Behavior_PerformRightLeftAttackLoop_C_HandleAttackActionEvent final
{
public:
	struct FGameplayTag                           Event_Tag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UAnimNotifyActionEventInfo*             Anim_Notify_Action_Event;                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Behavior_PerformRightLeftAttackLoop_C_HandleAttackActionEvent) == 0x000008, "Wrong alignment on Behavior_PerformRightLeftAttackLoop_C_HandleAttackActionEvent");
static_assert(sizeof(Behavior_PerformRightLeftAttackLoop_C_HandleAttackActionEvent) == 0x000018, "Wrong size on Behavior_PerformRightLeftAttackLoop_C_HandleAttackActionEvent");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_HandleAttackActionEvent, Event_Tag) == 0x000000, "Member 'Behavior_PerformRightLeftAttackLoop_C_HandleAttackActionEvent::Event_Tag' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_HandleAttackActionEvent, Anim_Notify_Action_Event) == 0x000008, "Member 'Behavior_PerformRightLeftAttackLoop_C_HandleAttackActionEvent::Anim_Notify_Action_Event' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_HandleAttackActionEvent, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000010, "Member 'Behavior_PerformRightLeftAttackLoop_C_HandleAttackActionEvent::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.OnAnimatedActionEvent
// 0x0010 (0x0010 - 0x0000)
struct Behavior_PerformRightLeftAttackLoop_C_OnAnimatedActionEvent final
{
public:
	struct FGameplayTag                           Event_Tag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UAnimNotifyActionEventInfo*             Event_Source;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Behavior_PerformRightLeftAttackLoop_C_OnAnimatedActionEvent) == 0x000008, "Wrong alignment on Behavior_PerformRightLeftAttackLoop_C_OnAnimatedActionEvent");
static_assert(sizeof(Behavior_PerformRightLeftAttackLoop_C_OnAnimatedActionEvent) == 0x000010, "Wrong size on Behavior_PerformRightLeftAttackLoop_C_OnAnimatedActionEvent");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_OnAnimatedActionEvent, Event_Tag) == 0x000000, "Member 'Behavior_PerformRightLeftAttackLoop_C_OnAnimatedActionEvent::Event_Tag' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_OnAnimatedActionEvent, Event_Source) == 0x000008, "Member 'Behavior_PerformRightLeftAttackLoop_C_OnAnimatedActionEvent::Event_Source' has a wrong offset!");

// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.OnEnd
// 0x0001 (0x0001 - 0x0000)
struct Behavior_PerformRightLeftAttackLoop_C_OnEnd final
{
public:
	bool                                          bInterrupted;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Behavior_PerformRightLeftAttackLoop_C_OnEnd) == 0x000001, "Wrong alignment on Behavior_PerformRightLeftAttackLoop_C_OnEnd");
static_assert(sizeof(Behavior_PerformRightLeftAttackLoop_C_OnEnd) == 0x000001, "Wrong size on Behavior_PerformRightLeftAttackLoop_C_OnEnd");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_OnEnd, bInterrupted) == 0x000000, "Member 'Behavior_PerformRightLeftAttackLoop_C_OnEnd::bInterrupted' has a wrong offset!");

// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.OnUpdate
// 0x0004 (0x0004 - 0x0000)
struct Behavior_PerformRightLeftAttackLoop_C_OnUpdate final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Behavior_PerformRightLeftAttackLoop_C_OnUpdate) == 0x000004, "Wrong alignment on Behavior_PerformRightLeftAttackLoop_C_OnUpdate");
static_assert(sizeof(Behavior_PerformRightLeftAttackLoop_C_OnUpdate) == 0x000004, "Wrong size on Behavior_PerformRightLeftAttackLoop_C_OnUpdate");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_OnUpdate, DeltaTime) == 0x000000, "Member 'Behavior_PerformRightLeftAttackLoop_C_OnUpdate::DeltaTime' has a wrong offset!");

// Function Behavior_PerformRightLeftAttackLoop.Behavior_PerformRightLeftAttackLoop_C.UpdateLightAttackAnimTag
// 0x00A0 (0x00A0 - 0x0000)
struct Behavior_PerformRightLeftAttackLoop_C_UpdateLightAttackAnimTag final
{
public:
	class AVPairedPawn*                           CallFunc_GetControlledPawn_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AVPairedPawn*                           CallFunc_GetControlledPawn_ReturnValue_1;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AVPairedPawn*                           CallFunc_GetControlledPawn_ReturnValue_2;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AVPairedPawn*                           CallFunc_GetControlledPawn_ReturnValue_3;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0020(0x0020)()
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1; // 0x0040(0x0020)()
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2; // 0x0060(0x0020)()
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3; // 0x0080(0x0020)()
};
static_assert(alignof(Behavior_PerformRightLeftAttackLoop_C_UpdateLightAttackAnimTag) == 0x000008, "Wrong alignment on Behavior_PerformRightLeftAttackLoop_C_UpdateLightAttackAnimTag");
static_assert(sizeof(Behavior_PerformRightLeftAttackLoop_C_UpdateLightAttackAnimTag) == 0x0000A0, "Wrong size on Behavior_PerformRightLeftAttackLoop_C_UpdateLightAttackAnimTag");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_UpdateLightAttackAnimTag, CallFunc_GetControlledPawn_ReturnValue) == 0x000000, "Member 'Behavior_PerformRightLeftAttackLoop_C_UpdateLightAttackAnimTag::CallFunc_GetControlledPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_UpdateLightAttackAnimTag, CallFunc_GetControlledPawn_ReturnValue_1) == 0x000008, "Member 'Behavior_PerformRightLeftAttackLoop_C_UpdateLightAttackAnimTag::CallFunc_GetControlledPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_UpdateLightAttackAnimTag, CallFunc_GetControlledPawn_ReturnValue_2) == 0x000010, "Member 'Behavior_PerformRightLeftAttackLoop_C_UpdateLightAttackAnimTag::CallFunc_GetControlledPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_UpdateLightAttackAnimTag, CallFunc_GetControlledPawn_ReturnValue_3) == 0x000018, "Member 'Behavior_PerformRightLeftAttackLoop_C_UpdateLightAttackAnimTag::CallFunc_GetControlledPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_UpdateLightAttackAnimTag, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000020, "Member 'Behavior_PerformRightLeftAttackLoop_C_UpdateLightAttackAnimTag::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_UpdateLightAttackAnimTag, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1) == 0x000040, "Member 'Behavior_PerformRightLeftAttackLoop_C_UpdateLightAttackAnimTag::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_UpdateLightAttackAnimTag, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2) == 0x000060, "Member 'Behavior_PerformRightLeftAttackLoop_C_UpdateLightAttackAnimTag::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Behavior_PerformRightLeftAttackLoop_C_UpdateLightAttackAnimTag, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3) == 0x000080, "Member 'Behavior_PerformRightLeftAttackLoop_C_UpdateLightAttackAnimTag::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3' has a wrong offset!");

}

