#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COND_Parent

#include "Basic.hpp"


namespace SDK::Params
{

// Function COND_Parent.COND_Parent_C.ExecuteUbergraph_COND_Parent
// 0x0038 (0x0038 - 0x0000)
struct COND_Parent_C_ExecuteUbergraph_COND_Parent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVStateBase*                            K2Node_Event_OwnerState;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVStateMachineComponent*                CallFunc_GetOwningStateMachineComponent_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AVPairedPawn*                           K2Node_DynamicCast_AsVPaired_Pawn;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COND_Parent_C_ExecuteUbergraph_COND_Parent) == 0x000008, "Wrong alignment on COND_Parent_C_ExecuteUbergraph_COND_Parent");
static_assert(sizeof(COND_Parent_C_ExecuteUbergraph_COND_Parent) == 0x000038, "Wrong size on COND_Parent_C_ExecuteUbergraph_COND_Parent");
static_assert(offsetof(COND_Parent_C_ExecuteUbergraph_COND_Parent, EntryPoint) == 0x000000, "Member 'COND_Parent_C_ExecuteUbergraph_COND_Parent::EntryPoint' has a wrong offset!");
static_assert(offsetof(COND_Parent_C_ExecuteUbergraph_COND_Parent, K2Node_Event_OwnerState) == 0x000008, "Member 'COND_Parent_C_ExecuteUbergraph_COND_Parent::K2Node_Event_OwnerState' has a wrong offset!");
static_assert(offsetof(COND_Parent_C_ExecuteUbergraph_COND_Parent, CallFunc_GetOwningStateMachineComponent_ReturnValue) == 0x000010, "Member 'COND_Parent_C_ExecuteUbergraph_COND_Parent::CallFunc_GetOwningStateMachineComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(COND_Parent_C_ExecuteUbergraph_COND_Parent, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'COND_Parent_C_ExecuteUbergraph_COND_Parent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COND_Parent_C_ExecuteUbergraph_COND_Parent, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'COND_Parent_C_ExecuteUbergraph_COND_Parent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COND_Parent_C_ExecuteUbergraph_COND_Parent, K2Node_DynamicCast_AsVPaired_Pawn) == 0x000028, "Member 'COND_Parent_C_ExecuteUbergraph_COND_Parent::K2Node_DynamicCast_AsVPaired_Pawn' has a wrong offset!");
static_assert(offsetof(COND_Parent_C_ExecuteUbergraph_COND_Parent, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'COND_Parent_C_ExecuteUbergraph_COND_Parent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function COND_Parent.COND_Parent_C.PostInit
// 0x0008 (0x0008 - 0x0000)
struct COND_Parent_C_PostInit final
{
public:
	class UVStateBase*                            OwnerState;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COND_Parent_C_PostInit) == 0x000008, "Wrong alignment on COND_Parent_C_PostInit");
static_assert(sizeof(COND_Parent_C_PostInit) == 0x000008, "Wrong size on COND_Parent_C_PostInit");
static_assert(offsetof(COND_Parent_C_PostInit, OwnerState) == 0x000000, "Member 'COND_Parent_C_PostInit::OwnerState' has a wrong offset!");

}

