#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TABP_HorseJump

#include "Basic.hpp"

#include "TABP_HorseJump_structs.hpp"
#include "Struct_Horse_Jump_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Altar_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass TABP_HorseJump.TABP_HorseJump_C
// 0x0B80 (0x1020 - 0x04A0)
class UTABP_HorseJump_C final : public UVInAirLocomotionHorseAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct TABP_HorseJump::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;               // 0x04A8(0x0008)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x04B0(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x04B8(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x04C0(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x04E0(0x00B8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x0598(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x05C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x05E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x0610(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0638(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0660(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0688(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x06B0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x06D8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x0720(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0740(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0768(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0790(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x07B8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x07E0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x0828(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0848(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x0890(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x08B0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x08F8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0918(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0960(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0980(0x0028)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x09A8(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0A70(0x0020)()
	struct FAnimNode_Sync                         AnimGraphNode_Sync;                                // 0x0A90(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0AC0(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0AE8(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0B08(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0B78(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0B98(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0BC0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0BE8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0C10(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0C58(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0C78(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0CC0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0CE0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0D28(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0D48(0x0028)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0D70(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0E38(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0E58(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0F20(0x0080)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0FA0(0x0020)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x0FC0(0x0010)()
	bool                                          K2Node_PropertyAccess_18;                          // 0x0FD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_17;                          // 0x0FD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_15;                          // 0x0FD2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_14;                          // 0x0FD3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_11;                          // 0x0FD4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_10;                          // 0x0FD5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_7;                           // 0x0FD6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_5;                           // 0x0FD7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_Horse_Jump                     LayerData;                                         // 0x0FD8(0x0048)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void ExecuteUbergraph_TABP_HorseJump(int32 EntryPoint);
	void LocomotionInAirLayer(const struct FPoseLink& LocomotionPose, struct FPoseLink* LocomotionInAirLayer_0);
	void OnStateEntry(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void OnStateExit(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TABP_HorseJump_C">();
	}
	static class UTABP_HorseJump_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTABP_HorseJump_C>();
	}
};
static_assert(alignof(UTABP_HorseJump_C) == 0x000010, "Wrong alignment on UTABP_HorseJump_C");
static_assert(sizeof(UTABP_HorseJump_C) == 0x001020, "Wrong size on UTABP_HorseJump_C");
static_assert(offsetof(UTABP_HorseJump_C, UberGraphFrame) == 0x0004A0, "Member 'UTABP_HorseJump_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, __AnimBlueprintMutables) == 0x0004A8, "Member 'UTABP_HorseJump_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimBlueprintExtension_PropertyAccess) == 0x0004B0, "Member 'UTABP_HorseJump_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimBlueprintExtension_Base) == 0x0004B8, "Member 'UTABP_HorseJump_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_Root_1) == 0x0004C0, "Member 'UTABP_HorseJump_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_LinkedInputPose) == 0x0004E0, "Member 'UTABP_HorseJump_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_TransitionResult_16) == 0x000598, "Member 'UTABP_HorseJump_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_TransitionResult_15) == 0x0005C0, "Member 'UTABP_HorseJump_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_TransitionResult_14) == 0x0005E8, "Member 'UTABP_HorseJump_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_TransitionResult_13) == 0x000610, "Member 'UTABP_HorseJump_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_TransitionResult_12) == 0x000638, "Member 'UTABP_HorseJump_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_TransitionResult_11) == 0x000660, "Member 'UTABP_HorseJump_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_TransitionResult_10) == 0x000688, "Member 'UTABP_HorseJump_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_TransitionResult_9) == 0x0006B0, "Member 'UTABP_HorseJump_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_SequencePlayer_7) == 0x0006D8, "Member 'UTABP_HorseJump_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_StateResult_11) == 0x000720, "Member 'UTABP_HorseJump_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_TransitionResult_8) == 0x000740, "Member 'UTABP_HorseJump_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_TransitionResult_7) == 0x000768, "Member 'UTABP_HorseJump_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_TransitionResult_6) == 0x000790, "Member 'UTABP_HorseJump_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_TransitionResult_5) == 0x0007B8, "Member 'UTABP_HorseJump_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_SequencePlayer_6) == 0x0007E0, "Member 'UTABP_HorseJump_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_StateResult_10) == 0x000828, "Member 'UTABP_HorseJump_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_SequencePlayer_5) == 0x000848, "Member 'UTABP_HorseJump_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_StateResult_9) == 0x000890, "Member 'UTABP_HorseJump_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_SequencePlayer_4) == 0x0008B0, "Member 'UTABP_HorseJump_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_StateResult_8) == 0x0008F8, "Member 'UTABP_HorseJump_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_SequencePlayer_3) == 0x000918, "Member 'UTABP_HorseJump_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_StateResult_7) == 0x000960, "Member 'UTABP_HorseJump_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_TransitionResult_4) == 0x000980, "Member 'UTABP_HorseJump_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_StateMachine_2) == 0x0009A8, "Member 'UTABP_HorseJump_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_StateResult_6) == 0x000A70, "Member 'UTABP_HorseJump_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_Sync) == 0x000A90, "Member 'UTABP_HorseJump_C::AnimGraphNode_Sync' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_UseCachedPose) == 0x000AC0, "Member 'UTABP_HorseJump_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_StateResult_5) == 0x000AE8, "Member 'UTABP_HorseJump_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_BlendSpacePlayer) == 0x000B08, "Member 'UTABP_HorseJump_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_StateResult_4) == 0x000B78, "Member 'UTABP_HorseJump_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_TransitionResult_3) == 0x000B98, "Member 'UTABP_HorseJump_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_TransitionResult_2) == 0x000BC0, "Member 'UTABP_HorseJump_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_TransitionResult_1) == 0x000BE8, "Member 'UTABP_HorseJump_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_SequencePlayer_2) == 0x000C10, "Member 'UTABP_HorseJump_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_StateResult_3) == 0x000C58, "Member 'UTABP_HorseJump_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_SequencePlayer_1) == 0x000C78, "Member 'UTABP_HorseJump_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_StateResult_2) == 0x000CC0, "Member 'UTABP_HorseJump_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_SequencePlayer) == 0x000CE0, "Member 'UTABP_HorseJump_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_StateResult_1) == 0x000D28, "Member 'UTABP_HorseJump_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_TransitionResult) == 0x000D48, "Member 'UTABP_HorseJump_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_StateMachine_1) == 0x000D70, "Member 'UTABP_HorseJump_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_StateResult) == 0x000E38, "Member 'UTABP_HorseJump_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_StateMachine) == 0x000E58, "Member 'UTABP_HorseJump_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_SaveCachedPose) == 0x000F20, "Member 'UTABP_HorseJump_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_Root) == 0x000FA0, "Member 'UTABP_HorseJump_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, AnimGraphNode_LocalRefPose) == 0x000FC0, "Member 'UTABP_HorseJump_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, K2Node_PropertyAccess_18) == 0x000FD0, "Member 'UTABP_HorseJump_C::K2Node_PropertyAccess_18' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, K2Node_PropertyAccess_17) == 0x000FD1, "Member 'UTABP_HorseJump_C::K2Node_PropertyAccess_17' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, K2Node_PropertyAccess_15) == 0x000FD2, "Member 'UTABP_HorseJump_C::K2Node_PropertyAccess_15' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, K2Node_PropertyAccess_14) == 0x000FD3, "Member 'UTABP_HorseJump_C::K2Node_PropertyAccess_14' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, K2Node_PropertyAccess_11) == 0x000FD4, "Member 'UTABP_HorseJump_C::K2Node_PropertyAccess_11' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, K2Node_PropertyAccess_10) == 0x000FD5, "Member 'UTABP_HorseJump_C::K2Node_PropertyAccess_10' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, K2Node_PropertyAccess_7) == 0x000FD6, "Member 'UTABP_HorseJump_C::K2Node_PropertyAccess_7' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, K2Node_PropertyAccess_5) == 0x000FD7, "Member 'UTABP_HorseJump_C::K2Node_PropertyAccess_5' has a wrong offset!");
static_assert(offsetof(UTABP_HorseJump_C, LayerData) == 0x000FD8, "Member 'UTABP_HorseJump_C::LayerData' has a wrong offset!");

}

