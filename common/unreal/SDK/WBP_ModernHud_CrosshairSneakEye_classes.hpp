#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ModernHud_CrosshairSneakEye

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "Altar_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ModernHud_CrosshairSneakEye.WBP_ModernHud_CrosshairSneakEye_C
// 0x00A8 (0x0390 - 0x02E8)
class UWBP_ModernHud_CrosshairSneakEye_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       OnHitAnimation;                                    // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DrawBowAnimation;                                  // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Crosshair;                                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FTimerHandle                           ReverseAnimTimerHandler;                           // 0x0308(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        LocalTime;                                         // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UndrawShootDuration;                               // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BowDrawDuration;                                   // 0x031C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DrawBowAniEndTime;                                 // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EModernReticleWeaponBehavior                  CurrentBehavior;                                   // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSneaking;                                        // 0x0329(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32A[0x6];                                      // 0x032A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CrosshairDynamicMaterial;                          // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        AlphaSneak;                                        // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ActualEyeTransition;                               // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        In_Sneak_Level;                                    // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInCombat;                                         // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CurrentSneakLevel;                                 // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FinalSneakLevel;                                   // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           SneakTimerHandler;                                 // 0x0368(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           NormalColor;                                       // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           StealingColor;                                     // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WBP_ModernHud_CrosshairSneakEye(int32 EntryPoint);
	void GetNextAnimationStartTime(double* OutTIme);
	void InCombatState();
	void OnReverseAnimFinished();
	void OutCombatState();
	void PlayBowAnimation(double InDuration, EUMGSequencePlayMode InPlayback);
	void PlayDrawBowAnimation();
	void PlayDrawBowAnimationReverse();
	void PlayHitAnimation();
	void ProperlyStopAnimation();
	void SetActionIconColorIllegality(bool bNewIllegal);
	void SetActionIconTexture(ELegacyHudReticleIcon NewReticle);
	void SetActionIconVisibility(bool bNewVisibility);
	void SetBehavior(EModernReticleWeaponBehavior NewBehavior);
	void SetSneaking(bool InIsSneaking);
	void SneakAlpha();
	void UpdateSneakLevel(double InSneakLevel);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ModernHud_CrosshairSneakEye_C">();
	}
	static class UWBP_ModernHud_CrosshairSneakEye_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ModernHud_CrosshairSneakEye_C>();
	}
};
static_assert(alignof(UWBP_ModernHud_CrosshairSneakEye_C) == 0x000008, "Wrong alignment on UWBP_ModernHud_CrosshairSneakEye_C");
static_assert(sizeof(UWBP_ModernHud_CrosshairSneakEye_C) == 0x000390, "Wrong size on UWBP_ModernHud_CrosshairSneakEye_C");
static_assert(offsetof(UWBP_ModernHud_CrosshairSneakEye_C, UberGraphFrame) == 0x0002E8, "Member 'UWBP_ModernHud_CrosshairSneakEye_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CrosshairSneakEye_C, OnHitAnimation) == 0x0002F0, "Member 'UWBP_ModernHud_CrosshairSneakEye_C::OnHitAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CrosshairSneakEye_C, DrawBowAnimation) == 0x0002F8, "Member 'UWBP_ModernHud_CrosshairSneakEye_C::DrawBowAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CrosshairSneakEye_C, Crosshair) == 0x000300, "Member 'UWBP_ModernHud_CrosshairSneakEye_C::Crosshair' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CrosshairSneakEye_C, ReverseAnimTimerHandler) == 0x000308, "Member 'UWBP_ModernHud_CrosshairSneakEye_C::ReverseAnimTimerHandler' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CrosshairSneakEye_C, LocalTime) == 0x000310, "Member 'UWBP_ModernHud_CrosshairSneakEye_C::LocalTime' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CrosshairSneakEye_C, UndrawShootDuration) == 0x000318, "Member 'UWBP_ModernHud_CrosshairSneakEye_C::UndrawShootDuration' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CrosshairSneakEye_C, BowDrawDuration) == 0x00031C, "Member 'UWBP_ModernHud_CrosshairSneakEye_C::BowDrawDuration' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CrosshairSneakEye_C, DrawBowAniEndTime) == 0x000320, "Member 'UWBP_ModernHud_CrosshairSneakEye_C::DrawBowAniEndTime' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CrosshairSneakEye_C, CurrentBehavior) == 0x000328, "Member 'UWBP_ModernHud_CrosshairSneakEye_C::CurrentBehavior' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CrosshairSneakEye_C, IsSneaking) == 0x000329, "Member 'UWBP_ModernHud_CrosshairSneakEye_C::IsSneaking' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CrosshairSneakEye_C, CrosshairDynamicMaterial) == 0x000330, "Member 'UWBP_ModernHud_CrosshairSneakEye_C::CrosshairDynamicMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CrosshairSneakEye_C, AlphaSneak) == 0x000338, "Member 'UWBP_ModernHud_CrosshairSneakEye_C::AlphaSneak' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CrosshairSneakEye_C, ActualEyeTransition) == 0x000340, "Member 'UWBP_ModernHud_CrosshairSneakEye_C::ActualEyeTransition' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CrosshairSneakEye_C, In_Sneak_Level) == 0x000348, "Member 'UWBP_ModernHud_CrosshairSneakEye_C::In_Sneak_Level' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CrosshairSneakEye_C, bInCombat) == 0x000350, "Member 'UWBP_ModernHud_CrosshairSneakEye_C::bInCombat' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CrosshairSneakEye_C, CurrentSneakLevel) == 0x000358, "Member 'UWBP_ModernHud_CrosshairSneakEye_C::CurrentSneakLevel' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CrosshairSneakEye_C, FinalSneakLevel) == 0x000360, "Member 'UWBP_ModernHud_CrosshairSneakEye_C::FinalSneakLevel' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CrosshairSneakEye_C, SneakTimerHandler) == 0x000368, "Member 'UWBP_ModernHud_CrosshairSneakEye_C::SneakTimerHandler' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CrosshairSneakEye_C, NormalColor) == 0x000370, "Member 'UWBP_ModernHud_CrosshairSneakEye_C::NormalColor' has a wrong offset!");
static_assert(offsetof(UWBP_ModernHud_CrosshairSneakEye_C, StealingColor) == 0x000380, "Member 'UWBP_ModernHud_CrosshairSneakEye_C::StealingColor' has a wrong offset!");

}

