#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DirectLinkExtension

#include "Basic.hpp"


namespace SDK::Params
{

// Function DirectLinkExtension.DirectLinkExtensionBlueprintLibrary.GetAvailableDirectLinkSourcesUri
// 0x0010 (0x0010 - 0x0000)
struct DirectLinkExtensionBlueprintLibrary_GetAvailableDirectLinkSourcesUri final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(DirectLinkExtensionBlueprintLibrary_GetAvailableDirectLinkSourcesUri) == 0x000008, "Wrong alignment on DirectLinkExtensionBlueprintLibrary_GetAvailableDirectLinkSourcesUri");
static_assert(sizeof(DirectLinkExtensionBlueprintLibrary_GetAvailableDirectLinkSourcesUri) == 0x000010, "Wrong size on DirectLinkExtensionBlueprintLibrary_GetAvailableDirectLinkSourcesUri");
static_assert(offsetof(DirectLinkExtensionBlueprintLibrary_GetAvailableDirectLinkSourcesUri, ReturnValue) == 0x000000, "Member 'DirectLinkExtensionBlueprintLibrary_GetAvailableDirectLinkSourcesUri::ReturnValue' has a wrong offset!");

// Function DirectLinkExtension.DirectLinkExtensionBlueprintLibrary.ParseDirectLinkSourceUri
// 0x0058 (0x0058 - 0x0000)
struct DirectLinkExtensionBlueprintLibrary_ParseDirectLinkSourceUri final
{
public:
	class FString                                 SourceUriString;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutComputerName;                                   // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutEndpointName;                                   // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutExecutableName;                                 // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutSourceName;                                     // 0x0040(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DirectLinkExtensionBlueprintLibrary_ParseDirectLinkSourceUri) == 0x000008, "Wrong alignment on DirectLinkExtensionBlueprintLibrary_ParseDirectLinkSourceUri");
static_assert(sizeof(DirectLinkExtensionBlueprintLibrary_ParseDirectLinkSourceUri) == 0x000058, "Wrong size on DirectLinkExtensionBlueprintLibrary_ParseDirectLinkSourceUri");
static_assert(offsetof(DirectLinkExtensionBlueprintLibrary_ParseDirectLinkSourceUri, SourceUriString) == 0x000000, "Member 'DirectLinkExtensionBlueprintLibrary_ParseDirectLinkSourceUri::SourceUriString' has a wrong offset!");
static_assert(offsetof(DirectLinkExtensionBlueprintLibrary_ParseDirectLinkSourceUri, OutComputerName) == 0x000010, "Member 'DirectLinkExtensionBlueprintLibrary_ParseDirectLinkSourceUri::OutComputerName' has a wrong offset!");
static_assert(offsetof(DirectLinkExtensionBlueprintLibrary_ParseDirectLinkSourceUri, OutEndpointName) == 0x000020, "Member 'DirectLinkExtensionBlueprintLibrary_ParseDirectLinkSourceUri::OutEndpointName' has a wrong offset!");
static_assert(offsetof(DirectLinkExtensionBlueprintLibrary_ParseDirectLinkSourceUri, OutExecutableName) == 0x000030, "Member 'DirectLinkExtensionBlueprintLibrary_ParseDirectLinkSourceUri::OutExecutableName' has a wrong offset!");
static_assert(offsetof(DirectLinkExtensionBlueprintLibrary_ParseDirectLinkSourceUri, OutSourceName) == 0x000040, "Member 'DirectLinkExtensionBlueprintLibrary_ParseDirectLinkSourceUri::OutSourceName' has a wrong offset!");
static_assert(offsetof(DirectLinkExtensionBlueprintLibrary_ParseDirectLinkSourceUri, ReturnValue) == 0x000050, "Member 'DirectLinkExtensionBlueprintLibrary_ParseDirectLinkSourceUri::ReturnValue' has a wrong offset!");

}

