#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AltarQMP

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function AltarQMP.AltarKeyInputReplayEditorLibrary.LoadAltarRecordData
// 0x0018 (0x0018 - 0x0000)
struct AltarKeyInputReplayEditorLibrary_LoadAltarRecordData final
{
public:
	class FString                                 SegmentName;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputRecordSave*                       ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AltarKeyInputReplayEditorLibrary_LoadAltarRecordData) == 0x000008, "Wrong alignment on AltarKeyInputReplayEditorLibrary_LoadAltarRecordData");
static_assert(sizeof(AltarKeyInputReplayEditorLibrary_LoadAltarRecordData) == 0x000018, "Wrong size on AltarKeyInputReplayEditorLibrary_LoadAltarRecordData");
static_assert(offsetof(AltarKeyInputReplayEditorLibrary_LoadAltarRecordData, SegmentName) == 0x000000, "Member 'AltarKeyInputReplayEditorLibrary_LoadAltarRecordData::SegmentName' has a wrong offset!");
static_assert(offsetof(AltarKeyInputReplayEditorLibrary_LoadAltarRecordData, ReturnValue) == 0x000010, "Member 'AltarKeyInputReplayEditorLibrary_LoadAltarRecordData::ReturnValue' has a wrong offset!");

// Function AltarQMP.AltarSpecificQMPGameInstance.OnAsyncSaveComplete_Delegate
// 0x0008 (0x0008 - 0x0000)
struct AltarSpecificQMPGameInstance_OnAsyncSaveComplete_Delegate final
{
public:
	const class UVAltarSaveGame*                  SaveGame;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AltarSpecificQMPGameInstance_OnAsyncSaveComplete_Delegate) == 0x000008, "Wrong alignment on AltarSpecificQMPGameInstance_OnAsyncSaveComplete_Delegate");
static_assert(sizeof(AltarSpecificQMPGameInstance_OnAsyncSaveComplete_Delegate) == 0x000008, "Wrong size on AltarSpecificQMPGameInstance_OnAsyncSaveComplete_Delegate");
static_assert(offsetof(AltarSpecificQMPGameInstance_OnAsyncSaveComplete_Delegate, SaveGame) == 0x000000, "Member 'AltarSpecificQMPGameInstance_OnAsyncSaveComplete_Delegate::SaveGame' has a wrong offset!");

// Function AltarQMP.AltarSpecificQMPGameInstance.OnSaveSlotLoaded_Delegate
// 0x0018 (0x0018 - 0x0000)
struct AltarSpecificQMPGameInstance_OnSaveSlotLoaded_Delegate final
{
public:
	class USaveGame*                              GenericSave;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SlotName;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AltarSpecificQMPGameInstance_OnSaveSlotLoaded_Delegate) == 0x000008, "Wrong alignment on AltarSpecificQMPGameInstance_OnSaveSlotLoaded_Delegate");
static_assert(sizeof(AltarSpecificQMPGameInstance_OnSaveSlotLoaded_Delegate) == 0x000018, "Wrong size on AltarSpecificQMPGameInstance_OnSaveSlotLoaded_Delegate");
static_assert(offsetof(AltarSpecificQMPGameInstance_OnSaveSlotLoaded_Delegate, GenericSave) == 0x000000, "Member 'AltarSpecificQMPGameInstance_OnSaveSlotLoaded_Delegate::GenericSave' has a wrong offset!");
static_assert(offsetof(AltarSpecificQMPGameInstance_OnSaveSlotLoaded_Delegate, SlotName) == 0x000008, "Member 'AltarSpecificQMPGameInstance_OnSaveSlotLoaded_Delegate::SlotName' has a wrong offset!");

// Function AltarQMP.AltarSpecificQMPGameInstance.OnUIFocusChange
// 0x0010 (0x0010 - 0x0000)
struct AltarSpecificQMPGameInstance_OnUIFocusChange final
{
public:
	struct FGameplayTag                           TopMostLayer;                                      // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonActivatableWidget*               TopMostWidget;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AltarSpecificQMPGameInstance_OnUIFocusChange) == 0x000008, "Wrong alignment on AltarSpecificQMPGameInstance_OnUIFocusChange");
static_assert(sizeof(AltarSpecificQMPGameInstance_OnUIFocusChange) == 0x000010, "Wrong size on AltarSpecificQMPGameInstance_OnUIFocusChange");
static_assert(offsetof(AltarSpecificQMPGameInstance_OnUIFocusChange, TopMostLayer) == 0x000000, "Member 'AltarSpecificQMPGameInstance_OnUIFocusChange::TopMostLayer' has a wrong offset!");
static_assert(offsetof(AltarSpecificQMPGameInstance_OnUIFocusChange, TopMostWidget) == 0x000008, "Member 'AltarSpecificQMPGameInstance_OnUIFocusChange::TopMostWidget' has a wrong offset!");

}

