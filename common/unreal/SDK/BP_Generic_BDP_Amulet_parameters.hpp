#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Generic_BDP_Amulet

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Altar_structs.hpp"


namespace SDK::Params
{

// Function BP_Generic_BDP_Amulet.BP_Generic_BDP_Amulet_C.ExecuteUbergraph_BP_Generic_BDP_Amulet
// 0x0030 (0x0030 - 0x0000)
struct BP_Generic_BDP_Amulet_C_ExecuteUbergraph_BP_Generic_BDP_Amulet final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVCharacterPhenotypeData*               K2Node_Event_PhenotypeData;                        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTESRace*                               K2Node_Event_CharacterRace;                        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECharacterSex                                 K2Node_Event_CharacterSex;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_NewAlpha;                             // 0x001C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_Event_MasterComponent;                      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetChestOffsetAlpha_ChestSnappingAlpha_ImplicitCast; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Generic_BDP_Amulet_C_ExecuteUbergraph_BP_Generic_BDP_Amulet) == 0x000008, "Wrong alignment on BP_Generic_BDP_Amulet_C_ExecuteUbergraph_BP_Generic_BDP_Amulet");
static_assert(sizeof(BP_Generic_BDP_Amulet_C_ExecuteUbergraph_BP_Generic_BDP_Amulet) == 0x000030, "Wrong size on BP_Generic_BDP_Amulet_C_ExecuteUbergraph_BP_Generic_BDP_Amulet");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_ExecuteUbergraph_BP_Generic_BDP_Amulet, EntryPoint) == 0x000000, "Member 'BP_Generic_BDP_Amulet_C_ExecuteUbergraph_BP_Generic_BDP_Amulet::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_ExecuteUbergraph_BP_Generic_BDP_Amulet, K2Node_Event_PhenotypeData) == 0x000008, "Member 'BP_Generic_BDP_Amulet_C_ExecuteUbergraph_BP_Generic_BDP_Amulet::K2Node_Event_PhenotypeData' has a wrong offset!");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_ExecuteUbergraph_BP_Generic_BDP_Amulet, K2Node_Event_CharacterRace) == 0x000010, "Member 'BP_Generic_BDP_Amulet_C_ExecuteUbergraph_BP_Generic_BDP_Amulet::K2Node_Event_CharacterRace' has a wrong offset!");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_ExecuteUbergraph_BP_Generic_BDP_Amulet, K2Node_Event_CharacterSex) == 0x000018, "Member 'BP_Generic_BDP_Amulet_C_ExecuteUbergraph_BP_Generic_BDP_Amulet::K2Node_Event_CharacterSex' has a wrong offset!");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_ExecuteUbergraph_BP_Generic_BDP_Amulet, K2Node_Event_NewAlpha) == 0x00001C, "Member 'BP_Generic_BDP_Amulet_C_ExecuteUbergraph_BP_Generic_BDP_Amulet::K2Node_Event_NewAlpha' has a wrong offset!");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_ExecuteUbergraph_BP_Generic_BDP_Amulet, K2Node_Event_MasterComponent) == 0x000020, "Member 'BP_Generic_BDP_Amulet_C_ExecuteUbergraph_BP_Generic_BDP_Amulet::K2Node_Event_MasterComponent' has a wrong offset!");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_ExecuteUbergraph_BP_Generic_BDP_Amulet, CallFunc_SetChestOffsetAlpha_ChestSnappingAlpha_ImplicitCast) == 0x000028, "Member 'BP_Generic_BDP_Amulet_C_ExecuteUbergraph_BP_Generic_BDP_Amulet::CallFunc_SetChestOffsetAlpha_ChestSnappingAlpha_ImplicitCast' has a wrong offset!");

// Function BP_Generic_BDP_Amulet.BP_Generic_BDP_Amulet_C.OnAttachedToPhenotype
// 0x0018 (0x0018 - 0x0000)
struct BP_Generic_BDP_Amulet_C_OnAttachedToPhenotype final
{
public:
	class UVCharacterPhenotypeData*               PhenotypeData;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTESRace*                               CharacterRace;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECharacterSex                                 CharacterSex;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Generic_BDP_Amulet_C_OnAttachedToPhenotype) == 0x000008, "Wrong alignment on BP_Generic_BDP_Amulet_C_OnAttachedToPhenotype");
static_assert(sizeof(BP_Generic_BDP_Amulet_C_OnAttachedToPhenotype) == 0x000018, "Wrong size on BP_Generic_BDP_Amulet_C_OnAttachedToPhenotype");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_OnAttachedToPhenotype, PhenotypeData) == 0x000000, "Member 'BP_Generic_BDP_Amulet_C_OnAttachedToPhenotype::PhenotypeData' has a wrong offset!");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_OnAttachedToPhenotype, CharacterRace) == 0x000008, "Member 'BP_Generic_BDP_Amulet_C_OnAttachedToPhenotype::CharacterRace' has a wrong offset!");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_OnAttachedToPhenotype, CharacterSex) == 0x000010, "Member 'BP_Generic_BDP_Amulet_C_OnAttachedToPhenotype::CharacterSex' has a wrong offset!");

// Function BP_Generic_BDP_Amulet.BP_Generic_BDP_Amulet_C.OnAttachToLeaderComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_Generic_BDP_Amulet_C_OnAttachToLeaderComponent final
{
public:
	class USkeletalMeshComponent*                 MasterComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Generic_BDP_Amulet_C_OnAttachToLeaderComponent) == 0x000008, "Wrong alignment on BP_Generic_BDP_Amulet_C_OnAttachToLeaderComponent");
static_assert(sizeof(BP_Generic_BDP_Amulet_C_OnAttachToLeaderComponent) == 0x000008, "Wrong size on BP_Generic_BDP_Amulet_C_OnAttachToLeaderComponent");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_OnAttachToLeaderComponent, MasterComponent) == 0x000000, "Member 'BP_Generic_BDP_Amulet_C_OnAttachToLeaderComponent::MasterComponent' has a wrong offset!");

// Function BP_Generic_BDP_Amulet.BP_Generic_BDP_Amulet_C.SetChestOffsetAlpha
// 0x0020 (0x0020 - 0x0000)
struct BP_Generic_BDP_Amulet_C_SetChestOffsetAlpha final
{
public:
	double                                        ChestSnappingAlpha;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABP_Amulet_C*                          K2Node_DynamicCast_AsABP_Amulet;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Generic_BDP_Amulet_C_SetChestOffsetAlpha) == 0x000008, "Wrong alignment on BP_Generic_BDP_Amulet_C_SetChestOffsetAlpha");
static_assert(sizeof(BP_Generic_BDP_Amulet_C_SetChestOffsetAlpha) == 0x000020, "Wrong size on BP_Generic_BDP_Amulet_C_SetChestOffsetAlpha");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_SetChestOffsetAlpha, ChestSnappingAlpha) == 0x000000, "Member 'BP_Generic_BDP_Amulet_C_SetChestOffsetAlpha::ChestSnappingAlpha' has a wrong offset!");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_SetChestOffsetAlpha, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_Generic_BDP_Amulet_C_SetChestOffsetAlpha::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_SetChestOffsetAlpha, K2Node_DynamicCast_AsABP_Amulet) == 0x000010, "Member 'BP_Generic_BDP_Amulet_C_SetChestOffsetAlpha::K2Node_DynamicCast_AsABP_Amulet' has a wrong offset!");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_SetChestOffsetAlpha, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Generic_BDP_Amulet_C_SetChestOffsetAlpha::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Generic_BDP_Amulet.BP_Generic_BDP_Amulet_C.SetCopyPoseComponent
// 0x0020 (0x0020 - 0x0000)
struct BP_Generic_BDP_Amulet_C_SetCopyPoseComponent final
{
public:
	class USkeletalMeshComponent*                 MasterComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABP_Amulet_C*                          K2Node_DynamicCast_AsABP_Amulet;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Generic_BDP_Amulet_C_SetCopyPoseComponent) == 0x000008, "Wrong alignment on BP_Generic_BDP_Amulet_C_SetCopyPoseComponent");
static_assert(sizeof(BP_Generic_BDP_Amulet_C_SetCopyPoseComponent) == 0x000020, "Wrong size on BP_Generic_BDP_Amulet_C_SetCopyPoseComponent");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_SetCopyPoseComponent, MasterComponent) == 0x000000, "Member 'BP_Generic_BDP_Amulet_C_SetCopyPoseComponent::MasterComponent' has a wrong offset!");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_SetCopyPoseComponent, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_Generic_BDP_Amulet_C_SetCopyPoseComponent::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_SetCopyPoseComponent, K2Node_DynamicCast_AsABP_Amulet) == 0x000010, "Member 'BP_Generic_BDP_Amulet_C_SetCopyPoseComponent::K2Node_DynamicCast_AsABP_Amulet' has a wrong offset!");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_SetCopyPoseComponent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Generic_BDP_Amulet_C_SetCopyPoseComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Generic_BDP_Amulet.BP_Generic_BDP_Amulet_C.SetCorrectChestOffset
// 0x0100 (0x0100 - 0x0000)
struct BP_Generic_BDP_Amulet_C_SetCorrectChestOffset final
{
public:
	ECharacterSex                                 Selection;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsMale;                                           // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UABP_Amulet_C*                          AnimInstance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0xF];                                       // 0x0011(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_SelectTransform_ReturnValue;              // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_SelectTransform_ReturnValue_1;            // 0x0080(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABP_Amulet_C*                          K2Node_DynamicCast_AsABP_Amulet;                   // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Generic_BDP_Amulet_C_SetCorrectChestOffset) == 0x000010, "Wrong alignment on BP_Generic_BDP_Amulet_C_SetCorrectChestOffset");
static_assert(sizeof(BP_Generic_BDP_Amulet_C_SetCorrectChestOffset) == 0x000100, "Wrong size on BP_Generic_BDP_Amulet_C_SetCorrectChestOffset");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_SetCorrectChestOffset, Selection) == 0x000000, "Member 'BP_Generic_BDP_Amulet_C_SetCorrectChestOffset::Selection' has a wrong offset!");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_SetCorrectChestOffset, bIsMale) == 0x000001, "Member 'BP_Generic_BDP_Amulet_C_SetCorrectChestOffset::bIsMale' has a wrong offset!");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_SetCorrectChestOffset, AnimInstance) == 0x000008, "Member 'BP_Generic_BDP_Amulet_C_SetCorrectChestOffset::AnimInstance' has a wrong offset!");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_SetCorrectChestOffset, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_Generic_BDP_Amulet_C_SetCorrectChestOffset::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_SetCorrectChestOffset, CallFunc_SelectTransform_ReturnValue) == 0x000020, "Member 'BP_Generic_BDP_Amulet_C_SetCorrectChestOffset::CallFunc_SelectTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_SetCorrectChestOffset, CallFunc_SelectTransform_ReturnValue_1) == 0x000080, "Member 'BP_Generic_BDP_Amulet_C_SetCorrectChestOffset::CallFunc_SelectTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_SetCorrectChestOffset, CallFunc_GetAnimInstance_ReturnValue) == 0x0000E0, "Member 'BP_Generic_BDP_Amulet_C_SetCorrectChestOffset::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_SetCorrectChestOffset, K2Node_DynamicCast_AsABP_Amulet) == 0x0000E8, "Member 'BP_Generic_BDP_Amulet_C_SetCorrectChestOffset::K2Node_DynamicCast_AsABP_Amulet' has a wrong offset!");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_SetCorrectChestOffset, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'BP_Generic_BDP_Amulet_C_SetCorrectChestOffset::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Generic_BDP_Amulet.BP_Generic_BDP_Amulet_C.UpdateChestSnappingAlpha
// 0x0004 (0x0004 - 0x0000)
struct BP_Generic_BDP_Amulet_C_UpdateChestSnappingAlpha final
{
public:
	float                                         NewAlpha;                                          // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Generic_BDP_Amulet_C_UpdateChestSnappingAlpha) == 0x000004, "Wrong alignment on BP_Generic_BDP_Amulet_C_UpdateChestSnappingAlpha");
static_assert(sizeof(BP_Generic_BDP_Amulet_C_UpdateChestSnappingAlpha) == 0x000004, "Wrong size on BP_Generic_BDP_Amulet_C_UpdateChestSnappingAlpha");
static_assert(offsetof(BP_Generic_BDP_Amulet_C_UpdateChestSnappingAlpha, NewAlpha) == 0x000000, "Member 'BP_Generic_BDP_Amulet_C_UpdateChestSnappingAlpha::NewAlpha' has a wrong offset!");

}

