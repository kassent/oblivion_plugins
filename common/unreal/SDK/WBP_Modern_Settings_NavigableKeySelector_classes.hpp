#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Modern_Settings_NavigableKeySelector

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonInput_structs.hpp"
#include "Altar_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Modern_Settings_NavigableKeySelector.WBP_Modern_Settings_NavigableKeySelector_C
// 0x0060 (0x0630 - 0x05D0)
class UWBP_Modern_Settings_NavigableKeySelector_C final : public UVAltarNavigableInputKeySelector
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_OriginalImageTile_C*               FocusBackground;                                   // 0x05D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OriginalImageTile_C*               HitBox;                                            // 0x05E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OriginalImageTile_C*               IconImage;                                         // 0x05E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AltarTextBlock_C*                  KeyLabel;                                          // 0x05F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OriginalImageTile_C*               ListenBackground;                                  // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OriginalImageTile_C*               MissingBinding;                                    // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AltarTextBlock_C*                  PressKeyLabel;                                     // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        TestSwitcher;                                      // 0x0610(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UVNavigableInputKeySelector* Widget)> OnWidgetFocussed;      // 0x0618(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UInputMappingContext*                   AnyKeyIMC;                                         // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	bool BP_OnHandleBackAction();
	void BPOnListenStateChanged(bool NewState);
	void Construct();
	void ExecuteUbergraph_WBP_Modern_Settings_NavigableKeySelector(int32 EntryPoint);
	void InputMethodChanged(ECommonInputType bNewInputType);
	void OnFocus();
	void OnUnfocus();
	void RequestRefreshIconImageBrush(const struct FSlateBrush& NewBrush);
	void RequestRefreshIconImageVisibility(ESlateVisibility NewVisibility);
	void RequestRefreshLabelText(const class FText& NewText);
	void RequestRefreshLabelVisibility(ESlateVisibility NewVisibility);
	void SelectPressKeyLabel();
	void SetErrorState(bool bErrorState);

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Modern_Settings_NavigableKeySelector_C">();
	}
	static class UWBP_Modern_Settings_NavigableKeySelector_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Modern_Settings_NavigableKeySelector_C>();
	}
};
static_assert(alignof(UWBP_Modern_Settings_NavigableKeySelector_C) == 0x000008, "Wrong alignment on UWBP_Modern_Settings_NavigableKeySelector_C");
static_assert(sizeof(UWBP_Modern_Settings_NavigableKeySelector_C) == 0x000630, "Wrong size on UWBP_Modern_Settings_NavigableKeySelector_C");
static_assert(offsetof(UWBP_Modern_Settings_NavigableKeySelector_C, UberGraphFrame) == 0x0005D0, "Member 'UWBP_Modern_Settings_NavigableKeySelector_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_Settings_NavigableKeySelector_C, FocusBackground) == 0x0005D8, "Member 'UWBP_Modern_Settings_NavigableKeySelector_C::FocusBackground' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_Settings_NavigableKeySelector_C, HitBox) == 0x0005E0, "Member 'UWBP_Modern_Settings_NavigableKeySelector_C::HitBox' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_Settings_NavigableKeySelector_C, IconImage) == 0x0005E8, "Member 'UWBP_Modern_Settings_NavigableKeySelector_C::IconImage' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_Settings_NavigableKeySelector_C, KeyLabel) == 0x0005F0, "Member 'UWBP_Modern_Settings_NavigableKeySelector_C::KeyLabel' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_Settings_NavigableKeySelector_C, ListenBackground) == 0x0005F8, "Member 'UWBP_Modern_Settings_NavigableKeySelector_C::ListenBackground' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_Settings_NavigableKeySelector_C, MissingBinding) == 0x000600, "Member 'UWBP_Modern_Settings_NavigableKeySelector_C::MissingBinding' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_Settings_NavigableKeySelector_C, PressKeyLabel) == 0x000608, "Member 'UWBP_Modern_Settings_NavigableKeySelector_C::PressKeyLabel' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_Settings_NavigableKeySelector_C, TestSwitcher) == 0x000610, "Member 'UWBP_Modern_Settings_NavigableKeySelector_C::TestSwitcher' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_Settings_NavigableKeySelector_C, OnWidgetFocussed) == 0x000618, "Member 'UWBP_Modern_Settings_NavigableKeySelector_C::OnWidgetFocussed' has a wrong offset!");
static_assert(offsetof(UWBP_Modern_Settings_NavigableKeySelector_C, AnyKeyIMC) == 0x000628, "Member 'UWBP_Modern_Settings_NavigableKeySelector_C::AnyKeyIMC' has a wrong offset!");

}

