#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AltarTextBlock

#include "Basic.hpp"

#include "WBP_AltarTextBlock_classes.hpp"
#include "WBP_AltarTextBlock_parameters.hpp"


namespace SDK
{

// Function WBP_AltarTextBlock.WBP_AltarTextBlock_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_AltarTextBlock_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AltarTextBlock_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_AltarTextBlock.WBP_AltarTextBlock_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_AltarTextBlock_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AltarTextBlock_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_AltarTextBlock.WBP_AltarTextBlock_C.ExecuteUbergraph_WBP_AltarTextBlock
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_AltarTextBlock_C::ExecuteUbergraph_WBP_AltarTextBlock(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AltarTextBlock_C", "ExecuteUbergraph_WBP_AltarTextBlock");

	Params::WBP_AltarTextBlock_C_ExecuteUbergraph_WBP_AltarTextBlock Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_AltarTextBlock.WBP_AltarTextBlock_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_AltarTextBlock_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AltarTextBlock_C", "PreConstruct");

	Params::WBP_AltarTextBlock_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_AltarTextBlock.WBP_AltarTextBlock_C.SetColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FSlateColor&               Color_0                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_AltarTextBlock_C::SetColor(const struct FSlateColor& Color_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AltarTextBlock_C", "SetColor");

	Params::WBP_AltarTextBlock_C_SetColor Parms{};

	Parms.Color_0 = std::move(Color_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_AltarTextBlock.WBP_AltarTextBlock_C.SetFont
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FSlateFontInfo&            Font                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWBP_AltarTextBlock_C::SetFont(const struct FSlateFontInfo& Font)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AltarTextBlock_C", "SetFont");

	Params::WBP_AltarTextBlock_C_SetFont Parms{};

	Parms.Font = std::move(Font);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_AltarTextBlock.WBP_AltarTextBlock_C.SetFontSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewFontSize                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_AltarTextBlock_C::SetFontSize(int32 NewFontSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AltarTextBlock_C", "SetFontSize");

	Params::WBP_AltarTextBlock_C_SetFontSize Parms{};

	Parms.NewFontSize = NewFontSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_AltarTextBlock.WBP_AltarTextBlock_C.SetText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_AltarTextBlock_C::SetText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AltarTextBlock_C", "SetText");

	Params::WBP_AltarTextBlock_C_SetText Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_AltarTextBlock.WBP_AltarTextBlock_C.ToggleScrollingText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInIsEnable                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_AltarTextBlock_C::ToggleScrollingText(bool bInIsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AltarTextBlock_C", "ToggleScrollingText");

	Params::WBP_AltarTextBlock_C_ToggleScrollingText Parms{};

	Parms.bInIsEnable = bInIsEnable;

	UObject::ProcessEvent(Func, &Parms);
}

}

