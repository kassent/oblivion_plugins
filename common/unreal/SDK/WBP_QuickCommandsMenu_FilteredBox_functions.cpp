#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_QuickCommandsMenu_FilteredBox

#include "Basic.hpp"

#include "WBP_QuickCommandsMenu_FilteredBox_classes.hpp"
#include "WBP_QuickCommandsMenu_FilteredBox_parameters.hpp"


namespace SDK
{

// Function WBP_QuickCommandsMenu_FilteredBox.WBP_QuickCommandsMenu_FilteredBox_C.SearchFor X(Filter) PatternInFilters
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString*                          X_Filter_                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString*                          Filter                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UWBP_QuickCommandsMenu_FilteredBox_C::SearchFor_X_Filter__PatternInFilters(const class FString& X, class FString* X_Filter_, class FString* Filter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickCommandsMenu_FilteredBox_C", "SearchFor X(Filter) PatternInFilters");

	Params::WBP_QuickCommandsMenu_FilteredBox_C_SearchFor_X_Filter__PatternInFilters Parms{};

	Parms.X = std::move(X);

	UObject::ProcessEvent(Func, &Parms);

	if (X_Filter_ != nullptr)
		*X_Filter_ = std::move(Parms.X_Filter_);

	if (Filter != nullptr)
		*Filter = std::move(Parms.Filter);
}


// Function WBP_QuickCommandsMenu_FilteredBox.WBP_QuickCommandsMenu_FilteredBox_C.RefreshFilters
// (BlueprintCallable, BlueprintEvent)

void UWBP_QuickCommandsMenu_FilteredBox_C::RefreshFilters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickCommandsMenu_FilteredBox_C", "RefreshFilters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickCommandsMenu_FilteredBox.WBP_QuickCommandsMenu_FilteredBox_C.RefreshAllOptions
// (BlueprintCallable, BlueprintEvent)

void UWBP_QuickCommandsMenu_FilteredBox_C::RefreshAllOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickCommandsMenu_FilteredBox_C", "RefreshAllOptions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickCommandsMenu_FilteredBox.WBP_QuickCommandsMenu_FilteredBox_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_QuickCommandsMenu_FilteredBox_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickCommandsMenu_FilteredBox_C", "PreConstruct");

	Params::WBP_QuickCommandsMenu_FilteredBox_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QuickCommandsMenu_FilteredBox.WBP_QuickCommandsMenu_FilteredBox_C.Filter AND Process
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ElementToFilter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class FString>&                  FiltersInput                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool*                                   Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_QuickCommandsMenu_FilteredBox_C::Filter_AND_Process(const class FString& ElementToFilter, TArray<class FString>& FiltersInput, bool* Found)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickCommandsMenu_FilteredBox_C", "Filter AND Process");

	Params::WBP_QuickCommandsMenu_FilteredBox_C_Filter_AND_Process Parms{};

	Parms.ElementToFilter = std::move(ElementToFilter);
	Parms.FiltersInput = std::move(FiltersInput);

	UObject::ProcessEvent(Func, &Parms);

	FiltersInput = std::move(Parms.FiltersInput);

	if (Found != nullptr)
		*Found = Parms.Found;
}


// Function WBP_QuickCommandsMenu_FilteredBox.WBP_QuickCommandsMenu_FilteredBox_C.ExecuteUbergraph_WBP_QuickCommandsMenu_FilteredBox
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_QuickCommandsMenu_FilteredBox_C::ExecuteUbergraph_WBP_QuickCommandsMenu_FilteredBox(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickCommandsMenu_FilteredBox_C", "ExecuteUbergraph_WBP_QuickCommandsMenu_FilteredBox");

	Params::WBP_QuickCommandsMenu_FilteredBox_C_ExecuteUbergraph_WBP_QuickCommandsMenu_FilteredBox Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QuickCommandsMenu_FilteredBox.WBP_QuickCommandsMenu_FilteredBox_C.BREAK filters OR
// (BlueprintCallable, BlueprintEvent)

void UWBP_QuickCommandsMenu_FilteredBox_C::BREAK_filters_OR()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickCommandsMenu_FilteredBox_C", "BREAK filters OR");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickCommandsMenu_FilteredBox.WBP_QuickCommandsMenu_FilteredBox_C.BndEvt__WBP_SimpleFilteredComboBox_EditableTextBox_76_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_QuickCommandsMenu_FilteredBox_C::BndEvt__WBP_SimpleFilteredComboBox_EditableTextBox_76_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickCommandsMenu_FilteredBox_C", "BndEvt__WBP_SimpleFilteredComboBox_EditableTextBox_76_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature");

	Params::WBP_QuickCommandsMenu_FilteredBox_C_BndEvt__WBP_SimpleFilteredComboBox_EditableTextBox_76_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QuickCommandsMenu_FilteredBox.WBP_QuickCommandsMenu_FilteredBox_C.ApplyFilterToElementsToCheck
// (BlueprintCallable, BlueprintEvent)

void UWBP_QuickCommandsMenu_FilteredBox_C::ApplyFilterToElementsToCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickCommandsMenu_FilteredBox_C", "ApplyFilterToElementsToCheck");

	UObject::ProcessEvent(Func, nullptr);
}

}

