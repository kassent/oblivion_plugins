#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_Cloth_Scalabilty

#include "Basic.hpp"

#include "BPC_Cloth_Scalabilty_classes.hpp"
#include "BPC_Cloth_Scalabilty_parameters.hpp"


namespace SDK
{

// Function BPC_Cloth_Scalabilty.BPC_Cloth_Scalabilty_C.GetClothingInstanceType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ParentActorName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    ParentComponentName                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EBPE_ClothingInstanceType*              Type                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_Cloth_Scalabilty_C::GetClothingInstanceType(const class FString& ParentActorName, const class FString& ParentComponentName, EBPE_ClothingInstanceType* Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Cloth_Scalabilty_C", "GetClothingInstanceType");

	Params::BPC_Cloth_Scalabilty_C_GetClothingInstanceType Parms{};

	Parms.ParentActorName = std::move(ParentActorName);
	Parms.ParentComponentName = std::move(ParentComponentName);

	UObject::ProcessEvent(Func, &Parms);

	if (Type != nullptr)
		*Type = Parms.Type;
}


// Function BPC_Cloth_Scalabilty.BPC_Cloth_Scalabilty_C.GetClothQuality
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(int32 NewValue)>&  ClothQualityDelegate                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// const TDelegate<void(int32 NewValue)>&  ViewDistanceDelegate                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// int32*                                  ClothQuality                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  ViewDistanceQuality                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_Cloth_Scalabilty_C::GetClothQuality(const TDelegate<void(int32 NewValue)>& ClothQualityDelegate, const TDelegate<void(int32 NewValue)>& ViewDistanceDelegate, int32* ClothQuality, int32* ViewDistanceQuality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Cloth_Scalabilty_C", "GetClothQuality");

	Params::BPC_Cloth_Scalabilty_C_GetClothQuality Parms{};

	Parms.ClothQualityDelegate = ClothQualityDelegate;
	Parms.ViewDistanceDelegate = ViewDistanceDelegate;

	UObject::ProcessEvent(Func, &Parms);

	if (ClothQuality != nullptr)
		*ClothQuality = Parms.ClothQuality;

	if (ViewDistanceQuality != nullptr)
		*ViewDistanceQuality = Parms.ViewDistanceQuality;
}


// Function BPC_Cloth_Scalabilty.BPC_Cloth_Scalabilty_C.HideClothMaterialSlots
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UChaosClothComponent*>&    ClothComponents                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class USkeletalMeshComponent*           SkeletalMeshComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// ECharacterSex                           CharacterSex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FBPS_ClothAssetAndMaterialSections>&MaleClothAssets                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FBPS_ClothAssetAndMaterialSections>&FemaleClothAssets                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBPC_Cloth_Scalabilty_C::HideClothMaterialSlots(TArray<class UChaosClothComponent*>& ClothComponents, class USkeletalMeshComponent* SkeletalMeshComponent, ECharacterSex CharacterSex, TArray<struct FBPS_ClothAssetAndMaterialSections>& MaleClothAssets, TArray<struct FBPS_ClothAssetAndMaterialSections>& FemaleClothAssets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Cloth_Scalabilty_C", "HideClothMaterialSlots");

	Params::BPC_Cloth_Scalabilty_C_HideClothMaterialSlots Parms{};

	Parms.ClothComponents = std::move(ClothComponents);
	Parms.SkeletalMeshComponent = SkeletalMeshComponent;
	Parms.CharacterSex = CharacterSex;
	Parms.MaleClothAssets = std::move(MaleClothAssets);
	Parms.FemaleClothAssets = std::move(FemaleClothAssets);

	UObject::ProcessEvent(Func, &Parms);

	ClothComponents = std::move(Parms.ClothComponents);
	MaleClothAssets = std::move(Parms.MaleClothAssets);
	FemaleClothAssets = std::move(Parms.FemaleClothAssets);
}


// Function BPC_Cloth_Scalabilty.BPC_Cloth_Scalabilty_C.MakeClothComponentsArray
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UChaosClothComponent*>&    ClothComponents                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UBPC_Cloth_Scalabilty_C::MakeClothComponentsArray(TArray<class UChaosClothComponent*>& ClothComponents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Cloth_Scalabilty_C", "MakeClothComponentsArray");

	Params::BPC_Cloth_Scalabilty_C_MakeClothComponentsArray Parms{};

	Parms.ClothComponents = std::move(ClothComponents);

	UObject::ProcessEvent(Func, &Parms);

	ClothComponents = std::move(Parms.ClothComponents);
}


// Function BPC_Cloth_Scalabilty.BPC_Cloth_Scalabilty_C.Set Cloth Asset
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UChaosClothComponent*>&    ClothComponents                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// ECharacterSex                           CharacterSex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTESRace*                         CharacterRace                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<struct FBPS_ClothAssetAndMaterialSections>&MaleClothAssets                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FBPS_ClothAssetAndMaterialSections>&FemaleClothAssets                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBPC_Cloth_Scalabilty_C::Set_Cloth_Asset(TArray<class UChaosClothComponent*>& ClothComponents, ECharacterSex CharacterSex, class UTESRace* CharacterRace, TArray<struct FBPS_ClothAssetAndMaterialSections>& MaleClothAssets, TArray<struct FBPS_ClothAssetAndMaterialSections>& FemaleClothAssets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Cloth_Scalabilty_C", "Set Cloth Asset");

	Params::BPC_Cloth_Scalabilty_C_Set_Cloth_Asset Parms{};

	Parms.ClothComponents = std::move(ClothComponents);
	Parms.CharacterSex = CharacterSex;
	Parms.CharacterRace = CharacterRace;
	Parms.MaleClothAssets = std::move(MaleClothAssets);
	Parms.FemaleClothAssets = std::move(FemaleClothAssets);

	UObject::ProcessEvent(Func, &Parms);

	ClothComponents = std::move(Parms.ClothComponents);
	MaleClothAssets = std::move(Parms.MaleClothAssets);
	FemaleClothAssets = std::move(Parms.FemaleClothAssets);
}


// Function BPC_Cloth_Scalabilty.BPC_Cloth_Scalabilty_C.SetFirstPersonCloth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UChaosClothComponent*>&    ClothComponents                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// ECharacterSex                           CharacterSex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_Cloth_Scalabilty_C::SetFirstPersonCloth(TArray<class UChaosClothComponent*>& ClothComponents, ECharacterSex CharacterSex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Cloth_Scalabilty_C", "SetFirstPersonCloth");

	Params::BPC_Cloth_Scalabilty_C_SetFirstPersonCloth Parms{};

	Parms.ClothComponents = std::move(ClothComponents);
	Parms.CharacterSex = CharacterSex;

	UObject::ProcessEvent(Func, &Parms);

	ClothComponents = std::move(Parms.ClothComponents);
}


// Function BPC_Cloth_Scalabilty.BPC_Cloth_Scalabilty_C.SetThirdPerson Cloth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UChaosClothComponent*>&    ClothComponents                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// ECharacterSex                           CharacterSex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTESRace*                         CharacterRace                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPC_Cloth_Scalabilty_C::SetThirdPerson_Cloth(TArray<class UChaosClothComponent*>& ClothComponents, ECharacterSex CharacterSex, class UTESRace* CharacterRace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Cloth_Scalabilty_C", "SetThirdPerson Cloth");

	Params::BPC_Cloth_Scalabilty_C_SetThirdPerson_Cloth Parms{};

	Parms.ClothComponents = std::move(ClothComponents);
	Parms.CharacterSex = CharacterSex;
	Parms.CharacterRace = CharacterRace;

	UObject::ProcessEvent(Func, &Parms);

	ClothComponents = std::move(Parms.ClothComponents);
}


// Function BPC_Cloth_Scalabilty.BPC_Cloth_Scalabilty_C.ShouldSimulateBanner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Cloth_Quality                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsWeatherValid                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Simulate                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_Cloth_Scalabilty_C::ShouldSimulateBanner(int32 Cloth_Quality, bool IsWeatherValid, bool* Simulate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Cloth_Scalabilty_C", "ShouldSimulateBanner");

	Params::BPC_Cloth_Scalabilty_C_ShouldSimulateBanner Parms{};

	Parms.Cloth_Quality = Cloth_Quality;
	Parms.IsWeatherValid = IsWeatherValid;

	UObject::ProcessEvent(Func, &Parms);

	if (Simulate != nullptr)
		*Simulate = Parms.Simulate;
}


// Function BPC_Cloth_Scalabilty.BPC_Cloth_Scalabilty_C.ShouldSimulateCharacterCloth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Cloth_Quality                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBPE_ClothAssetPriority                 MalePriority                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBPE_ClothAssetPriority                 FemalePriority                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECharacterSex                           Sex                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UChaosClothComponent*>&    ClothComponents                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// TArray<struct FBPS_ClothAssetAndMaterialSections>&MaleClothAssets                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FBPS_ClothAssetAndMaterialSections>&FemaleClothAssets                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class AActor*                           ParentActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Simulate                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_Cloth_Scalabilty_C::ShouldSimulateCharacterCloth(int32 Cloth_Quality, EBPE_ClothAssetPriority MalePriority, EBPE_ClothAssetPriority FemalePriority, ECharacterSex Sex, TArray<class UChaosClothComponent*>& ClothComponents, TArray<struct FBPS_ClothAssetAndMaterialSections>& MaleClothAssets, TArray<struct FBPS_ClothAssetAndMaterialSections>& FemaleClothAssets, class AActor* ParentActor, bool* Simulate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Cloth_Scalabilty_C", "ShouldSimulateCharacterCloth");

	Params::BPC_Cloth_Scalabilty_C_ShouldSimulateCharacterCloth Parms{};

	Parms.Cloth_Quality = Cloth_Quality;
	Parms.MalePriority = MalePriority;
	Parms.FemalePriority = FemalePriority;
	Parms.Sex = Sex;
	Parms.ClothComponents = std::move(ClothComponents);
	Parms.MaleClothAssets = std::move(MaleClothAssets);
	Parms.FemaleClothAssets = std::move(FemaleClothAssets);
	Parms.ParentActor = ParentActor;

	UObject::ProcessEvent(Func, &Parms);

	ClothComponents = std::move(Parms.ClothComponents);
	MaleClothAssets = std::move(Parms.MaleClothAssets);
	FemaleClothAssets = std::move(Parms.FemaleClothAssets);

	if (Simulate != nullptr)
		*Simulate = Parms.Simulate;
}


// Function BPC_Cloth_Scalabilty.BPC_Cloth_Scalabilty_C.ShouldSimulateCloth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Cloth_Quality                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBPE_ClothAssetPriority                 Priority                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Simulate                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_Cloth_Scalabilty_C::ShouldSimulateCloth(int32 Cloth_Quality, EBPE_ClothAssetPriority Priority, bool* Simulate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Cloth_Scalabilty_C", "ShouldSimulateCloth");

	Params::BPC_Cloth_Scalabilty_C_ShouldSimulateCloth Parms{};

	Parms.Cloth_Quality = Cloth_Quality;
	Parms.Priority = Priority;

	UObject::ProcessEvent(Func, &Parms);

	if (Simulate != nullptr)
		*Simulate = Parms.Simulate;
}


// Function BPC_Cloth_Scalabilty.BPC_Cloth_Scalabilty_C.ShowClothMaterialSlots
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UChaosClothComponent*>&    ClothComponents                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class USkeletalMeshComponent*           SkeletalMeshComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// ECharacterSex                           CharacterSex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FBPS_ClothAssetAndMaterialSections>&MaleClothAssets                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FBPS_ClothAssetAndMaterialSections>&FemaleClothAssets                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    RemoveClothComponents                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBPE_ClothingInstanceType               ClothingInstanceType                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_Cloth_Scalabilty_C::ShowClothMaterialSlots(TArray<class UChaosClothComponent*>& ClothComponents, class USkeletalMeshComponent* SkeletalMeshComponent, ECharacterSex CharacterSex, TArray<struct FBPS_ClothAssetAndMaterialSections>& MaleClothAssets, TArray<struct FBPS_ClothAssetAndMaterialSections>& FemaleClothAssets, bool RemoveClothComponents, EBPE_ClothingInstanceType ClothingInstanceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Cloth_Scalabilty_C", "ShowClothMaterialSlots");

	Params::BPC_Cloth_Scalabilty_C_ShowClothMaterialSlots Parms{};

	Parms.ClothComponents = std::move(ClothComponents);
	Parms.SkeletalMeshComponent = SkeletalMeshComponent;
	Parms.CharacterSex = CharacterSex;
	Parms.MaleClothAssets = std::move(MaleClothAssets);
	Parms.FemaleClothAssets = std::move(FemaleClothAssets);
	Parms.RemoveClothComponents = RemoveClothComponents;
	Parms.ClothingInstanceType = ClothingInstanceType;

	UObject::ProcessEvent(Func, &Parms);

	ClothComponents = std::move(Parms.ClothComponents);
	MaleClothAssets = std::move(Parms.MaleClothAssets);
	FemaleClothAssets = std::move(Parms.FemaleClothAssets);
}


// Function BPC_Cloth_Scalabilty.BPC_Cloth_Scalabilty_C.SuspendSimulation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UChaosClothComponent*>&    ClothComponents                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    Suspend                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_Cloth_Scalabilty_C::SuspendSimulation(TArray<class UChaosClothComponent*>& ClothComponents, bool Suspend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Cloth_Scalabilty_C", "SuspendSimulation");

	Params::BPC_Cloth_Scalabilty_C_SuspendSimulation Parms{};

	Parms.ClothComponents = std::move(ClothComponents);
	Parms.Suspend = Suspend;

	UObject::ProcessEvent(Func, &Parms);

	ClothComponents = std::move(Parms.ClothComponents);
}

}

