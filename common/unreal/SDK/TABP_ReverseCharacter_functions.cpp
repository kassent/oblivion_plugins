#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TABP_ReverseCharacter

#include "Basic.hpp"

#include "TABP_ReverseCharacter_classes.hpp"
#include "TABP_ReverseCharacter_parameters.hpp"


namespace SDK
{

// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink*                       AnimGraph_0                                            (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::AnimGraph(struct FPoseLink* AnimGraph_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "AnimGraph");

	Params::TABP_ReverseCharacter_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimGraph_0 != nullptr)
		*AnimGraph_0 = std::move(Parms.AnimGraph_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.AttackingLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       AttackingLayer_0                                       (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::AttackingLayer(const struct FPoseLink& InPose, struct FPoseLink* AttackingLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "AttackingLayer");

	Params::TABP_ReverseCharacter_C_AttackingLayer Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (AttackingLayer_0 != nullptr)
		*AttackingLayer_0 = std::move(Parms.AttackingLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.BlinkingLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       BlinkingLayer_0                                        (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::BlinkingLayer(const struct FPoseLink& InPose, struct FPoseLink* BlinkingLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "BlinkingLayer");

	Params::TABP_ReverseCharacter_C_BlinkingLayer Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (BlinkingLayer_0 != nullptr)
		*BlinkingLayer_0 = std::move(Parms.BlinkingLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.BlockingLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       BlockingLayer_0                                        (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::BlockingLayer(struct FPoseLink* BlockingLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "BlockingLayer");

	Params::TABP_ReverseCharacter_C_BlockingLayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BlockingLayer_0 != nullptr)
		*BlockingLayer_0 = std::move(Parms.BlockingLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.BodyPhysics
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       BodyPhysics_0                                          (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::BodyPhysics(const struct FPoseLink& InPose, struct FPoseLink* BodyPhysics_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "BodyPhysics");

	Params::TABP_ReverseCharacter_C_BodyPhysics Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (BodyPhysics_0 != nullptr)
		*BodyPhysics_0 = std::move(Parms.BodyPhysics_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.ConversationIdleLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       ConversationIdleLayer_0                                (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::ConversationIdleLayer(const struct FPoseLink& InPose, struct FPoseLink* ConversationIdleLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "ConversationIdleLayer");

	Params::TABP_ReverseCharacter_C_ConversationIdleLayer Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (ConversationIdleLayer_0 != nullptr)
		*ConversationIdleLayer_0 = std::move(Parms.ConversationIdleLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.Death Layer
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       Death_Layer_0                                          (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::Death_Layer(const struct FPoseLink& InPose, struct FPoseLink* Death_Layer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "Death Layer");

	Params::TABP_ReverseCharacter_C_Death_Layer Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (Death_Layer_0 != nullptr)
		*Death_Layer_0 = std::move(Parms.Death_Layer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.DodgeLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       DodgeLayer_0                                           (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::DodgeLayer(struct FPoseLink* DodgeLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "DodgeLayer");

	Params::TABP_ReverseCharacter_C_DodgeLayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DodgeLayer_0 != nullptr)
		*DodgeLayer_0 = std::move(Parms.DodgeLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.EnhancedLocomotionLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       EnhancedLocomotionLayer_0                              (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::EnhancedLocomotionLayer(const struct FPoseLink& InPose, struct FPoseLink* EnhancedLocomotionLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "EnhancedLocomotionLayer");

	Params::TABP_ReverseCharacter_C_EnhancedLocomotionLayer Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (EnhancedLocomotionLayer_0 != nullptr)
		*EnhancedLocomotionLayer_0 = std::move(Parms.EnhancedLocomotionLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.EquipUnequipLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       EquipUnequipLayer_0                                    (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::EquipUnequipLayer(struct FPoseLink* EquipUnequipLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "EquipUnequipLayer");

	Params::TABP_ReverseCharacter_C_EquipUnequipLayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EquipUnequipLayer_0 != nullptr)
		*EquipUnequipLayer_0 = std::move(Parms.EquipUnequipLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.ExecuteUbergraph_TABP_ReverseCharacter
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTABP_ReverseCharacter_C::ExecuteUbergraph_TABP_ReverseCharacter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "ExecuteUbergraph_TABP_ReverseCharacter");

	Params::TABP_ReverseCharacter_C_ExecuteUbergraph_TABP_ReverseCharacter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.FacialAnimationLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       FacialAnimationLayer_0                                 (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::FacialAnimationLayer(const struct FPoseLink& InPose, struct FPoseLink* FacialAnimationLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "FacialAnimationLayer");

	Params::TABP_ReverseCharacter_C_FacialAnimationLayer Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (FacialAnimationLayer_0 != nullptr)
		*FacialAnimationLayer_0 = std::move(Parms.FacialAnimationLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.FeetIKLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 AnimationPose                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       FeetIKLayer_0                                          (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::FeetIKLayer(const struct FPoseLink& AnimationPose, struct FPoseLink* FeetIKLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "FeetIKLayer");

	Params::TABP_ReverseCharacter_C_FeetIKLayer Parms{};

	Parms.AnimationPose = std::move(AnimationPose);

	UObject::ProcessEvent(Func, &Parms);

	if (FeetIKLayer_0 != nullptr)
		*FeetIKLayer_0 = std::move(Parms.FeetIKLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.GetUpLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       GetUpLayer_0                                           (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::GetUpLayer(const struct FPoseLink& InPose, struct FPoseLink* GetUpLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "GetUpLayer");

	Params::TABP_ReverseCharacter_C_GetUpLayer Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (GetUpLayer_0 != nullptr)
		*GetUpLayer_0 = std::move(Parms.GetUpLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.HandPoseLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 AnimationPose                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       HandPoseLayer_0                                        (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::HandPoseLayer(const struct FPoseLink& AnimationPose, struct FPoseLink* HandPoseLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "HandPoseLayer");

	Params::TABP_ReverseCharacter_C_HandPoseLayer Parms{};

	Parms.AnimationPose = std::move(AnimationPose);

	UObject::ProcessEvent(Func, &Parms);

	if (HandPoseLayer_0 != nullptr)
		*HandPoseLayer_0 = std::move(Parms.HandPoseLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.HitReactLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       HitReactLayer_0                                        (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::HitReactLayer(const struct FPoseLink& InPose, struct FPoseLink* HitReactLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "HitReactLayer");

	Params::TABP_ReverseCharacter_C_HitReactLayer Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (HitReactLayer_0 != nullptr)
		*HitReactLayer_0 = std::move(Parms.HitReactLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.HorseRidingInAirLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       HorseRidingInAirLayer_0                                (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::HorseRidingInAirLayer(const struct FPoseLink& InPose, struct FPoseLink* HorseRidingInAirLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "HorseRidingInAirLayer");

	Params::TABP_ReverseCharacter_C_HorseRidingInAirLayer Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (HorseRidingInAirLayer_0 != nullptr)
		*HorseRidingInAirLayer_0 = std::move(Parms.HorseRidingInAirLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.HorseRidingLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       HorseRidingLayer_0                                     (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::HorseRidingLayer(struct FPoseLink* HorseRidingLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "HorseRidingLayer");

	Params::TABP_ReverseCharacter_C_HorseRidingLayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HorseRidingLayer_0 != nullptr)
		*HorseRidingLayer_0 = std::move(Parms.HorseRidingLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.HorseRidingSwimLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       HorseRidingSwimLayer_0                                 (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::HorseRidingSwimLayer(const struct FPoseLink& InPose, struct FPoseLink* HorseRidingSwimLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "HorseRidingSwimLayer");

	Params::TABP_ReverseCharacter_C_HorseRidingSwimLayer Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (HorseRidingSwimLayer_0 != nullptr)
		*HorseRidingSwimLayer_0 = std::move(Parms.HorseRidingSwimLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.Humanoid Tail Physics
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       Humanoid_Tail_Physics_0                                (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::Humanoid_Tail_Physics(const struct FPoseLink& InPose, struct FPoseLink* Humanoid_Tail_Physics_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "Humanoid Tail Physics");

	Params::TABP_ReverseCharacter_C_Humanoid_Tail_Physics Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (Humanoid_Tail_Physics_0 != nullptr)
		*Humanoid_Tail_Physics_0 = std::move(Parms.Humanoid_Tail_Physics_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.LocomotionInAirLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 LocomotionPose                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       LocomotionInAirLayer_0                                 (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::LocomotionInAirLayer(const struct FPoseLink& LocomotionPose, struct FPoseLink* LocomotionInAirLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "LocomotionInAirLayer");

	Params::TABP_ReverseCharacter_C_LocomotionInAirLayer Parms{};

	Parms.LocomotionPose = std::move(LocomotionPose);

	UObject::ProcessEvent(Func, &Parms);

	if (LocomotionInAirLayer_0 != nullptr)
		*LocomotionInAirLayer_0 = std::move(Parms.LocomotionInAirLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.LookAtLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 AnimationPose                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       LookAtLayer_0                                          (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::LookAtLayer(const struct FPoseLink& AnimationPose, struct FPoseLink* LookAtLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "LookAtLayer");

	Params::TABP_ReverseCharacter_C_LookAtLayer Parms{};

	Parms.AnimationPose = std::move(AnimationPose);

	UObject::ProcessEvent(Func, &Parms);

	if (LookAtLayer_0 != nullptr)
		*LookAtLayer_0 = std::move(Parms.LookAtLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.LowerAndUpperBodyLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 LowerBody                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// const struct FPoseLink&                 UpperBody                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       LowerAndUpperBodyLayer_0                               (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::LowerAndUpperBodyLayer(const struct FPoseLink& LowerBody, const struct FPoseLink& UpperBody, struct FPoseLink* LowerAndUpperBodyLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "LowerAndUpperBodyLayer");

	Params::TABP_ReverseCharacter_C_LowerAndUpperBodyLayer Parms{};

	Parms.LowerBody = std::move(LowerBody);
	Parms.UpperBody = std::move(UpperBody);

	UObject::ProcessEvent(Func, &Parms);

	if (LowerAndUpperBodyLayer_0 != nullptr)
		*LowerAndUpperBodyLayer_0 = std::move(Parms.LowerAndUpperBodyLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.Pose Snapshot Layer
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       Pose_Snapshot_Layer_0                                  (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::Pose_Snapshot_Layer(const struct FPoseLink& InPose, struct FPoseLink* Pose_Snapshot_Layer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "Pose Snapshot Layer");

	Params::TABP_ReverseCharacter_C_Pose_Snapshot_Layer Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (Pose_Snapshot_Layer_0 != nullptr)
		*Pose_Snapshot_Layer_0 = std::move(Parms.Pose_Snapshot_Layer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.RecoilLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       RecoilLayer_0                                          (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::RecoilLayer(const struct FPoseLink& InPose, struct FPoseLink* RecoilLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "RecoilLayer");

	Params::TABP_ReverseCharacter_C_RecoilLayer Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (RecoilLayer_0 != nullptr)
		*RecoilLayer_0 = std::move(Parms.RecoilLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.ResurrectionLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       ResurrectionLayer_0                                    (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::ResurrectionLayer(struct FPoseLink* ResurrectionLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "ResurrectionLayer");

	Params::TABP_ReverseCharacter_C_ResurrectionLayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ResurrectionLayer_0 != nullptr)
		*ResurrectionLayer_0 = std::move(Parms.ResurrectionLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.SneakingLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       SneakingLayer_0                                        (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::SneakingLayer(struct FPoseLink* SneakingLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "SneakingLayer");

	Params::TABP_ReverseCharacter_C_SneakingLayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SneakingLayer_0 != nullptr)
		*SneakingLayer_0 = std::move(Parms.SneakingLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.SpecialAndDynamicIdleLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       SpecialAndDynamicIdleLayer_0                           (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::SpecialAndDynamicIdleLayer(const struct FPoseLink& InPose, struct FPoseLink* SpecialAndDynamicIdleLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "SpecialAndDynamicIdleLayer");

	Params::TABP_ReverseCharacter_C_SpecialAndDynamicIdleLayer Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (SpecialAndDynamicIdleLayer_0 != nullptr)
		*SpecialAndDynamicIdleLayer_0 = std::move(Parms.SpecialAndDynamicIdleLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.SpellCastingLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       SpellCastingLayer_0                                    (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::SpellCastingLayer(struct FPoseLink* SpellCastingLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "SpellCastingLayer");

	Params::TABP_ReverseCharacter_C_SpellCastingLayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SpellCastingLayer_0 != nullptr)
		*SpellCastingLayer_0 = std::move(Parms.SpellCastingLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.StaggerLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       StaggerLayer_0                                         (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::StaggerLayer(const struct FPoseLink& InPose, struct FPoseLink* StaggerLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "StaggerLayer");

	Params::TABP_ReverseCharacter_C_StaggerLayer Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (StaggerLayer_0 != nullptr)
		*StaggerLayer_0 = std::move(Parms.StaggerLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.StandingLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       StandingLayer_0                                        (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::StandingLayer(struct FPoseLink* StandingLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "StandingLayer");

	Params::TABP_ReverseCharacter_C_StandingLayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StandingLayer_0 != nullptr)
		*StandingLayer_0 = std::move(Parms.StandingLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.SwimmingLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       SwimmingLayer_0                                        (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::SwimmingLayer(struct FPoseLink* SwimmingLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "SwimmingLayer");

	Params::TABP_ReverseCharacter_C_SwimmingLayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SwimmingLayer_0 != nullptr)
		*SwimmingLayer_0 = std::move(Parms.SwimmingLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.TorchLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       TorchLayer_0                                           (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::TorchLayer(const struct FPoseLink& InPose, struct FPoseLink* TorchLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "TorchLayer");

	Params::TABP_ReverseCharacter_C_TorchLayer Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (TorchLayer_0 != nullptr)
		*TorchLayer_0 = std::move(Parms.TorchLayer_0);
}


// Function TABP_ReverseCharacter.TABP_ReverseCharacter_C.TurnInPlaceLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       TurnInPlaceLayer_0                                     (Parm, OutParm, NoDestructor)

void UTABP_ReverseCharacter_C::TurnInPlaceLayer(const struct FPoseLink& InPose, struct FPoseLink* TurnInPlaceLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TABP_ReverseCharacter_C", "TurnInPlaceLayer");

	Params::TABP_ReverseCharacter_C_TurnInPlaceLayer Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (TurnInPlaceLayer_0 != nullptr)
		*TurnInPlaceLayer_0 = std::move(Parms.TurnInPlaceLayer_0);
}

}

