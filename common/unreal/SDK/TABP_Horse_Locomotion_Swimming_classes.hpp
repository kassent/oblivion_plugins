#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TABP_Horse_Locomotion_Swimming

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "TABP_Horse_Locomotion_Swimming_structs.hpp"
#include "Struct_Horse_Locomotion_Swimming_structs.hpp"
#include "Altar_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass TABP_Horse_Locomotion_Swimming.TABP_Horse_Locomotion_Swimming_C
// 0x0360 (0x07E0 - 0x0480)
class UTABP_Horse_Locomotion_Swimming_C final : public UVLocomotionHorseAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0480(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct TABP_Horse_Locomotion_Swimming::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables; // 0x0488(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0498(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x04A0(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x04A8(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x04C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x04F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0518(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x0540(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x05B0(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x05D0(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0640(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0660(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x06A8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x06C8(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0790(0x0020)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x07B0(0x0010)()
	bool                                          K2Node_PropertyAccess_7;                           // 0x07C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_6;                           // 0x07C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_5;                           // 0x07C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C3[0x5];                                      // 0x07C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_Horse_Locomotion_Swimming      AnimSet;                                           // 0x07C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void ExecuteUbergraph_TABP_Horse_Locomotion_Swimming(int32 EntryPoint);
	void SwimmingLayer(struct FPoseLink* SwimmingLayer_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TABP_Horse_Locomotion_Swimming_C">();
	}
	static class UTABP_Horse_Locomotion_Swimming_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTABP_Horse_Locomotion_Swimming_C>();
	}
};
static_assert(alignof(UTABP_Horse_Locomotion_Swimming_C) == 0x000010, "Wrong alignment on UTABP_Horse_Locomotion_Swimming_C");
static_assert(sizeof(UTABP_Horse_Locomotion_Swimming_C) == 0x0007E0, "Wrong size on UTABP_Horse_Locomotion_Swimming_C");
static_assert(offsetof(UTABP_Horse_Locomotion_Swimming_C, UberGraphFrame) == 0x000480, "Member 'UTABP_Horse_Locomotion_Swimming_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_Swimming_C, __AnimBlueprintMutables) == 0x000488, "Member 'UTABP_Horse_Locomotion_Swimming_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_Swimming_C, AnimBlueprintExtension_PropertyAccess) == 0x000498, "Member 'UTABP_Horse_Locomotion_Swimming_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_Swimming_C, AnimBlueprintExtension_Base) == 0x0004A0, "Member 'UTABP_Horse_Locomotion_Swimming_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_Swimming_C, AnimGraphNode_Root_1) == 0x0004A8, "Member 'UTABP_Horse_Locomotion_Swimming_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_Swimming_C, AnimGraphNode_TransitionResult_2) == 0x0004C8, "Member 'UTABP_Horse_Locomotion_Swimming_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_Swimming_C, AnimGraphNode_TransitionResult_1) == 0x0004F0, "Member 'UTABP_Horse_Locomotion_Swimming_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_Swimming_C, AnimGraphNode_TransitionResult) == 0x000518, "Member 'UTABP_Horse_Locomotion_Swimming_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_Swimming_C, AnimGraphNode_BlendSpacePlayer_1) == 0x000540, "Member 'UTABP_Horse_Locomotion_Swimming_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_Swimming_C, AnimGraphNode_StateResult_2) == 0x0005B0, "Member 'UTABP_Horse_Locomotion_Swimming_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_Swimming_C, AnimGraphNode_BlendSpacePlayer) == 0x0005D0, "Member 'UTABP_Horse_Locomotion_Swimming_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_Swimming_C, AnimGraphNode_StateResult_1) == 0x000640, "Member 'UTABP_Horse_Locomotion_Swimming_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_Swimming_C, AnimGraphNode_SequencePlayer) == 0x000660, "Member 'UTABP_Horse_Locomotion_Swimming_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_Swimming_C, AnimGraphNode_StateResult) == 0x0006A8, "Member 'UTABP_Horse_Locomotion_Swimming_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_Swimming_C, AnimGraphNode_StateMachine) == 0x0006C8, "Member 'UTABP_Horse_Locomotion_Swimming_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_Swimming_C, AnimGraphNode_Root) == 0x000790, "Member 'UTABP_Horse_Locomotion_Swimming_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_Swimming_C, AnimGraphNode_LocalRefPose) == 0x0007B0, "Member 'UTABP_Horse_Locomotion_Swimming_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_Swimming_C, K2Node_PropertyAccess_7) == 0x0007C0, "Member 'UTABP_Horse_Locomotion_Swimming_C::K2Node_PropertyAccess_7' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_Swimming_C, K2Node_PropertyAccess_6) == 0x0007C1, "Member 'UTABP_Horse_Locomotion_Swimming_C::K2Node_PropertyAccess_6' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_Swimming_C, K2Node_PropertyAccess_5) == 0x0007C2, "Member 'UTABP_Horse_Locomotion_Swimming_C::K2Node_PropertyAccess_5' has a wrong offset!");
static_assert(offsetof(UTABP_Horse_Locomotion_Swimming_C, AnimSet) == 0x0007C8, "Member 'UTABP_Horse_Locomotion_Swimming_C::AnimSet' has a wrong offset!");

}

